// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EMarketDataType.proto

#include "EMarketDataType.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {
}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_EMarketDataType_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_EMarketDataType_2eproto = nullptr;
const uint32_t TableStruct_EMarketDataType_2eproto::offsets[1] = {};
static constexpr ::_pbi::MigrationSchema* schemas = nullptr;
static constexpr ::_pb::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_EMarketDataType_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025EMarketDataType.proto\022\032com.htsc.mdc.in"
  "sight.model*\241\t\n\017EMarketDataType\022\025\n\021UNKNO"
  "WN_DATA_TYPE\020\000\022\013\n\007MD_TICK\020\001\022\022\n\016MD_TRANSA"
  "CTION\020\002\022\014\n\010MD_ORDER\020\003\022\017\n\013MD_CONSTANT\020\004\022\022"
  "\n\016DYNAMIC_PACKET\020\005\022\024\n\020MD_ETF_BASICINFO\020\006"
  "\022\021\n\rMD_KLINE_1MIN\020\024\022\021\n\rMD_KLINE_5MIN\020\025\022\022"
  "\n\016MD_KLINE_15MIN\020\026\022\022\n\016MD_KLINE_30MIN\020\027\022\022"
  "\n\016MD_KLINE_60MIN\020\030\022\017\n\013MD_KLINE_1D\020\031\022\020\n\014M"
  "D_KLINE_15S\020\032\022\020\n\014MD_TWAP_1MIN\020\036\022\016\n\nMD_TW"
  "AP_1S\020\037\022\020\n\014MD_VWAP_1MIN\020(\022\016\n\nMD_VWAP_1S\020"
  ")\022\022\n\016MD_SIMPLE_TICK\0202\022\030\n\024AD_UPSDOWNS_ANA"
  "LYSIS\0203\022\031\n\025AD_INDICATORS_RANKING\0204\022\025\n\021AD"
  "_VOLUME_BYPRICE\0205\022\031\n\025AD_FUND_FLOW_ANALYS"
  "IS\0206\022\031\n\025AD_ORDERBOOK_SNAPSHOT\0207\022#\n\037AD_OR"
  "DERBOOK_SNAPSHOT_WITH_TICK\0208\022\030\n\024AD_CHIP_"
  "DISTRIBUTION\0209\022\016\n\nMD_WARRANT\020:\022\027\n\023MD_SEC"
  "URITY_LENDING\020;\022\013\n\007AD_NEWS\020<\022\025\n\021AD_STARI"
  "NG_RESULT\020=\022\027\n\023AD_DERIVED_ANALYSIS\020>\022\017\n\013"
  "MD_FI_QUOTE\020F\022\014\n\010MD_QUOTE\020G\022\017\n\013MD_QB_QUO"
  "TE\020H\022\025\n\021MD_QB_TRANSACTION\020I\022\017\n\013MD_SL_ORD"
  "ER\020J\022\025\n\021MD_SL_TRANSACTION\020K\022\020\n\014MD_USA_OR"
  "DER\020L\022\026\n\022MD_USA_TRANSACTION\020M\022\025\n\021MD_HK_G"
  "REY_MARKET\020N\022\032\n\026MD_SL_INDICATIVE_QUOTE\020O"
  "\022\024\n\020MD_SL_STATISTICS\020P\022\020\n\014MD_USA_QUOTE\020Q"
  "\022\024\n\020MD_SL_ESTIMATION\020R\022\021\n\rMD_CNEX_QUOTE\020"
  "S\022\020\n\014MD_CNEX_DEAL\020T\022#\n\037REPLAY_MD_TICK_WI"
  "TH_TRANSACTION\020e\022\035\n\031REPLAY_MD_TICK_WITH_"
  "ORDER\020f\022-\n)REPLAY_MD_TICK_WITH_TRANSACTI"
  "ON_AND_ORDER\020g\022\022\n\016REPLAY_MD_TICK\020h\022\031\n\025RE"
  "PLAY_MD_TRANSACTION\020i\022\023\n\017REPLAY_MD_ORDER"
  "\020j\022#\n\037REPLAY_MD_TRANSACTION_AND_ORDER\020kB"
  "7\n\032com.htsc.mdc.insight.modelB\024EMarketDa"
  "taTypeProtoH\001\240\001\001b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_EMarketDataType_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_EMarketDataType_2eproto = {
    false, false, 1304, descriptor_table_protodef_EMarketDataType_2eproto,
    "EMarketDataType.proto",
    &descriptor_table_EMarketDataType_2eproto_once, nullptr, 0, 0,
    schemas, file_default_instances, TableStruct_EMarketDataType_2eproto::offsets,
    nullptr, file_level_enum_descriptors_EMarketDataType_2eproto,
    file_level_service_descriptors_EMarketDataType_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_EMarketDataType_2eproto_getter() {
  return &descriptor_table_EMarketDataType_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_EMarketDataType_2eproto(&descriptor_table_EMarketDataType_2eproto);
namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EMarketDataType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_EMarketDataType_2eproto);
  return file_level_enum_descriptors_EMarketDataType_2eproto[0];
}
bool EMarketDataType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 30:
    case 31:
    case 40:
    case 41:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MDFuture.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_MDFuture_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_MDFuture_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "ESecurityIDSource.pb.h"
#include "ESecurityType.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_MDFuture_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_MDFuture_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_MDFuture_2eproto;
namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {
class MDFuture;
struct MDFutureDefaultTypeInternal;
extern MDFutureDefaultTypeInternal _MDFuture_default_instance_;
}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> ::com::htsc::mdc::insight::model::MDFuture* Arena::CreateMaybeMessage<::com::htsc::mdc::insight::model::MDFuture>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {

// ===================================================================

class MDFuture final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.htsc.mdc.insight.model.MDFuture) */ {
 public:
  inline MDFuture() : MDFuture(nullptr) {}
  ~MDFuture() override;
  explicit PROTOBUF_CONSTEXPR MDFuture(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MDFuture(const MDFuture& from);
  MDFuture(MDFuture&& from) noexcept
    : MDFuture() {
    *this = ::std::move(from);
  }

  inline MDFuture& operator=(const MDFuture& from) {
    CopyFrom(from);
    return *this;
  }
  inline MDFuture& operator=(MDFuture&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MDFuture& default_instance() {
    return *internal_default_instance();
  }
  static inline const MDFuture* internal_default_instance() {
    return reinterpret_cast<const MDFuture*>(
               &_MDFuture_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MDFuture& a, MDFuture& b) {
    a.Swap(&b);
  }
  inline void Swap(MDFuture* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MDFuture* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MDFuture* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MDFuture>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MDFuture& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MDFuture& from) {
    MDFuture::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MDFuture* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.htsc.mdc.insight.model.MDFuture";
  }
  protected:
  explicit MDFuture(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBuyPriceQueueFieldNumber = 51,
    kBuyOrderQtyQueueFieldNumber = 52,
    kSellPriceQueueFieldNumber = 53,
    kSellOrderQtyQueueFieldNumber = 54,
    kBuyOrderQueueFieldNumber = 55,
    kSellOrderQueueFieldNumber = 56,
    kBuyNumOrdersQueueFieldNumber = 57,
    kSellNumOrdersQueueFieldNumber = 58,
    kHTSCSecurityIDFieldNumber = 1,
    kTradingPhaseCodeFieldNumber = 5,
    kCommodityContractNumberFieldNumber = 36,
    kMDDateFieldNumber = 2,
    kMDTimeFieldNumber = 3,
    kDataTimestampFieldNumber = 4,
    kSecurityIDSourceFieldNumber = 6,
    kSecurityTypeFieldNumber = 7,
    kMaxPxFieldNumber = 8,
    kMinPxFieldNumber = 9,
    kPreClosePxFieldNumber = 10,
    kNumTradesFieldNumber = 11,
    kTotalVolumeTradeFieldNumber = 12,
    kTotalValueTradeFieldNumber = 13,
    kLastPxFieldNumber = 14,
    kOpenPxFieldNumber = 15,
    kClosePxFieldNumber = 16,
    kHighPxFieldNumber = 17,
    kLowPxFieldNumber = 18,
    kPreOpenInterestFieldNumber = 20,
    kPreSettlePriceFieldNumber = 21,
    kOpenInterestFieldNumber = 22,
    kSettlePriceFieldNumber = 23,
    kPreDeltaFieldNumber = 24,
    kCurrDeltaFieldNumber = 25,
    kMiddlePxFieldNumber = 26,
    kImpliedBuyPxFieldNumber = 27,
    kImpliedBuyQtyFieldNumber = 28,
    kTradingDateFieldNumber = 19,
    kExchangeDateFieldNumber = 37,
    kImpliedSellPxFieldNumber = 29,
    kImpliedSellQtyFieldNumber = 30,
    kPositionTrendFieldNumber = 31,
    kChangeSpeedFieldNumber = 32,
    kChangeRateFieldNumber = 33,
    kChangeValueFieldNumber = 34,
    kSwingFieldNumber = 35,
    kExchangeTimeFieldNumber = 38,
    kChannelNoFieldNumber = 50,
    kDataMultiplePowerOf10FieldNumber = 59,
  };
  // repeated int64 BuyPriceQueue = 51 [packed = true];
  int buypricequeue_size() const;
  private:
  int _internal_buypricequeue_size() const;
  public:
  void clear_buypricequeue();
  private:
  int64_t _internal_buypricequeue(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_buypricequeue() const;
  void _internal_add_buypricequeue(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_buypricequeue();
  public:
  int64_t buypricequeue(int index) const;
  void set_buypricequeue(int index, int64_t value);
  void add_buypricequeue(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      buypricequeue() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_buypricequeue();

  // repeated int64 BuyOrderQtyQueue = 52 [packed = true];
  int buyorderqtyqueue_size() const;
  private:
  int _internal_buyorderqtyqueue_size() const;
  public:
  void clear_buyorderqtyqueue();
  private:
  int64_t _internal_buyorderqtyqueue(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_buyorderqtyqueue() const;
  void _internal_add_buyorderqtyqueue(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_buyorderqtyqueue();
  public:
  int64_t buyorderqtyqueue(int index) const;
  void set_buyorderqtyqueue(int index, int64_t value);
  void add_buyorderqtyqueue(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      buyorderqtyqueue() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_buyorderqtyqueue();

  // repeated int64 SellPriceQueue = 53 [packed = true];
  int sellpricequeue_size() const;
  private:
  int _internal_sellpricequeue_size() const;
  public:
  void clear_sellpricequeue();
  private:
  int64_t _internal_sellpricequeue(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_sellpricequeue() const;
  void _internal_add_sellpricequeue(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_sellpricequeue();
  public:
  int64_t sellpricequeue(int index) const;
  void set_sellpricequeue(int index, int64_t value);
  void add_sellpricequeue(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      sellpricequeue() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_sellpricequeue();

  // repeated int64 SellOrderQtyQueue = 54 [packed = true];
  int sellorderqtyqueue_size() const;
  private:
  int _internal_sellorderqtyqueue_size() const;
  public:
  void clear_sellorderqtyqueue();
  private:
  int64_t _internal_sellorderqtyqueue(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_sellorderqtyqueue() const;
  void _internal_add_sellorderqtyqueue(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_sellorderqtyqueue();
  public:
  int64_t sellorderqtyqueue(int index) const;
  void set_sellorderqtyqueue(int index, int64_t value);
  void add_sellorderqtyqueue(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      sellorderqtyqueue() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_sellorderqtyqueue();

  // repeated int64 BuyOrderQueue = 55 [packed = true];
  int buyorderqueue_size() const;
  private:
  int _internal_buyorderqueue_size() const;
  public:
  void clear_buyorderqueue();
  private:
  int64_t _internal_buyorderqueue(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_buyorderqueue() const;
  void _internal_add_buyorderqueue(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_buyorderqueue();
  public:
  int64_t buyorderqueue(int index) const;
  void set_buyorderqueue(int index, int64_t value);
  void add_buyorderqueue(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      buyorderqueue() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_buyorderqueue();

  // repeated int64 SellOrderQueue = 56 [packed = true];
  int sellorderqueue_size() const;
  private:
  int _internal_sellorderqueue_size() const;
  public:
  void clear_sellorderqueue();
  private:
  int64_t _internal_sellorderqueue(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_sellorderqueue() const;
  void _internal_add_sellorderqueue(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_sellorderqueue();
  public:
  int64_t sellorderqueue(int index) const;
  void set_sellorderqueue(int index, int64_t value);
  void add_sellorderqueue(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      sellorderqueue() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_sellorderqueue();

  // repeated int64 BuyNumOrdersQueue = 57 [packed = true];
  int buynumordersqueue_size() const;
  private:
  int _internal_buynumordersqueue_size() const;
  public:
  void clear_buynumordersqueue();
  private:
  int64_t _internal_buynumordersqueue(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_buynumordersqueue() const;
  void _internal_add_buynumordersqueue(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_buynumordersqueue();
  public:
  int64_t buynumordersqueue(int index) const;
  void set_buynumordersqueue(int index, int64_t value);
  void add_buynumordersqueue(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      buynumordersqueue() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_buynumordersqueue();

  // repeated int64 SellNumOrdersQueue = 58 [packed = true];
  int sellnumordersqueue_size() const;
  private:
  int _internal_sellnumordersqueue_size() const;
  public:
  void clear_sellnumordersqueue();
  private:
  int64_t _internal_sellnumordersqueue(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_sellnumordersqueue() const;
  void _internal_add_sellnumordersqueue(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_sellnumordersqueue();
  public:
  int64_t sellnumordersqueue(int index) const;
  void set_sellnumordersqueue(int index, int64_t value);
  void add_sellnumordersqueue(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      sellnumordersqueue() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_sellnumordersqueue();

  // string HTSCSecurityID = 1;
  void clear_htscsecurityid();
  const std::string& htscsecurityid() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_htscsecurityid(ArgT0&& arg0, ArgT... args);
  std::string* mutable_htscsecurityid();
  PROTOBUF_NODISCARD std::string* release_htscsecurityid();
  void set_allocated_htscsecurityid(std::string* htscsecurityid);
  private:
  const std::string& _internal_htscsecurityid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_htscsecurityid(const std::string& value);
  std::string* _internal_mutable_htscsecurityid();
  public:

  // string TradingPhaseCode = 5;
  void clear_tradingphasecode();
  const std::string& tradingphasecode() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_tradingphasecode(ArgT0&& arg0, ArgT... args);
  std::string* mutable_tradingphasecode();
  PROTOBUF_NODISCARD std::string* release_tradingphasecode();
  void set_allocated_tradingphasecode(std::string* tradingphasecode);
  private:
  const std::string& _internal_tradingphasecode() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tradingphasecode(const std::string& value);
  std::string* _internal_mutable_tradingphasecode();
  public:

  // string CommodityContractNumber = 36;
  void clear_commoditycontractnumber();
  const std::string& commoditycontractnumber() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_commoditycontractnumber(ArgT0&& arg0, ArgT... args);
  std::string* mutable_commoditycontractnumber();
  PROTOBUF_NODISCARD std::string* release_commoditycontractnumber();
  void set_allocated_commoditycontractnumber(std::string* commoditycontractnumber);
  private:
  const std::string& _internal_commoditycontractnumber() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_commoditycontractnumber(const std::string& value);
  std::string* _internal_mutable_commoditycontractnumber();
  public:

  // int32 MDDate = 2;
  void clear_mddate();
  int32_t mddate() const;
  void set_mddate(int32_t value);
  private:
  int32_t _internal_mddate() const;
  void _internal_set_mddate(int32_t value);
  public:

  // int32 MDTime = 3;
  void clear_mdtime();
  int32_t mdtime() const;
  void set_mdtime(int32_t value);
  private:
  int32_t _internal_mdtime() const;
  void _internal_set_mdtime(int32_t value);
  public:

  // int64 DataTimestamp = 4;
  void clear_datatimestamp();
  int64_t datatimestamp() const;
  void set_datatimestamp(int64_t value);
  private:
  int64_t _internal_datatimestamp() const;
  void _internal_set_datatimestamp(int64_t value);
  public:

  // .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
  void clear_securityidsource();
  ::com::htsc::mdc::model::ESecurityIDSource securityidsource() const;
  void set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value);
  private:
  ::com::htsc::mdc::model::ESecurityIDSource _internal_securityidsource() const;
  void _internal_set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value);
  public:

  // .com.htsc.mdc.model.ESecurityType securityType = 7;
  void clear_securitytype();
  ::com::htsc::mdc::model::ESecurityType securitytype() const;
  void set_securitytype(::com::htsc::mdc::model::ESecurityType value);
  private:
  ::com::htsc::mdc::model::ESecurityType _internal_securitytype() const;
  void _internal_set_securitytype(::com::htsc::mdc::model::ESecurityType value);
  public:

  // int64 MaxPx = 8;
  void clear_maxpx();
  int64_t maxpx() const;
  void set_maxpx(int64_t value);
  private:
  int64_t _internal_maxpx() const;
  void _internal_set_maxpx(int64_t value);
  public:

  // int64 MinPx = 9;
  void clear_minpx();
  int64_t minpx() const;
  void set_minpx(int64_t value);
  private:
  int64_t _internal_minpx() const;
  void _internal_set_minpx(int64_t value);
  public:

  // int64 PreClosePx = 10;
  void clear_preclosepx();
  int64_t preclosepx() const;
  void set_preclosepx(int64_t value);
  private:
  int64_t _internal_preclosepx() const;
  void _internal_set_preclosepx(int64_t value);
  public:

  // int64 NumTrades = 11;
  void clear_numtrades();
  int64_t numtrades() const;
  void set_numtrades(int64_t value);
  private:
  int64_t _internal_numtrades() const;
  void _internal_set_numtrades(int64_t value);
  public:

  // int64 TotalVolumeTrade = 12;
  void clear_totalvolumetrade();
  int64_t totalvolumetrade() const;
  void set_totalvolumetrade(int64_t value);
  private:
  int64_t _internal_totalvolumetrade() const;
  void _internal_set_totalvolumetrade(int64_t value);
  public:

  // int64 TotalValueTrade = 13;
  void clear_totalvaluetrade();
  int64_t totalvaluetrade() const;
  void set_totalvaluetrade(int64_t value);
  private:
  int64_t _internal_totalvaluetrade() const;
  void _internal_set_totalvaluetrade(int64_t value);
  public:

  // int64 LastPx = 14;
  void clear_lastpx();
  int64_t lastpx() const;
  void set_lastpx(int64_t value);
  private:
  int64_t _internal_lastpx() const;
  void _internal_set_lastpx(int64_t value);
  public:

  // int64 OpenPx = 15;
  void clear_openpx();
  int64_t openpx() const;
  void set_openpx(int64_t value);
  private:
  int64_t _internal_openpx() const;
  void _internal_set_openpx(int64_t value);
  public:

  // int64 ClosePx = 16;
  void clear_closepx();
  int64_t closepx() const;
  void set_closepx(int64_t value);
  private:
  int64_t _internal_closepx() const;
  void _internal_set_closepx(int64_t value);
  public:

  // int64 HighPx = 17;
  void clear_highpx();
  int64_t highpx() const;
  void set_highpx(int64_t value);
  private:
  int64_t _internal_highpx() const;
  void _internal_set_highpx(int64_t value);
  public:

  // int64 LowPx = 18;
  void clear_lowpx();
  int64_t lowpx() const;
  void set_lowpx(int64_t value);
  private:
  int64_t _internal_lowpx() const;
  void _internal_set_lowpx(int64_t value);
  public:

  // int64 PreOpenInterest = 20;
  void clear_preopeninterest();
  int64_t preopeninterest() const;
  void set_preopeninterest(int64_t value);
  private:
  int64_t _internal_preopeninterest() const;
  void _internal_set_preopeninterest(int64_t value);
  public:

  // int64 PreSettlePrice = 21;
  void clear_presettleprice();
  int64_t presettleprice() const;
  void set_presettleprice(int64_t value);
  private:
  int64_t _internal_presettleprice() const;
  void _internal_set_presettleprice(int64_t value);
  public:

  // int64 OpenInterest = 22;
  void clear_openinterest();
  int64_t openinterest() const;
  void set_openinterest(int64_t value);
  private:
  int64_t _internal_openinterest() const;
  void _internal_set_openinterest(int64_t value);
  public:

  // int64 SettlePrice = 23;
  void clear_settleprice();
  int64_t settleprice() const;
  void set_settleprice(int64_t value);
  private:
  int64_t _internal_settleprice() const;
  void _internal_set_settleprice(int64_t value);
  public:

  // int64 PreDelta = 24;
  void clear_predelta();
  int64_t predelta() const;
  void set_predelta(int64_t value);
  private:
  int64_t _internal_predelta() const;
  void _internal_set_predelta(int64_t value);
  public:

  // int64 CurrDelta = 25;
  void clear_currdelta();
  int64_t currdelta() const;
  void set_currdelta(int64_t value);
  private:
  int64_t _internal_currdelta() const;
  void _internal_set_currdelta(int64_t value);
  public:

  // int64 MiddlePx = 26;
  void clear_middlepx();
  int64_t middlepx() const;
  void set_middlepx(int64_t value);
  private:
  int64_t _internal_middlepx() const;
  void _internal_set_middlepx(int64_t value);
  public:

  // int64 ImpliedBuyPx = 27;
  void clear_impliedbuypx();
  int64_t impliedbuypx() const;
  void set_impliedbuypx(int64_t value);
  private:
  int64_t _internal_impliedbuypx() const;
  void _internal_set_impliedbuypx(int64_t value);
  public:

  // int64 ImpliedBuyQty = 28;
  void clear_impliedbuyqty();
  int64_t impliedbuyqty() const;
  void set_impliedbuyqty(int64_t value);
  private:
  int64_t _internal_impliedbuyqty() const;
  void _internal_set_impliedbuyqty(int64_t value);
  public:

  // int32 TradingDate = 19;
  void clear_tradingdate();
  int32_t tradingdate() const;
  void set_tradingdate(int32_t value);
  private:
  int32_t _internal_tradingdate() const;
  void _internal_set_tradingdate(int32_t value);
  public:

  // int32 ExchangeDate = 37;
  void clear_exchangedate();
  int32_t exchangedate() const;
  void set_exchangedate(int32_t value);
  private:
  int32_t _internal_exchangedate() const;
  void _internal_set_exchangedate(int32_t value);
  public:

  // int64 ImpliedSellPx = 29;
  void clear_impliedsellpx();
  int64_t impliedsellpx() const;
  void set_impliedsellpx(int64_t value);
  private:
  int64_t _internal_impliedsellpx() const;
  void _internal_set_impliedsellpx(int64_t value);
  public:

  // int64 ImpliedSellQty = 30;
  void clear_impliedsellqty();
  int64_t impliedsellqty() const;
  void set_impliedsellqty(int64_t value);
  private:
  int64_t _internal_impliedsellqty() const;
  void _internal_set_impliedsellqty(int64_t value);
  public:

  // int64 PositionTrend = 31;
  void clear_positiontrend();
  int64_t positiontrend() const;
  void set_positiontrend(int64_t value);
  private:
  int64_t _internal_positiontrend() const;
  void _internal_set_positiontrend(int64_t value);
  public:

  // int64 ChangeSpeed = 32;
  void clear_changespeed();
  int64_t changespeed() const;
  void set_changespeed(int64_t value);
  private:
  int64_t _internal_changespeed() const;
  void _internal_set_changespeed(int64_t value);
  public:

  // int64 ChangeRate = 33;
  void clear_changerate();
  int64_t changerate() const;
  void set_changerate(int64_t value);
  private:
  int64_t _internal_changerate() const;
  void _internal_set_changerate(int64_t value);
  public:

  // int64 ChangeValue = 34;
  void clear_changevalue();
  int64_t changevalue() const;
  void set_changevalue(int64_t value);
  private:
  int64_t _internal_changevalue() const;
  void _internal_set_changevalue(int64_t value);
  public:

  // int64 Swing = 35;
  void clear_swing();
  int64_t swing() const;
  void set_swing(int64_t value);
  private:
  int64_t _internal_swing() const;
  void _internal_set_swing(int64_t value);
  public:

  // int32 ExchangeTime = 38;
  void clear_exchangetime();
  int32_t exchangetime() const;
  void set_exchangetime(int32_t value);
  private:
  int32_t _internal_exchangetime() const;
  void _internal_set_exchangetime(int32_t value);
  public:

  // int32 ChannelNo = 50;
  void clear_channelno();
  int32_t channelno() const;
  void set_channelno(int32_t value);
  private:
  int32_t _internal_channelno() const;
  void _internal_set_channelno(int32_t value);
  public:

  // int32 DataMultiplePowerOf10 = 59;
  void clear_datamultiplepowerof10();
  int32_t datamultiplepowerof10() const;
  void set_datamultiplepowerof10(int32_t value);
  private:
  int32_t _internal_datamultiplepowerof10() const;
  void _internal_set_datamultiplepowerof10(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:com.htsc.mdc.insight.model.MDFuture)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > buypricequeue_;
    mutable std::atomic<int> _buypricequeue_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > buyorderqtyqueue_;
    mutable std::atomic<int> _buyorderqtyqueue_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > sellpricequeue_;
    mutable std::atomic<int> _sellpricequeue_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > sellorderqtyqueue_;
    mutable std::atomic<int> _sellorderqtyqueue_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > buyorderqueue_;
    mutable std::atomic<int> _buyorderqueue_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > sellorderqueue_;
    mutable std::atomic<int> _sellorderqueue_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > buynumordersqueue_;
    mutable std::atomic<int> _buynumordersqueue_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > sellnumordersqueue_;
    mutable std::atomic<int> _sellnumordersqueue_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr htscsecurityid_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tradingphasecode_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr commoditycontractnumber_;
    int32_t mddate_;
    int32_t mdtime_;
    int64_t datatimestamp_;
    int securityidsource_;
    int securitytype_;
    int64_t maxpx_;
    int64_t minpx_;
    int64_t preclosepx_;
    int64_t numtrades_;
    int64_t totalvolumetrade_;
    int64_t totalvaluetrade_;
    int64_t lastpx_;
    int64_t openpx_;
    int64_t closepx_;
    int64_t highpx_;
    int64_t lowpx_;
    int64_t preopeninterest_;
    int64_t presettleprice_;
    int64_t openinterest_;
    int64_t settleprice_;
    int64_t predelta_;
    int64_t currdelta_;
    int64_t middlepx_;
    int64_t impliedbuypx_;
    int64_t impliedbuyqty_;
    int32_t tradingdate_;
    int32_t exchangedate_;
    int64_t impliedsellpx_;
    int64_t impliedsellqty_;
    int64_t positiontrend_;
    int64_t changespeed_;
    int64_t changerate_;
    int64_t changevalue_;
    int64_t swing_;
    int32_t exchangetime_;
    int32_t channelno_;
    int32_t datamultiplepowerof10_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MDFuture_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MDFuture

// string HTSCSecurityID = 1;
inline void MDFuture::clear_htscsecurityid() {
  _impl_.htscsecurityid_.ClearToEmpty();
}
inline const std::string& MDFuture::htscsecurityid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.HTSCSecurityID)
  return _internal_htscsecurityid();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void MDFuture::set_htscsecurityid(ArgT0&& arg0, ArgT... args) {
 
 _impl_.htscsecurityid_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.HTSCSecurityID)
}
inline std::string* MDFuture::mutable_htscsecurityid() {
  std::string* _s = _internal_mutable_htscsecurityid();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDFuture.HTSCSecurityID)
  return _s;
}
inline const std::string& MDFuture::_internal_htscsecurityid() const {
  return _impl_.htscsecurityid_.Get();
}
inline void MDFuture::_internal_set_htscsecurityid(const std::string& value) {
  
  _impl_.htscsecurityid_.Set(value, GetArenaForAllocation());
}
inline std::string* MDFuture::_internal_mutable_htscsecurityid() {
  
  return _impl_.htscsecurityid_.Mutable(GetArenaForAllocation());
}
inline std::string* MDFuture::release_htscsecurityid() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDFuture.HTSCSecurityID)
  return _impl_.htscsecurityid_.Release();
}
inline void MDFuture::set_allocated_htscsecurityid(std::string* htscsecurityid) {
  if (htscsecurityid != nullptr) {
    
  } else {
    
  }
  _impl_.htscsecurityid_.SetAllocated(htscsecurityid, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.htscsecurityid_.IsDefault()) {
    _impl_.htscsecurityid_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDFuture.HTSCSecurityID)
}

// int32 MDDate = 2;
inline void MDFuture::clear_mddate() {
  _impl_.mddate_ = 0;
}
inline int32_t MDFuture::_internal_mddate() const {
  return _impl_.mddate_;
}
inline int32_t MDFuture::mddate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.MDDate)
  return _internal_mddate();
}
inline void MDFuture::_internal_set_mddate(int32_t value) {
  
  _impl_.mddate_ = value;
}
inline void MDFuture::set_mddate(int32_t value) {
  _internal_set_mddate(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.MDDate)
}

// int32 MDTime = 3;
inline void MDFuture::clear_mdtime() {
  _impl_.mdtime_ = 0;
}
inline int32_t MDFuture::_internal_mdtime() const {
  return _impl_.mdtime_;
}
inline int32_t MDFuture::mdtime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.MDTime)
  return _internal_mdtime();
}
inline void MDFuture::_internal_set_mdtime(int32_t value) {
  
  _impl_.mdtime_ = value;
}
inline void MDFuture::set_mdtime(int32_t value) {
  _internal_set_mdtime(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.MDTime)
}

// int64 DataTimestamp = 4;
inline void MDFuture::clear_datatimestamp() {
  _impl_.datatimestamp_ = int64_t{0};
}
inline int64_t MDFuture::_internal_datatimestamp() const {
  return _impl_.datatimestamp_;
}
inline int64_t MDFuture::datatimestamp() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.DataTimestamp)
  return _internal_datatimestamp();
}
inline void MDFuture::_internal_set_datatimestamp(int64_t value) {
  
  _impl_.datatimestamp_ = value;
}
inline void MDFuture::set_datatimestamp(int64_t value) {
  _internal_set_datatimestamp(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.DataTimestamp)
}

// string TradingPhaseCode = 5;
inline void MDFuture::clear_tradingphasecode() {
  _impl_.tradingphasecode_.ClearToEmpty();
}
inline const std::string& MDFuture::tradingphasecode() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.TradingPhaseCode)
  return _internal_tradingphasecode();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void MDFuture::set_tradingphasecode(ArgT0&& arg0, ArgT... args) {
 
 _impl_.tradingphasecode_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.TradingPhaseCode)
}
inline std::string* MDFuture::mutable_tradingphasecode() {
  std::string* _s = _internal_mutable_tradingphasecode();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDFuture.TradingPhaseCode)
  return _s;
}
inline const std::string& MDFuture::_internal_tradingphasecode() const {
  return _impl_.tradingphasecode_.Get();
}
inline void MDFuture::_internal_set_tradingphasecode(const std::string& value) {
  
  _impl_.tradingphasecode_.Set(value, GetArenaForAllocation());
}
inline std::string* MDFuture::_internal_mutable_tradingphasecode() {
  
  return _impl_.tradingphasecode_.Mutable(GetArenaForAllocation());
}
inline std::string* MDFuture::release_tradingphasecode() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDFuture.TradingPhaseCode)
  return _impl_.tradingphasecode_.Release();
}
inline void MDFuture::set_allocated_tradingphasecode(std::string* tradingphasecode) {
  if (tradingphasecode != nullptr) {
    
  } else {
    
  }
  _impl_.tradingphasecode_.SetAllocated(tradingphasecode, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.tradingphasecode_.IsDefault()) {
    _impl_.tradingphasecode_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDFuture.TradingPhaseCode)
}

// .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
inline void MDFuture::clear_securityidsource() {
  _impl_.securityidsource_ = 0;
}
inline ::com::htsc::mdc::model::ESecurityIDSource MDFuture::_internal_securityidsource() const {
  return static_cast< ::com::htsc::mdc::model::ESecurityIDSource >(_impl_.securityidsource_);
}
inline ::com::htsc::mdc::model::ESecurityIDSource MDFuture::securityidsource() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.securityIDSource)
  return _internal_securityidsource();
}
inline void MDFuture::_internal_set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value) {
  
  _impl_.securityidsource_ = value;
}
inline void MDFuture::set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value) {
  _internal_set_securityidsource(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.securityIDSource)
}

// .com.htsc.mdc.model.ESecurityType securityType = 7;
inline void MDFuture::clear_securitytype() {
  _impl_.securitytype_ = 0;
}
inline ::com::htsc::mdc::model::ESecurityType MDFuture::_internal_securitytype() const {
  return static_cast< ::com::htsc::mdc::model::ESecurityType >(_impl_.securitytype_);
}
inline ::com::htsc::mdc::model::ESecurityType MDFuture::securitytype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.securityType)
  return _internal_securitytype();
}
inline void MDFuture::_internal_set_securitytype(::com::htsc::mdc::model::ESecurityType value) {
  
  _impl_.securitytype_ = value;
}
inline void MDFuture::set_securitytype(::com::htsc::mdc::model::ESecurityType value) {
  _internal_set_securitytype(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.securityType)
}

// int64 MaxPx = 8;
inline void MDFuture::clear_maxpx() {
  _impl_.maxpx_ = int64_t{0};
}
inline int64_t MDFuture::_internal_maxpx() const {
  return _impl_.maxpx_;
}
inline int64_t MDFuture::maxpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.MaxPx)
  return _internal_maxpx();
}
inline void MDFuture::_internal_set_maxpx(int64_t value) {
  
  _impl_.maxpx_ = value;
}
inline void MDFuture::set_maxpx(int64_t value) {
  _internal_set_maxpx(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.MaxPx)
}

// int64 MinPx = 9;
inline void MDFuture::clear_minpx() {
  _impl_.minpx_ = int64_t{0};
}
inline int64_t MDFuture::_internal_minpx() const {
  return _impl_.minpx_;
}
inline int64_t MDFuture::minpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.MinPx)
  return _internal_minpx();
}
inline void MDFuture::_internal_set_minpx(int64_t value) {
  
  _impl_.minpx_ = value;
}
inline void MDFuture::set_minpx(int64_t value) {
  _internal_set_minpx(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.MinPx)
}

// int64 PreClosePx = 10;
inline void MDFuture::clear_preclosepx() {
  _impl_.preclosepx_ = int64_t{0};
}
inline int64_t MDFuture::_internal_preclosepx() const {
  return _impl_.preclosepx_;
}
inline int64_t MDFuture::preclosepx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.PreClosePx)
  return _internal_preclosepx();
}
inline void MDFuture::_internal_set_preclosepx(int64_t value) {
  
  _impl_.preclosepx_ = value;
}
inline void MDFuture::set_preclosepx(int64_t value) {
  _internal_set_preclosepx(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.PreClosePx)
}

// int64 NumTrades = 11;
inline void MDFuture::clear_numtrades() {
  _impl_.numtrades_ = int64_t{0};
}
inline int64_t MDFuture::_internal_numtrades() const {
  return _impl_.numtrades_;
}
inline int64_t MDFuture::numtrades() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.NumTrades)
  return _internal_numtrades();
}
inline void MDFuture::_internal_set_numtrades(int64_t value) {
  
  _impl_.numtrades_ = value;
}
inline void MDFuture::set_numtrades(int64_t value) {
  _internal_set_numtrades(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.NumTrades)
}

// int64 TotalVolumeTrade = 12;
inline void MDFuture::clear_totalvolumetrade() {
  _impl_.totalvolumetrade_ = int64_t{0};
}
inline int64_t MDFuture::_internal_totalvolumetrade() const {
  return _impl_.totalvolumetrade_;
}
inline int64_t MDFuture::totalvolumetrade() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.TotalVolumeTrade)
  return _internal_totalvolumetrade();
}
inline void MDFuture::_internal_set_totalvolumetrade(int64_t value) {
  
  _impl_.totalvolumetrade_ = value;
}
inline void MDFuture::set_totalvolumetrade(int64_t value) {
  _internal_set_totalvolumetrade(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.TotalVolumeTrade)
}

// int64 TotalValueTrade = 13;
inline void MDFuture::clear_totalvaluetrade() {
  _impl_.totalvaluetrade_ = int64_t{0};
}
inline int64_t MDFuture::_internal_totalvaluetrade() const {
  return _impl_.totalvaluetrade_;
}
inline int64_t MDFuture::totalvaluetrade() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.TotalValueTrade)
  return _internal_totalvaluetrade();
}
inline void MDFuture::_internal_set_totalvaluetrade(int64_t value) {
  
  _impl_.totalvaluetrade_ = value;
}
inline void MDFuture::set_totalvaluetrade(int64_t value) {
  _internal_set_totalvaluetrade(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.TotalValueTrade)
}

// int64 LastPx = 14;
inline void MDFuture::clear_lastpx() {
  _impl_.lastpx_ = int64_t{0};
}
inline int64_t MDFuture::_internal_lastpx() const {
  return _impl_.lastpx_;
}
inline int64_t MDFuture::lastpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.LastPx)
  return _internal_lastpx();
}
inline void MDFuture::_internal_set_lastpx(int64_t value) {
  
  _impl_.lastpx_ = value;
}
inline void MDFuture::set_lastpx(int64_t value) {
  _internal_set_lastpx(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.LastPx)
}

// int64 OpenPx = 15;
inline void MDFuture::clear_openpx() {
  _impl_.openpx_ = int64_t{0};
}
inline int64_t MDFuture::_internal_openpx() const {
  return _impl_.openpx_;
}
inline int64_t MDFuture::openpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.OpenPx)
  return _internal_openpx();
}
inline void MDFuture::_internal_set_openpx(int64_t value) {
  
  _impl_.openpx_ = value;
}
inline void MDFuture::set_openpx(int64_t value) {
  _internal_set_openpx(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.OpenPx)
}

// int64 ClosePx = 16;
inline void MDFuture::clear_closepx() {
  _impl_.closepx_ = int64_t{0};
}
inline int64_t MDFuture::_internal_closepx() const {
  return _impl_.closepx_;
}
inline int64_t MDFuture::closepx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.ClosePx)
  return _internal_closepx();
}
inline void MDFuture::_internal_set_closepx(int64_t value) {
  
  _impl_.closepx_ = value;
}
inline void MDFuture::set_closepx(int64_t value) {
  _internal_set_closepx(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.ClosePx)
}

// int64 HighPx = 17;
inline void MDFuture::clear_highpx() {
  _impl_.highpx_ = int64_t{0};
}
inline int64_t MDFuture::_internal_highpx() const {
  return _impl_.highpx_;
}
inline int64_t MDFuture::highpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.HighPx)
  return _internal_highpx();
}
inline void MDFuture::_internal_set_highpx(int64_t value) {
  
  _impl_.highpx_ = value;
}
inline void MDFuture::set_highpx(int64_t value) {
  _internal_set_highpx(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.HighPx)
}

// int64 LowPx = 18;
inline void MDFuture::clear_lowpx() {
  _impl_.lowpx_ = int64_t{0};
}
inline int64_t MDFuture::_internal_lowpx() const {
  return _impl_.lowpx_;
}
inline int64_t MDFuture::lowpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.LowPx)
  return _internal_lowpx();
}
inline void MDFuture::_internal_set_lowpx(int64_t value) {
  
  _impl_.lowpx_ = value;
}
inline void MDFuture::set_lowpx(int64_t value) {
  _internal_set_lowpx(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.LowPx)
}

// int32 TradingDate = 19;
inline void MDFuture::clear_tradingdate() {
  _impl_.tradingdate_ = 0;
}
inline int32_t MDFuture::_internal_tradingdate() const {
  return _impl_.tradingdate_;
}
inline int32_t MDFuture::tradingdate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.TradingDate)
  return _internal_tradingdate();
}
inline void MDFuture::_internal_set_tradingdate(int32_t value) {
  
  _impl_.tradingdate_ = value;
}
inline void MDFuture::set_tradingdate(int32_t value) {
  _internal_set_tradingdate(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.TradingDate)
}

// int64 PreOpenInterest = 20;
inline void MDFuture::clear_preopeninterest() {
  _impl_.preopeninterest_ = int64_t{0};
}
inline int64_t MDFuture::_internal_preopeninterest() const {
  return _impl_.preopeninterest_;
}
inline int64_t MDFuture::preopeninterest() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.PreOpenInterest)
  return _internal_preopeninterest();
}
inline void MDFuture::_internal_set_preopeninterest(int64_t value) {
  
  _impl_.preopeninterest_ = value;
}
inline void MDFuture::set_preopeninterest(int64_t value) {
  _internal_set_preopeninterest(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.PreOpenInterest)
}

// int64 PreSettlePrice = 21;
inline void MDFuture::clear_presettleprice() {
  _impl_.presettleprice_ = int64_t{0};
}
inline int64_t MDFuture::_internal_presettleprice() const {
  return _impl_.presettleprice_;
}
inline int64_t MDFuture::presettleprice() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.PreSettlePrice)
  return _internal_presettleprice();
}
inline void MDFuture::_internal_set_presettleprice(int64_t value) {
  
  _impl_.presettleprice_ = value;
}
inline void MDFuture::set_presettleprice(int64_t value) {
  _internal_set_presettleprice(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.PreSettlePrice)
}

// int64 OpenInterest = 22;
inline void MDFuture::clear_openinterest() {
  _impl_.openinterest_ = int64_t{0};
}
inline int64_t MDFuture::_internal_openinterest() const {
  return _impl_.openinterest_;
}
inline int64_t MDFuture::openinterest() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.OpenInterest)
  return _internal_openinterest();
}
inline void MDFuture::_internal_set_openinterest(int64_t value) {
  
  _impl_.openinterest_ = value;
}
inline void MDFuture::set_openinterest(int64_t value) {
  _internal_set_openinterest(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.OpenInterest)
}

// int64 SettlePrice = 23;
inline void MDFuture::clear_settleprice() {
  _impl_.settleprice_ = int64_t{0};
}
inline int64_t MDFuture::_internal_settleprice() const {
  return _impl_.settleprice_;
}
inline int64_t MDFuture::settleprice() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.SettlePrice)
  return _internal_settleprice();
}
inline void MDFuture::_internal_set_settleprice(int64_t value) {
  
  _impl_.settleprice_ = value;
}
inline void MDFuture::set_settleprice(int64_t value) {
  _internal_set_settleprice(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.SettlePrice)
}

// int64 PreDelta = 24;
inline void MDFuture::clear_predelta() {
  _impl_.predelta_ = int64_t{0};
}
inline int64_t MDFuture::_internal_predelta() const {
  return _impl_.predelta_;
}
inline int64_t MDFuture::predelta() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.PreDelta)
  return _internal_predelta();
}
inline void MDFuture::_internal_set_predelta(int64_t value) {
  
  _impl_.predelta_ = value;
}
inline void MDFuture::set_predelta(int64_t value) {
  _internal_set_predelta(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.PreDelta)
}

// int64 CurrDelta = 25;
inline void MDFuture::clear_currdelta() {
  _impl_.currdelta_ = int64_t{0};
}
inline int64_t MDFuture::_internal_currdelta() const {
  return _impl_.currdelta_;
}
inline int64_t MDFuture::currdelta() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.CurrDelta)
  return _internal_currdelta();
}
inline void MDFuture::_internal_set_currdelta(int64_t value) {
  
  _impl_.currdelta_ = value;
}
inline void MDFuture::set_currdelta(int64_t value) {
  _internal_set_currdelta(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.CurrDelta)
}

// int64 MiddlePx = 26;
inline void MDFuture::clear_middlepx() {
  _impl_.middlepx_ = int64_t{0};
}
inline int64_t MDFuture::_internal_middlepx() const {
  return _impl_.middlepx_;
}
inline int64_t MDFuture::middlepx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.MiddlePx)
  return _internal_middlepx();
}
inline void MDFuture::_internal_set_middlepx(int64_t value) {
  
  _impl_.middlepx_ = value;
}
inline void MDFuture::set_middlepx(int64_t value) {
  _internal_set_middlepx(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.MiddlePx)
}

// int64 ImpliedBuyPx = 27;
inline void MDFuture::clear_impliedbuypx() {
  _impl_.impliedbuypx_ = int64_t{0};
}
inline int64_t MDFuture::_internal_impliedbuypx() const {
  return _impl_.impliedbuypx_;
}
inline int64_t MDFuture::impliedbuypx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.ImpliedBuyPx)
  return _internal_impliedbuypx();
}
inline void MDFuture::_internal_set_impliedbuypx(int64_t value) {
  
  _impl_.impliedbuypx_ = value;
}
inline void MDFuture::set_impliedbuypx(int64_t value) {
  _internal_set_impliedbuypx(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.ImpliedBuyPx)
}

// int64 ImpliedBuyQty = 28;
inline void MDFuture::clear_impliedbuyqty() {
  _impl_.impliedbuyqty_ = int64_t{0};
}
inline int64_t MDFuture::_internal_impliedbuyqty() const {
  return _impl_.impliedbuyqty_;
}
inline int64_t MDFuture::impliedbuyqty() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.ImpliedBuyQty)
  return _internal_impliedbuyqty();
}
inline void MDFuture::_internal_set_impliedbuyqty(int64_t value) {
  
  _impl_.impliedbuyqty_ = value;
}
inline void MDFuture::set_impliedbuyqty(int64_t value) {
  _internal_set_impliedbuyqty(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.ImpliedBuyQty)
}

// int64 ImpliedSellPx = 29;
inline void MDFuture::clear_impliedsellpx() {
  _impl_.impliedsellpx_ = int64_t{0};
}
inline int64_t MDFuture::_internal_impliedsellpx() const {
  return _impl_.impliedsellpx_;
}
inline int64_t MDFuture::impliedsellpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.ImpliedSellPx)
  return _internal_impliedsellpx();
}
inline void MDFuture::_internal_set_impliedsellpx(int64_t value) {
  
  _impl_.impliedsellpx_ = value;
}
inline void MDFuture::set_impliedsellpx(int64_t value) {
  _internal_set_impliedsellpx(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.ImpliedSellPx)
}

// int64 ImpliedSellQty = 30;
inline void MDFuture::clear_impliedsellqty() {
  _impl_.impliedsellqty_ = int64_t{0};
}
inline int64_t MDFuture::_internal_impliedsellqty() const {
  return _impl_.impliedsellqty_;
}
inline int64_t MDFuture::impliedsellqty() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.ImpliedSellQty)
  return _internal_impliedsellqty();
}
inline void MDFuture::_internal_set_impliedsellqty(int64_t value) {
  
  _impl_.impliedsellqty_ = value;
}
inline void MDFuture::set_impliedsellqty(int64_t value) {
  _internal_set_impliedsellqty(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.ImpliedSellQty)
}

// int64 PositionTrend = 31;
inline void MDFuture::clear_positiontrend() {
  _impl_.positiontrend_ = int64_t{0};
}
inline int64_t MDFuture::_internal_positiontrend() const {
  return _impl_.positiontrend_;
}
inline int64_t MDFuture::positiontrend() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.PositionTrend)
  return _internal_positiontrend();
}
inline void MDFuture::_internal_set_positiontrend(int64_t value) {
  
  _impl_.positiontrend_ = value;
}
inline void MDFuture::set_positiontrend(int64_t value) {
  _internal_set_positiontrend(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.PositionTrend)
}

// int64 ChangeSpeed = 32;
inline void MDFuture::clear_changespeed() {
  _impl_.changespeed_ = int64_t{0};
}
inline int64_t MDFuture::_internal_changespeed() const {
  return _impl_.changespeed_;
}
inline int64_t MDFuture::changespeed() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.ChangeSpeed)
  return _internal_changespeed();
}
inline void MDFuture::_internal_set_changespeed(int64_t value) {
  
  _impl_.changespeed_ = value;
}
inline void MDFuture::set_changespeed(int64_t value) {
  _internal_set_changespeed(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.ChangeSpeed)
}

// int64 ChangeRate = 33;
inline void MDFuture::clear_changerate() {
  _impl_.changerate_ = int64_t{0};
}
inline int64_t MDFuture::_internal_changerate() const {
  return _impl_.changerate_;
}
inline int64_t MDFuture::changerate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.ChangeRate)
  return _internal_changerate();
}
inline void MDFuture::_internal_set_changerate(int64_t value) {
  
  _impl_.changerate_ = value;
}
inline void MDFuture::set_changerate(int64_t value) {
  _internal_set_changerate(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.ChangeRate)
}

// int64 ChangeValue = 34;
inline void MDFuture::clear_changevalue() {
  _impl_.changevalue_ = int64_t{0};
}
inline int64_t MDFuture::_internal_changevalue() const {
  return _impl_.changevalue_;
}
inline int64_t MDFuture::changevalue() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.ChangeValue)
  return _internal_changevalue();
}
inline void MDFuture::_internal_set_changevalue(int64_t value) {
  
  _impl_.changevalue_ = value;
}
inline void MDFuture::set_changevalue(int64_t value) {
  _internal_set_changevalue(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.ChangeValue)
}

// int64 Swing = 35;
inline void MDFuture::clear_swing() {
  _impl_.swing_ = int64_t{0};
}
inline int64_t MDFuture::_internal_swing() const {
  return _impl_.swing_;
}
inline int64_t MDFuture::swing() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.Swing)
  return _internal_swing();
}
inline void MDFuture::_internal_set_swing(int64_t value) {
  
  _impl_.swing_ = value;
}
inline void MDFuture::set_swing(int64_t value) {
  _internal_set_swing(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.Swing)
}

// string CommodityContractNumber = 36;
inline void MDFuture::clear_commoditycontractnumber() {
  _impl_.commoditycontractnumber_.ClearToEmpty();
}
inline const std::string& MDFuture::commoditycontractnumber() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.CommodityContractNumber)
  return _internal_commoditycontractnumber();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void MDFuture::set_commoditycontractnumber(ArgT0&& arg0, ArgT... args) {
 
 _impl_.commoditycontractnumber_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.CommodityContractNumber)
}
inline std::string* MDFuture::mutable_commoditycontractnumber() {
  std::string* _s = _internal_mutable_commoditycontractnumber();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDFuture.CommodityContractNumber)
  return _s;
}
inline const std::string& MDFuture::_internal_commoditycontractnumber() const {
  return _impl_.commoditycontractnumber_.Get();
}
inline void MDFuture::_internal_set_commoditycontractnumber(const std::string& value) {
  
  _impl_.commoditycontractnumber_.Set(value, GetArenaForAllocation());
}
inline std::string* MDFuture::_internal_mutable_commoditycontractnumber() {
  
  return _impl_.commoditycontractnumber_.Mutable(GetArenaForAllocation());
}
inline std::string* MDFuture::release_commoditycontractnumber() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDFuture.CommodityContractNumber)
  return _impl_.commoditycontractnumber_.Release();
}
inline void MDFuture::set_allocated_commoditycontractnumber(std::string* commoditycontractnumber) {
  if (commoditycontractnumber != nullptr) {
    
  } else {
    
  }
  _impl_.commoditycontractnumber_.SetAllocated(commoditycontractnumber, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.commoditycontractnumber_.IsDefault()) {
    _impl_.commoditycontractnumber_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDFuture.CommodityContractNumber)
}

// int32 ExchangeDate = 37;
inline void MDFuture::clear_exchangedate() {
  _impl_.exchangedate_ = 0;
}
inline int32_t MDFuture::_internal_exchangedate() const {
  return _impl_.exchangedate_;
}
inline int32_t MDFuture::exchangedate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.ExchangeDate)
  return _internal_exchangedate();
}
inline void MDFuture::_internal_set_exchangedate(int32_t value) {
  
  _impl_.exchangedate_ = value;
}
inline void MDFuture::set_exchangedate(int32_t value) {
  _internal_set_exchangedate(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.ExchangeDate)
}

// int32 ExchangeTime = 38;
inline void MDFuture::clear_exchangetime() {
  _impl_.exchangetime_ = 0;
}
inline int32_t MDFuture::_internal_exchangetime() const {
  return _impl_.exchangetime_;
}
inline int32_t MDFuture::exchangetime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.ExchangeTime)
  return _internal_exchangetime();
}
inline void MDFuture::_internal_set_exchangetime(int32_t value) {
  
  _impl_.exchangetime_ = value;
}
inline void MDFuture::set_exchangetime(int32_t value) {
  _internal_set_exchangetime(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.ExchangeTime)
}

// int32 ChannelNo = 50;
inline void MDFuture::clear_channelno() {
  _impl_.channelno_ = 0;
}
inline int32_t MDFuture::_internal_channelno() const {
  return _impl_.channelno_;
}
inline int32_t MDFuture::channelno() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.ChannelNo)
  return _internal_channelno();
}
inline void MDFuture::_internal_set_channelno(int32_t value) {
  
  _impl_.channelno_ = value;
}
inline void MDFuture::set_channelno(int32_t value) {
  _internal_set_channelno(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.ChannelNo)
}

// repeated int64 BuyPriceQueue = 51 [packed = true];
inline int MDFuture::_internal_buypricequeue_size() const {
  return _impl_.buypricequeue_.size();
}
inline int MDFuture::buypricequeue_size() const {
  return _internal_buypricequeue_size();
}
inline void MDFuture::clear_buypricequeue() {
  _impl_.buypricequeue_.Clear();
}
inline int64_t MDFuture::_internal_buypricequeue(int index) const {
  return _impl_.buypricequeue_.Get(index);
}
inline int64_t MDFuture::buypricequeue(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.BuyPriceQueue)
  return _internal_buypricequeue(index);
}
inline void MDFuture::set_buypricequeue(int index, int64_t value) {
  _impl_.buypricequeue_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.BuyPriceQueue)
}
inline void MDFuture::_internal_add_buypricequeue(int64_t value) {
  _impl_.buypricequeue_.Add(value);
}
inline void MDFuture::add_buypricequeue(int64_t value) {
  _internal_add_buypricequeue(value);
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.MDFuture.BuyPriceQueue)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
MDFuture::_internal_buypricequeue() const {
  return _impl_.buypricequeue_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
MDFuture::buypricequeue() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.MDFuture.BuyPriceQueue)
  return _internal_buypricequeue();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
MDFuture::_internal_mutable_buypricequeue() {
  return &_impl_.buypricequeue_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
MDFuture::mutable_buypricequeue() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.MDFuture.BuyPriceQueue)
  return _internal_mutable_buypricequeue();
}

// repeated int64 BuyOrderQtyQueue = 52 [packed = true];
inline int MDFuture::_internal_buyorderqtyqueue_size() const {
  return _impl_.buyorderqtyqueue_.size();
}
inline int MDFuture::buyorderqtyqueue_size() const {
  return _internal_buyorderqtyqueue_size();
}
inline void MDFuture::clear_buyorderqtyqueue() {
  _impl_.buyorderqtyqueue_.Clear();
}
inline int64_t MDFuture::_internal_buyorderqtyqueue(int index) const {
  return _impl_.buyorderqtyqueue_.Get(index);
}
inline int64_t MDFuture::buyorderqtyqueue(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.BuyOrderQtyQueue)
  return _internal_buyorderqtyqueue(index);
}
inline void MDFuture::set_buyorderqtyqueue(int index, int64_t value) {
  _impl_.buyorderqtyqueue_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.BuyOrderQtyQueue)
}
inline void MDFuture::_internal_add_buyorderqtyqueue(int64_t value) {
  _impl_.buyorderqtyqueue_.Add(value);
}
inline void MDFuture::add_buyorderqtyqueue(int64_t value) {
  _internal_add_buyorderqtyqueue(value);
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.MDFuture.BuyOrderQtyQueue)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
MDFuture::_internal_buyorderqtyqueue() const {
  return _impl_.buyorderqtyqueue_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
MDFuture::buyorderqtyqueue() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.MDFuture.BuyOrderQtyQueue)
  return _internal_buyorderqtyqueue();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
MDFuture::_internal_mutable_buyorderqtyqueue() {
  return &_impl_.buyorderqtyqueue_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
MDFuture::mutable_buyorderqtyqueue() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.MDFuture.BuyOrderQtyQueue)
  return _internal_mutable_buyorderqtyqueue();
}

// repeated int64 SellPriceQueue = 53 [packed = true];
inline int MDFuture::_internal_sellpricequeue_size() const {
  return _impl_.sellpricequeue_.size();
}
inline int MDFuture::sellpricequeue_size() const {
  return _internal_sellpricequeue_size();
}
inline void MDFuture::clear_sellpricequeue() {
  _impl_.sellpricequeue_.Clear();
}
inline int64_t MDFuture::_internal_sellpricequeue(int index) const {
  return _impl_.sellpricequeue_.Get(index);
}
inline int64_t MDFuture::sellpricequeue(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.SellPriceQueue)
  return _internal_sellpricequeue(index);
}
inline void MDFuture::set_sellpricequeue(int index, int64_t value) {
  _impl_.sellpricequeue_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.SellPriceQueue)
}
inline void MDFuture::_internal_add_sellpricequeue(int64_t value) {
  _impl_.sellpricequeue_.Add(value);
}
inline void MDFuture::add_sellpricequeue(int64_t value) {
  _internal_add_sellpricequeue(value);
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.MDFuture.SellPriceQueue)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
MDFuture::_internal_sellpricequeue() const {
  return _impl_.sellpricequeue_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
MDFuture::sellpricequeue() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.MDFuture.SellPriceQueue)
  return _internal_sellpricequeue();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
MDFuture::_internal_mutable_sellpricequeue() {
  return &_impl_.sellpricequeue_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
MDFuture::mutable_sellpricequeue() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.MDFuture.SellPriceQueue)
  return _internal_mutable_sellpricequeue();
}

// repeated int64 SellOrderQtyQueue = 54 [packed = true];
inline int MDFuture::_internal_sellorderqtyqueue_size() const {
  return _impl_.sellorderqtyqueue_.size();
}
inline int MDFuture::sellorderqtyqueue_size() const {
  return _internal_sellorderqtyqueue_size();
}
inline void MDFuture::clear_sellorderqtyqueue() {
  _impl_.sellorderqtyqueue_.Clear();
}
inline int64_t MDFuture::_internal_sellorderqtyqueue(int index) const {
  return _impl_.sellorderqtyqueue_.Get(index);
}
inline int64_t MDFuture::sellorderqtyqueue(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.SellOrderQtyQueue)
  return _internal_sellorderqtyqueue(index);
}
inline void MDFuture::set_sellorderqtyqueue(int index, int64_t value) {
  _impl_.sellorderqtyqueue_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.SellOrderQtyQueue)
}
inline void MDFuture::_internal_add_sellorderqtyqueue(int64_t value) {
  _impl_.sellorderqtyqueue_.Add(value);
}
inline void MDFuture::add_sellorderqtyqueue(int64_t value) {
  _internal_add_sellorderqtyqueue(value);
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.MDFuture.SellOrderQtyQueue)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
MDFuture::_internal_sellorderqtyqueue() const {
  return _impl_.sellorderqtyqueue_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
MDFuture::sellorderqtyqueue() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.MDFuture.SellOrderQtyQueue)
  return _internal_sellorderqtyqueue();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
MDFuture::_internal_mutable_sellorderqtyqueue() {
  return &_impl_.sellorderqtyqueue_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
MDFuture::mutable_sellorderqtyqueue() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.MDFuture.SellOrderQtyQueue)
  return _internal_mutable_sellorderqtyqueue();
}

// repeated int64 BuyOrderQueue = 55 [packed = true];
inline int MDFuture::_internal_buyorderqueue_size() const {
  return _impl_.buyorderqueue_.size();
}
inline int MDFuture::buyorderqueue_size() const {
  return _internal_buyorderqueue_size();
}
inline void MDFuture::clear_buyorderqueue() {
  _impl_.buyorderqueue_.Clear();
}
inline int64_t MDFuture::_internal_buyorderqueue(int index) const {
  return _impl_.buyorderqueue_.Get(index);
}
inline int64_t MDFuture::buyorderqueue(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.BuyOrderQueue)
  return _internal_buyorderqueue(index);
}
inline void MDFuture::set_buyorderqueue(int index, int64_t value) {
  _impl_.buyorderqueue_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.BuyOrderQueue)
}
inline void MDFuture::_internal_add_buyorderqueue(int64_t value) {
  _impl_.buyorderqueue_.Add(value);
}
inline void MDFuture::add_buyorderqueue(int64_t value) {
  _internal_add_buyorderqueue(value);
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.MDFuture.BuyOrderQueue)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
MDFuture::_internal_buyorderqueue() const {
  return _impl_.buyorderqueue_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
MDFuture::buyorderqueue() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.MDFuture.BuyOrderQueue)
  return _internal_buyorderqueue();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
MDFuture::_internal_mutable_buyorderqueue() {
  return &_impl_.buyorderqueue_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
MDFuture::mutable_buyorderqueue() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.MDFuture.BuyOrderQueue)
  return _internal_mutable_buyorderqueue();
}

// repeated int64 SellOrderQueue = 56 [packed = true];
inline int MDFuture::_internal_sellorderqueue_size() const {
  return _impl_.sellorderqueue_.size();
}
inline int MDFuture::sellorderqueue_size() const {
  return _internal_sellorderqueue_size();
}
inline void MDFuture::clear_sellorderqueue() {
  _impl_.sellorderqueue_.Clear();
}
inline int64_t MDFuture::_internal_sellorderqueue(int index) const {
  return _impl_.sellorderqueue_.Get(index);
}
inline int64_t MDFuture::sellorderqueue(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.SellOrderQueue)
  return _internal_sellorderqueue(index);
}
inline void MDFuture::set_sellorderqueue(int index, int64_t value) {
  _impl_.sellorderqueue_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.SellOrderQueue)
}
inline void MDFuture::_internal_add_sellorderqueue(int64_t value) {
  _impl_.sellorderqueue_.Add(value);
}
inline void MDFuture::add_sellorderqueue(int64_t value) {
  _internal_add_sellorderqueue(value);
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.MDFuture.SellOrderQueue)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
MDFuture::_internal_sellorderqueue() const {
  return _impl_.sellorderqueue_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
MDFuture::sellorderqueue() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.MDFuture.SellOrderQueue)
  return _internal_sellorderqueue();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
MDFuture::_internal_mutable_sellorderqueue() {
  return &_impl_.sellorderqueue_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
MDFuture::mutable_sellorderqueue() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.MDFuture.SellOrderQueue)
  return _internal_mutable_sellorderqueue();
}

// repeated int64 BuyNumOrdersQueue = 57 [packed = true];
inline int MDFuture::_internal_buynumordersqueue_size() const {
  return _impl_.buynumordersqueue_.size();
}
inline int MDFuture::buynumordersqueue_size() const {
  return _internal_buynumordersqueue_size();
}
inline void MDFuture::clear_buynumordersqueue() {
  _impl_.buynumordersqueue_.Clear();
}
inline int64_t MDFuture::_internal_buynumordersqueue(int index) const {
  return _impl_.buynumordersqueue_.Get(index);
}
inline int64_t MDFuture::buynumordersqueue(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.BuyNumOrdersQueue)
  return _internal_buynumordersqueue(index);
}
inline void MDFuture::set_buynumordersqueue(int index, int64_t value) {
  _impl_.buynumordersqueue_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.BuyNumOrdersQueue)
}
inline void MDFuture::_internal_add_buynumordersqueue(int64_t value) {
  _impl_.buynumordersqueue_.Add(value);
}
inline void MDFuture::add_buynumordersqueue(int64_t value) {
  _internal_add_buynumordersqueue(value);
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.MDFuture.BuyNumOrdersQueue)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
MDFuture::_internal_buynumordersqueue() const {
  return _impl_.buynumordersqueue_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
MDFuture::buynumordersqueue() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.MDFuture.BuyNumOrdersQueue)
  return _internal_buynumordersqueue();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
MDFuture::_internal_mutable_buynumordersqueue() {
  return &_impl_.buynumordersqueue_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
MDFuture::mutable_buynumordersqueue() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.MDFuture.BuyNumOrdersQueue)
  return _internal_mutable_buynumordersqueue();
}

// repeated int64 SellNumOrdersQueue = 58 [packed = true];
inline int MDFuture::_internal_sellnumordersqueue_size() const {
  return _impl_.sellnumordersqueue_.size();
}
inline int MDFuture::sellnumordersqueue_size() const {
  return _internal_sellnumordersqueue_size();
}
inline void MDFuture::clear_sellnumordersqueue() {
  _impl_.sellnumordersqueue_.Clear();
}
inline int64_t MDFuture::_internal_sellnumordersqueue(int index) const {
  return _impl_.sellnumordersqueue_.Get(index);
}
inline int64_t MDFuture::sellnumordersqueue(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.SellNumOrdersQueue)
  return _internal_sellnumordersqueue(index);
}
inline void MDFuture::set_sellnumordersqueue(int index, int64_t value) {
  _impl_.sellnumordersqueue_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.SellNumOrdersQueue)
}
inline void MDFuture::_internal_add_sellnumordersqueue(int64_t value) {
  _impl_.sellnumordersqueue_.Add(value);
}
inline void MDFuture::add_sellnumordersqueue(int64_t value) {
  _internal_add_sellnumordersqueue(value);
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.MDFuture.SellNumOrdersQueue)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
MDFuture::_internal_sellnumordersqueue() const {
  return _impl_.sellnumordersqueue_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
MDFuture::sellnumordersqueue() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.MDFuture.SellNumOrdersQueue)
  return _internal_sellnumordersqueue();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
MDFuture::_internal_mutable_sellnumordersqueue() {
  return &_impl_.sellnumordersqueue_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
MDFuture::mutable_sellnumordersqueue() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.MDFuture.SellNumOrdersQueue)
  return _internal_mutable_sellnumordersqueue();
}

// int32 DataMultiplePowerOf10 = 59;
inline void MDFuture::clear_datamultiplepowerof10() {
  _impl_.datamultiplepowerof10_ = 0;
}
inline int32_t MDFuture::_internal_datamultiplepowerof10() const {
  return _impl_.datamultiplepowerof10_;
}
inline int32_t MDFuture::datamultiplepowerof10() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFuture.DataMultiplePowerOf10)
  return _internal_datamultiplepowerof10();
}
inline void MDFuture::_internal_set_datamultiplepowerof10(int32_t value) {
  
  _impl_.datamultiplepowerof10_ = value;
}
inline void MDFuture::set_datamultiplepowerof10(int32_t value) {
  _internal_set_datamultiplepowerof10(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFuture.DataMultiplePowerOf10)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_MDFuture_2eproto

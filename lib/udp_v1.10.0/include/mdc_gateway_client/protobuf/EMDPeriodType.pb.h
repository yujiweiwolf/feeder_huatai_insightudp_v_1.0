// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EMDPeriodType.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_EMDPeriodType_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_EMDPeriodType_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_EMDPeriodType_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_EMDPeriodType_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_EMDPeriodType_2eproto;
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE
namespace com {
namespace htsc {
namespace mdc {
namespace model {

enum EMDPeriodType : int {
  DefaultPeriod = 0,
  Period1Min = 1,
  Period1D = 2,
  Period5Min = 3,
  Period15Min = 4,
  Period30Min = 5,
  Period1H = 6,
  Period1S = 7,
  Period3S = 8,
  Period5S = 9,
  Period15S = 10,
  Period30S = 11,
  Period2H = 12,
  Period1W = 13,
  Period15D = 14,
  Period1Month = 15,
  Period3Month = 16,
  Period4Month = 17,
  Period6Month = 18,
  Period1Y = 19,
  EMDPeriodType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  EMDPeriodType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool EMDPeriodType_IsValid(int value);
constexpr EMDPeriodType EMDPeriodType_MIN = DefaultPeriod;
constexpr EMDPeriodType EMDPeriodType_MAX = Period1Y;
constexpr int EMDPeriodType_ARRAYSIZE = EMDPeriodType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EMDPeriodType_descriptor();
template<typename T>
inline const std::string& EMDPeriodType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EMDPeriodType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EMDPeriodType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EMDPeriodType_descriptor(), enum_t_value);
}
inline bool EMDPeriodType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EMDPeriodType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EMDPeriodType>(
    EMDPeriodType_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace model
}  // namespace mdc
}  // namespace htsc
}  // namespace com

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::com::htsc::mdc::model::EMDPeriodType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::htsc::mdc::model::EMDPeriodType>() {
  return ::com::htsc::mdc::model::EMDPeriodType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_EMDPeriodType_2eproto

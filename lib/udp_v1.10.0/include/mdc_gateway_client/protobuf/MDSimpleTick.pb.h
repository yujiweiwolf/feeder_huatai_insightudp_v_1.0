// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MDSimpleTick.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_MDSimpleTick_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_MDSimpleTick_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "ESecurityType.pb.h"
#include "ESecurityIDSource.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_MDSimpleTick_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_MDSimpleTick_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_MDSimpleTick_2eproto;
namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {
class ADIndicators;
struct ADIndicatorsDefaultTypeInternal;
extern ADIndicatorsDefaultTypeInternal _ADIndicators_default_instance_;
class MDSimpleTick;
struct MDSimpleTickDefaultTypeInternal;
extern MDSimpleTickDefaultTypeInternal _MDSimpleTick_default_instance_;
}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> ::com::htsc::mdc::insight::model::ADIndicators* Arena::CreateMaybeMessage<::com::htsc::mdc::insight::model::ADIndicators>(Arena*);
template<> ::com::htsc::mdc::insight::model::MDSimpleTick* Arena::CreateMaybeMessage<::com::htsc::mdc::insight::model::MDSimpleTick>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {

// ===================================================================

class MDSimpleTick final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.htsc.mdc.insight.model.MDSimpleTick) */ {
 public:
  inline MDSimpleTick() : MDSimpleTick(nullptr) {}
  ~MDSimpleTick() override;
  explicit PROTOBUF_CONSTEXPR MDSimpleTick(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MDSimpleTick(const MDSimpleTick& from);
  MDSimpleTick(MDSimpleTick&& from) noexcept
    : MDSimpleTick() {
    *this = ::std::move(from);
  }

  inline MDSimpleTick& operator=(const MDSimpleTick& from) {
    CopyFrom(from);
    return *this;
  }
  inline MDSimpleTick& operator=(MDSimpleTick&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MDSimpleTick& default_instance() {
    return *internal_default_instance();
  }
  static inline const MDSimpleTick* internal_default_instance() {
    return reinterpret_cast<const MDSimpleTick*>(
               &_MDSimpleTick_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MDSimpleTick& a, MDSimpleTick& b) {
    a.Swap(&b);
  }
  inline void Swap(MDSimpleTick* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MDSimpleTick* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MDSimpleTick* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MDSimpleTick>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MDSimpleTick& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MDSimpleTick& from) {
    MDSimpleTick::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MDSimpleTick* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.htsc.mdc.insight.model.MDSimpleTick";
  }
  protected:
  explicit MDSimpleTick(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHTSCSecurityIDFieldNumber = 1,
    kTradingPhaseCodeFieldNumber = 5,
    kADIndicatorsFieldNumber = 40,
    kMDDateFieldNumber = 2,
    kMDTimeFieldNumber = 3,
    kDataTimestampFieldNumber = 4,
    kSecurityIDSourceFieldNumber = 6,
    kSecurityTypeFieldNumber = 7,
    kNumTradesFieldNumber = 8,
    kTotalVolumeTradeFieldNumber = 9,
    kTotalValueTradeFieldNumber = 10,
    kPreClosePxFieldNumber = 11,
    kLastPxFieldNumber = 12,
    kOpenPxFieldNumber = 13,
    kClosePxFieldNumber = 14,
    kHighPxFieldNumber = 15,
    kLowPxFieldNumber = 16,
    kIOPVFieldNumber = 17,
    kPreIOPVFieldNumber = 18,
    kOpenInterestFieldNumber = 19,
    kPreOpenInterestFieldNumber = 20,
    kSettlePriceFieldNumber = 21,
    kPreSettlePriceFieldNumber = 22,
    kExchangeDateFieldNumber = 23,
    kExchangeTimeFieldNumber = 24,
    kDataMultiplePowerOf10FieldNumber = 25,
  };
  // string HTSCSecurityID = 1;
  void clear_htscsecurityid();
  const std::string& htscsecurityid() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_htscsecurityid(ArgT0&& arg0, ArgT... args);
  std::string* mutable_htscsecurityid();
  PROTOBUF_NODISCARD std::string* release_htscsecurityid();
  void set_allocated_htscsecurityid(std::string* htscsecurityid);
  private:
  const std::string& _internal_htscsecurityid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_htscsecurityid(const std::string& value);
  std::string* _internal_mutable_htscsecurityid();
  public:

  // string TradingPhaseCode = 5;
  void clear_tradingphasecode();
  const std::string& tradingphasecode() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_tradingphasecode(ArgT0&& arg0, ArgT... args);
  std::string* mutable_tradingphasecode();
  PROTOBUF_NODISCARD std::string* release_tradingphasecode();
  void set_allocated_tradingphasecode(std::string* tradingphasecode);
  private:
  const std::string& _internal_tradingphasecode() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tradingphasecode(const std::string& value);
  std::string* _internal_mutable_tradingphasecode();
  public:

  // .com.htsc.mdc.insight.model.ADIndicators ADIndicators = 40;
  bool has_adindicators() const;
  private:
  bool _internal_has_adindicators() const;
  public:
  void clear_adindicators();
  const ::com::htsc::mdc::insight::model::ADIndicators& adindicators() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::ADIndicators* release_adindicators();
  ::com::htsc::mdc::insight::model::ADIndicators* mutable_adindicators();
  void set_allocated_adindicators(::com::htsc::mdc::insight::model::ADIndicators* adindicators);
  private:
  const ::com::htsc::mdc::insight::model::ADIndicators& _internal_adindicators() const;
  ::com::htsc::mdc::insight::model::ADIndicators* _internal_mutable_adindicators();
  public:
  void unsafe_arena_set_allocated_adindicators(
      ::com::htsc::mdc::insight::model::ADIndicators* adindicators);
  ::com::htsc::mdc::insight::model::ADIndicators* unsafe_arena_release_adindicators();

  // int32 MDDate = 2;
  void clear_mddate();
  int32_t mddate() const;
  void set_mddate(int32_t value);
  private:
  int32_t _internal_mddate() const;
  void _internal_set_mddate(int32_t value);
  public:

  // int32 MDTime = 3;
  void clear_mdtime();
  int32_t mdtime() const;
  void set_mdtime(int32_t value);
  private:
  int32_t _internal_mdtime() const;
  void _internal_set_mdtime(int32_t value);
  public:

  // int64 DataTimestamp = 4;
  void clear_datatimestamp();
  int64_t datatimestamp() const;
  void set_datatimestamp(int64_t value);
  private:
  int64_t _internal_datatimestamp() const;
  void _internal_set_datatimestamp(int64_t value);
  public:

  // .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
  void clear_securityidsource();
  ::com::htsc::mdc::model::ESecurityIDSource securityidsource() const;
  void set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value);
  private:
  ::com::htsc::mdc::model::ESecurityIDSource _internal_securityidsource() const;
  void _internal_set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value);
  public:

  // .com.htsc.mdc.model.ESecurityType securityType = 7;
  void clear_securitytype();
  ::com::htsc::mdc::model::ESecurityType securitytype() const;
  void set_securitytype(::com::htsc::mdc::model::ESecurityType value);
  private:
  ::com::htsc::mdc::model::ESecurityType _internal_securitytype() const;
  void _internal_set_securitytype(::com::htsc::mdc::model::ESecurityType value);
  public:

  // int64 NumTrades = 8;
  void clear_numtrades();
  int64_t numtrades() const;
  void set_numtrades(int64_t value);
  private:
  int64_t _internal_numtrades() const;
  void _internal_set_numtrades(int64_t value);
  public:

  // int64 TotalVolumeTrade = 9;
  void clear_totalvolumetrade();
  int64_t totalvolumetrade() const;
  void set_totalvolumetrade(int64_t value);
  private:
  int64_t _internal_totalvolumetrade() const;
  void _internal_set_totalvolumetrade(int64_t value);
  public:

  // int64 TotalValueTrade = 10;
  void clear_totalvaluetrade();
  int64_t totalvaluetrade() const;
  void set_totalvaluetrade(int64_t value);
  private:
  int64_t _internal_totalvaluetrade() const;
  void _internal_set_totalvaluetrade(int64_t value);
  public:

  // int64 PreClosePx = 11;
  void clear_preclosepx();
  int64_t preclosepx() const;
  void set_preclosepx(int64_t value);
  private:
  int64_t _internal_preclosepx() const;
  void _internal_set_preclosepx(int64_t value);
  public:

  // int64 LastPx = 12;
  void clear_lastpx();
  int64_t lastpx() const;
  void set_lastpx(int64_t value);
  private:
  int64_t _internal_lastpx() const;
  void _internal_set_lastpx(int64_t value);
  public:

  // int64 OpenPx = 13;
  void clear_openpx();
  int64_t openpx() const;
  void set_openpx(int64_t value);
  private:
  int64_t _internal_openpx() const;
  void _internal_set_openpx(int64_t value);
  public:

  // int64 ClosePx = 14;
  void clear_closepx();
  int64_t closepx() const;
  void set_closepx(int64_t value);
  private:
  int64_t _internal_closepx() const;
  void _internal_set_closepx(int64_t value);
  public:

  // int64 HighPx = 15;
  void clear_highpx();
  int64_t highpx() const;
  void set_highpx(int64_t value);
  private:
  int64_t _internal_highpx() const;
  void _internal_set_highpx(int64_t value);
  public:

  // int64 LowPx = 16;
  void clear_lowpx();
  int64_t lowpx() const;
  void set_lowpx(int64_t value);
  private:
  int64_t _internal_lowpx() const;
  void _internal_set_lowpx(int64_t value);
  public:

  // int64 IOPV = 17;
  void clear_iopv();
  int64_t iopv() const;
  void set_iopv(int64_t value);
  private:
  int64_t _internal_iopv() const;
  void _internal_set_iopv(int64_t value);
  public:

  // int64 PreIOPV = 18;
  void clear_preiopv();
  int64_t preiopv() const;
  void set_preiopv(int64_t value);
  private:
  int64_t _internal_preiopv() const;
  void _internal_set_preiopv(int64_t value);
  public:

  // int64 OpenInterest = 19;
  void clear_openinterest();
  int64_t openinterest() const;
  void set_openinterest(int64_t value);
  private:
  int64_t _internal_openinterest() const;
  void _internal_set_openinterest(int64_t value);
  public:

  // int64 PreOpenInterest = 20;
  void clear_preopeninterest();
  int64_t preopeninterest() const;
  void set_preopeninterest(int64_t value);
  private:
  int64_t _internal_preopeninterest() const;
  void _internal_set_preopeninterest(int64_t value);
  public:

  // int64 SettlePrice = 21;
  void clear_settleprice();
  int64_t settleprice() const;
  void set_settleprice(int64_t value);
  private:
  int64_t _internal_settleprice() const;
  void _internal_set_settleprice(int64_t value);
  public:

  // int64 PreSettlePrice = 22;
  void clear_presettleprice();
  int64_t presettleprice() const;
  void set_presettleprice(int64_t value);
  private:
  int64_t _internal_presettleprice() const;
  void _internal_set_presettleprice(int64_t value);
  public:

  // int32 ExchangeDate = 23;
  void clear_exchangedate();
  int32_t exchangedate() const;
  void set_exchangedate(int32_t value);
  private:
  int32_t _internal_exchangedate() const;
  void _internal_set_exchangedate(int32_t value);
  public:

  // int32 ExchangeTime = 24;
  void clear_exchangetime();
  int32_t exchangetime() const;
  void set_exchangetime(int32_t value);
  private:
  int32_t _internal_exchangetime() const;
  void _internal_set_exchangetime(int32_t value);
  public:

  // int32 DataMultiplePowerOf10 = 25;
  void clear_datamultiplepowerof10();
  int32_t datamultiplepowerof10() const;
  void set_datamultiplepowerof10(int32_t value);
  private:
  int32_t _internal_datamultiplepowerof10() const;
  void _internal_set_datamultiplepowerof10(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:com.htsc.mdc.insight.model.MDSimpleTick)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr htscsecurityid_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tradingphasecode_;
    ::com::htsc::mdc::insight::model::ADIndicators* adindicators_;
    int32_t mddate_;
    int32_t mdtime_;
    int64_t datatimestamp_;
    int securityidsource_;
    int securitytype_;
    int64_t numtrades_;
    int64_t totalvolumetrade_;
    int64_t totalvaluetrade_;
    int64_t preclosepx_;
    int64_t lastpx_;
    int64_t openpx_;
    int64_t closepx_;
    int64_t highpx_;
    int64_t lowpx_;
    int64_t iopv_;
    int64_t preiopv_;
    int64_t openinterest_;
    int64_t preopeninterest_;
    int64_t settleprice_;
    int64_t presettleprice_;
    int32_t exchangedate_;
    int32_t exchangetime_;
    int32_t datamultiplepowerof10_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MDSimpleTick_2eproto;
};
// -------------------------------------------------------------------

class ADIndicators final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.htsc.mdc.insight.model.ADIndicators) */ {
 public:
  inline ADIndicators() : ADIndicators(nullptr) {}
  ~ADIndicators() override;
  explicit PROTOBUF_CONSTEXPR ADIndicators(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ADIndicators(const ADIndicators& from);
  ADIndicators(ADIndicators&& from) noexcept
    : ADIndicators() {
    *this = ::std::move(from);
  }

  inline ADIndicators& operator=(const ADIndicators& from) {
    CopyFrom(from);
    return *this;
  }
  inline ADIndicators& operator=(ADIndicators&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ADIndicators& default_instance() {
    return *internal_default_instance();
  }
  static inline const ADIndicators* internal_default_instance() {
    return reinterpret_cast<const ADIndicators*>(
               &_ADIndicators_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ADIndicators& a, ADIndicators& b) {
    a.Swap(&b);
  }
  inline void Swap(ADIndicators* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ADIndicators* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ADIndicators* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ADIndicators>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ADIndicators& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ADIndicators& from) {
    ADIndicators::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ADIndicators* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.htsc.mdc.insight.model.ADIndicators";
  }
  protected:
  explicit ADIndicators(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInd1101FieldNumber = 1,
    kInd1102FieldNumber = 2,
    kInd1103FieldNumber = 3,
    kInd1104FieldNumber = 4,
    kInd1105FieldNumber = 5,
    kInd1106FieldNumber = 6,
    kInd1107FieldNumber = 7,
    kInd1108FieldNumber = 8,
    kInd1109FieldNumber = 9,
    kInd1110FieldNumber = 10,
    kInd1111FieldNumber = 11,
    kInd1112FieldNumber = 12,
    kInd1113FieldNumber = 13,
    kInd1114FieldNumber = 14,
    kInd1115FieldNumber = 15,
    kInd1116FieldNumber = 16,
    kInd1117FieldNumber = 17,
    kInd1118FieldNumber = 18,
    kInd1119FieldNumber = 19,
    kInd1120FieldNumber = 20,
    kInd1121FieldNumber = 21,
  };
  // int64 Ind1101 = 1;
  void clear_ind1101();
  int64_t ind1101() const;
  void set_ind1101(int64_t value);
  private:
  int64_t _internal_ind1101() const;
  void _internal_set_ind1101(int64_t value);
  public:

  // int64 Ind1102 = 2;
  void clear_ind1102();
  int64_t ind1102() const;
  void set_ind1102(int64_t value);
  private:
  int64_t _internal_ind1102() const;
  void _internal_set_ind1102(int64_t value);
  public:

  // int64 Ind1103 = 3;
  void clear_ind1103();
  int64_t ind1103() const;
  void set_ind1103(int64_t value);
  private:
  int64_t _internal_ind1103() const;
  void _internal_set_ind1103(int64_t value);
  public:

  // int64 Ind1104 = 4;
  void clear_ind1104();
  int64_t ind1104() const;
  void set_ind1104(int64_t value);
  private:
  int64_t _internal_ind1104() const;
  void _internal_set_ind1104(int64_t value);
  public:

  // int64 Ind1105 = 5;
  void clear_ind1105();
  int64_t ind1105() const;
  void set_ind1105(int64_t value);
  private:
  int64_t _internal_ind1105() const;
  void _internal_set_ind1105(int64_t value);
  public:

  // int64 Ind1106 = 6;
  void clear_ind1106();
  int64_t ind1106() const;
  void set_ind1106(int64_t value);
  private:
  int64_t _internal_ind1106() const;
  void _internal_set_ind1106(int64_t value);
  public:

  // int64 Ind1107 = 7;
  void clear_ind1107();
  int64_t ind1107() const;
  void set_ind1107(int64_t value);
  private:
  int64_t _internal_ind1107() const;
  void _internal_set_ind1107(int64_t value);
  public:

  // int64 Ind1108 = 8;
  void clear_ind1108();
  int64_t ind1108() const;
  void set_ind1108(int64_t value);
  private:
  int64_t _internal_ind1108() const;
  void _internal_set_ind1108(int64_t value);
  public:

  // int64 Ind1109 = 9;
  void clear_ind1109();
  int64_t ind1109() const;
  void set_ind1109(int64_t value);
  private:
  int64_t _internal_ind1109() const;
  void _internal_set_ind1109(int64_t value);
  public:

  // int64 Ind1110 = 10;
  void clear_ind1110();
  int64_t ind1110() const;
  void set_ind1110(int64_t value);
  private:
  int64_t _internal_ind1110() const;
  void _internal_set_ind1110(int64_t value);
  public:

  // int64 Ind1111 = 11;
  void clear_ind1111();
  int64_t ind1111() const;
  void set_ind1111(int64_t value);
  private:
  int64_t _internal_ind1111() const;
  void _internal_set_ind1111(int64_t value);
  public:

  // int64 Ind1112 = 12;
  void clear_ind1112();
  int64_t ind1112() const;
  void set_ind1112(int64_t value);
  private:
  int64_t _internal_ind1112() const;
  void _internal_set_ind1112(int64_t value);
  public:

  // int64 Ind1113 = 13;
  void clear_ind1113();
  int64_t ind1113() const;
  void set_ind1113(int64_t value);
  private:
  int64_t _internal_ind1113() const;
  void _internal_set_ind1113(int64_t value);
  public:

  // int64 Ind1114 = 14;
  void clear_ind1114();
  int64_t ind1114() const;
  void set_ind1114(int64_t value);
  private:
  int64_t _internal_ind1114() const;
  void _internal_set_ind1114(int64_t value);
  public:

  // int64 Ind1115 = 15;
  void clear_ind1115();
  int64_t ind1115() const;
  void set_ind1115(int64_t value);
  private:
  int64_t _internal_ind1115() const;
  void _internal_set_ind1115(int64_t value);
  public:

  // int64 Ind1116 = 16;
  void clear_ind1116();
  int64_t ind1116() const;
  void set_ind1116(int64_t value);
  private:
  int64_t _internal_ind1116() const;
  void _internal_set_ind1116(int64_t value);
  public:

  // int64 Ind1117 = 17;
  void clear_ind1117();
  int64_t ind1117() const;
  void set_ind1117(int64_t value);
  private:
  int64_t _internal_ind1117() const;
  void _internal_set_ind1117(int64_t value);
  public:

  // int64 Ind1118 = 18;
  void clear_ind1118();
  int64_t ind1118() const;
  void set_ind1118(int64_t value);
  private:
  int64_t _internal_ind1118() const;
  void _internal_set_ind1118(int64_t value);
  public:

  // int64 Ind1119 = 19;
  void clear_ind1119();
  int64_t ind1119() const;
  void set_ind1119(int64_t value);
  private:
  int64_t _internal_ind1119() const;
  void _internal_set_ind1119(int64_t value);
  public:

  // int64 Ind1120 = 20;
  void clear_ind1120();
  int64_t ind1120() const;
  void set_ind1120(int64_t value);
  private:
  int64_t _internal_ind1120() const;
  void _internal_set_ind1120(int64_t value);
  public:

  // int64 Ind1121 = 21;
  void clear_ind1121();
  int64_t ind1121() const;
  void set_ind1121(int64_t value);
  private:
  int64_t _internal_ind1121() const;
  void _internal_set_ind1121(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:com.htsc.mdc.insight.model.ADIndicators)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t ind1101_;
    int64_t ind1102_;
    int64_t ind1103_;
    int64_t ind1104_;
    int64_t ind1105_;
    int64_t ind1106_;
    int64_t ind1107_;
    int64_t ind1108_;
    int64_t ind1109_;
    int64_t ind1110_;
    int64_t ind1111_;
    int64_t ind1112_;
    int64_t ind1113_;
    int64_t ind1114_;
    int64_t ind1115_;
    int64_t ind1116_;
    int64_t ind1117_;
    int64_t ind1118_;
    int64_t ind1119_;
    int64_t ind1120_;
    int64_t ind1121_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MDSimpleTick_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MDSimpleTick

// string HTSCSecurityID = 1;
inline void MDSimpleTick::clear_htscsecurityid() {
  _impl_.htscsecurityid_.ClearToEmpty();
}
inline const std::string& MDSimpleTick::htscsecurityid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSimpleTick.HTSCSecurityID)
  return _internal_htscsecurityid();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void MDSimpleTick::set_htscsecurityid(ArgT0&& arg0, ArgT... args) {
 
 _impl_.htscsecurityid_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSimpleTick.HTSCSecurityID)
}
inline std::string* MDSimpleTick::mutable_htscsecurityid() {
  std::string* _s = _internal_mutable_htscsecurityid();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDSimpleTick.HTSCSecurityID)
  return _s;
}
inline const std::string& MDSimpleTick::_internal_htscsecurityid() const {
  return _impl_.htscsecurityid_.Get();
}
inline void MDSimpleTick::_internal_set_htscsecurityid(const std::string& value) {
  
  _impl_.htscsecurityid_.Set(value, GetArenaForAllocation());
}
inline std::string* MDSimpleTick::_internal_mutable_htscsecurityid() {
  
  return _impl_.htscsecurityid_.Mutable(GetArenaForAllocation());
}
inline std::string* MDSimpleTick::release_htscsecurityid() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDSimpleTick.HTSCSecurityID)
  return _impl_.htscsecurityid_.Release();
}
inline void MDSimpleTick::set_allocated_htscsecurityid(std::string* htscsecurityid) {
  if (htscsecurityid != nullptr) {
    
  } else {
    
  }
  _impl_.htscsecurityid_.SetAllocated(htscsecurityid, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.htscsecurityid_.IsDefault()) {
    _impl_.htscsecurityid_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDSimpleTick.HTSCSecurityID)
}

// int32 MDDate = 2;
inline void MDSimpleTick::clear_mddate() {
  _impl_.mddate_ = 0;
}
inline int32_t MDSimpleTick::_internal_mddate() const {
  return _impl_.mddate_;
}
inline int32_t MDSimpleTick::mddate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSimpleTick.MDDate)
  return _internal_mddate();
}
inline void MDSimpleTick::_internal_set_mddate(int32_t value) {
  
  _impl_.mddate_ = value;
}
inline void MDSimpleTick::set_mddate(int32_t value) {
  _internal_set_mddate(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSimpleTick.MDDate)
}

// int32 MDTime = 3;
inline void MDSimpleTick::clear_mdtime() {
  _impl_.mdtime_ = 0;
}
inline int32_t MDSimpleTick::_internal_mdtime() const {
  return _impl_.mdtime_;
}
inline int32_t MDSimpleTick::mdtime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSimpleTick.MDTime)
  return _internal_mdtime();
}
inline void MDSimpleTick::_internal_set_mdtime(int32_t value) {
  
  _impl_.mdtime_ = value;
}
inline void MDSimpleTick::set_mdtime(int32_t value) {
  _internal_set_mdtime(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSimpleTick.MDTime)
}

// int64 DataTimestamp = 4;
inline void MDSimpleTick::clear_datatimestamp() {
  _impl_.datatimestamp_ = int64_t{0};
}
inline int64_t MDSimpleTick::_internal_datatimestamp() const {
  return _impl_.datatimestamp_;
}
inline int64_t MDSimpleTick::datatimestamp() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSimpleTick.DataTimestamp)
  return _internal_datatimestamp();
}
inline void MDSimpleTick::_internal_set_datatimestamp(int64_t value) {
  
  _impl_.datatimestamp_ = value;
}
inline void MDSimpleTick::set_datatimestamp(int64_t value) {
  _internal_set_datatimestamp(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSimpleTick.DataTimestamp)
}

// string TradingPhaseCode = 5;
inline void MDSimpleTick::clear_tradingphasecode() {
  _impl_.tradingphasecode_.ClearToEmpty();
}
inline const std::string& MDSimpleTick::tradingphasecode() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSimpleTick.TradingPhaseCode)
  return _internal_tradingphasecode();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void MDSimpleTick::set_tradingphasecode(ArgT0&& arg0, ArgT... args) {
 
 _impl_.tradingphasecode_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSimpleTick.TradingPhaseCode)
}
inline std::string* MDSimpleTick::mutable_tradingphasecode() {
  std::string* _s = _internal_mutable_tradingphasecode();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDSimpleTick.TradingPhaseCode)
  return _s;
}
inline const std::string& MDSimpleTick::_internal_tradingphasecode() const {
  return _impl_.tradingphasecode_.Get();
}
inline void MDSimpleTick::_internal_set_tradingphasecode(const std::string& value) {
  
  _impl_.tradingphasecode_.Set(value, GetArenaForAllocation());
}
inline std::string* MDSimpleTick::_internal_mutable_tradingphasecode() {
  
  return _impl_.tradingphasecode_.Mutable(GetArenaForAllocation());
}
inline std::string* MDSimpleTick::release_tradingphasecode() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDSimpleTick.TradingPhaseCode)
  return _impl_.tradingphasecode_.Release();
}
inline void MDSimpleTick::set_allocated_tradingphasecode(std::string* tradingphasecode) {
  if (tradingphasecode != nullptr) {
    
  } else {
    
  }
  _impl_.tradingphasecode_.SetAllocated(tradingphasecode, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.tradingphasecode_.IsDefault()) {
    _impl_.tradingphasecode_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDSimpleTick.TradingPhaseCode)
}

// .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
inline void MDSimpleTick::clear_securityidsource() {
  _impl_.securityidsource_ = 0;
}
inline ::com::htsc::mdc::model::ESecurityIDSource MDSimpleTick::_internal_securityidsource() const {
  return static_cast< ::com::htsc::mdc::model::ESecurityIDSource >(_impl_.securityidsource_);
}
inline ::com::htsc::mdc::model::ESecurityIDSource MDSimpleTick::securityidsource() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSimpleTick.securityIDSource)
  return _internal_securityidsource();
}
inline void MDSimpleTick::_internal_set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value) {
  
  _impl_.securityidsource_ = value;
}
inline void MDSimpleTick::set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value) {
  _internal_set_securityidsource(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSimpleTick.securityIDSource)
}

// .com.htsc.mdc.model.ESecurityType securityType = 7;
inline void MDSimpleTick::clear_securitytype() {
  _impl_.securitytype_ = 0;
}
inline ::com::htsc::mdc::model::ESecurityType MDSimpleTick::_internal_securitytype() const {
  return static_cast< ::com::htsc::mdc::model::ESecurityType >(_impl_.securitytype_);
}
inline ::com::htsc::mdc::model::ESecurityType MDSimpleTick::securitytype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSimpleTick.securityType)
  return _internal_securitytype();
}
inline void MDSimpleTick::_internal_set_securitytype(::com::htsc::mdc::model::ESecurityType value) {
  
  _impl_.securitytype_ = value;
}
inline void MDSimpleTick::set_securitytype(::com::htsc::mdc::model::ESecurityType value) {
  _internal_set_securitytype(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSimpleTick.securityType)
}

// int64 NumTrades = 8;
inline void MDSimpleTick::clear_numtrades() {
  _impl_.numtrades_ = int64_t{0};
}
inline int64_t MDSimpleTick::_internal_numtrades() const {
  return _impl_.numtrades_;
}
inline int64_t MDSimpleTick::numtrades() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSimpleTick.NumTrades)
  return _internal_numtrades();
}
inline void MDSimpleTick::_internal_set_numtrades(int64_t value) {
  
  _impl_.numtrades_ = value;
}
inline void MDSimpleTick::set_numtrades(int64_t value) {
  _internal_set_numtrades(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSimpleTick.NumTrades)
}

// int64 TotalVolumeTrade = 9;
inline void MDSimpleTick::clear_totalvolumetrade() {
  _impl_.totalvolumetrade_ = int64_t{0};
}
inline int64_t MDSimpleTick::_internal_totalvolumetrade() const {
  return _impl_.totalvolumetrade_;
}
inline int64_t MDSimpleTick::totalvolumetrade() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSimpleTick.TotalVolumeTrade)
  return _internal_totalvolumetrade();
}
inline void MDSimpleTick::_internal_set_totalvolumetrade(int64_t value) {
  
  _impl_.totalvolumetrade_ = value;
}
inline void MDSimpleTick::set_totalvolumetrade(int64_t value) {
  _internal_set_totalvolumetrade(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSimpleTick.TotalVolumeTrade)
}

// int64 TotalValueTrade = 10;
inline void MDSimpleTick::clear_totalvaluetrade() {
  _impl_.totalvaluetrade_ = int64_t{0};
}
inline int64_t MDSimpleTick::_internal_totalvaluetrade() const {
  return _impl_.totalvaluetrade_;
}
inline int64_t MDSimpleTick::totalvaluetrade() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSimpleTick.TotalValueTrade)
  return _internal_totalvaluetrade();
}
inline void MDSimpleTick::_internal_set_totalvaluetrade(int64_t value) {
  
  _impl_.totalvaluetrade_ = value;
}
inline void MDSimpleTick::set_totalvaluetrade(int64_t value) {
  _internal_set_totalvaluetrade(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSimpleTick.TotalValueTrade)
}

// int64 PreClosePx = 11;
inline void MDSimpleTick::clear_preclosepx() {
  _impl_.preclosepx_ = int64_t{0};
}
inline int64_t MDSimpleTick::_internal_preclosepx() const {
  return _impl_.preclosepx_;
}
inline int64_t MDSimpleTick::preclosepx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSimpleTick.PreClosePx)
  return _internal_preclosepx();
}
inline void MDSimpleTick::_internal_set_preclosepx(int64_t value) {
  
  _impl_.preclosepx_ = value;
}
inline void MDSimpleTick::set_preclosepx(int64_t value) {
  _internal_set_preclosepx(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSimpleTick.PreClosePx)
}

// int64 LastPx = 12;
inline void MDSimpleTick::clear_lastpx() {
  _impl_.lastpx_ = int64_t{0};
}
inline int64_t MDSimpleTick::_internal_lastpx() const {
  return _impl_.lastpx_;
}
inline int64_t MDSimpleTick::lastpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSimpleTick.LastPx)
  return _internal_lastpx();
}
inline void MDSimpleTick::_internal_set_lastpx(int64_t value) {
  
  _impl_.lastpx_ = value;
}
inline void MDSimpleTick::set_lastpx(int64_t value) {
  _internal_set_lastpx(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSimpleTick.LastPx)
}

// int64 OpenPx = 13;
inline void MDSimpleTick::clear_openpx() {
  _impl_.openpx_ = int64_t{0};
}
inline int64_t MDSimpleTick::_internal_openpx() const {
  return _impl_.openpx_;
}
inline int64_t MDSimpleTick::openpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSimpleTick.OpenPx)
  return _internal_openpx();
}
inline void MDSimpleTick::_internal_set_openpx(int64_t value) {
  
  _impl_.openpx_ = value;
}
inline void MDSimpleTick::set_openpx(int64_t value) {
  _internal_set_openpx(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSimpleTick.OpenPx)
}

// int64 ClosePx = 14;
inline void MDSimpleTick::clear_closepx() {
  _impl_.closepx_ = int64_t{0};
}
inline int64_t MDSimpleTick::_internal_closepx() const {
  return _impl_.closepx_;
}
inline int64_t MDSimpleTick::closepx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSimpleTick.ClosePx)
  return _internal_closepx();
}
inline void MDSimpleTick::_internal_set_closepx(int64_t value) {
  
  _impl_.closepx_ = value;
}
inline void MDSimpleTick::set_closepx(int64_t value) {
  _internal_set_closepx(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSimpleTick.ClosePx)
}

// int64 HighPx = 15;
inline void MDSimpleTick::clear_highpx() {
  _impl_.highpx_ = int64_t{0};
}
inline int64_t MDSimpleTick::_internal_highpx() const {
  return _impl_.highpx_;
}
inline int64_t MDSimpleTick::highpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSimpleTick.HighPx)
  return _internal_highpx();
}
inline void MDSimpleTick::_internal_set_highpx(int64_t value) {
  
  _impl_.highpx_ = value;
}
inline void MDSimpleTick::set_highpx(int64_t value) {
  _internal_set_highpx(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSimpleTick.HighPx)
}

// int64 LowPx = 16;
inline void MDSimpleTick::clear_lowpx() {
  _impl_.lowpx_ = int64_t{0};
}
inline int64_t MDSimpleTick::_internal_lowpx() const {
  return _impl_.lowpx_;
}
inline int64_t MDSimpleTick::lowpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSimpleTick.LowPx)
  return _internal_lowpx();
}
inline void MDSimpleTick::_internal_set_lowpx(int64_t value) {
  
  _impl_.lowpx_ = value;
}
inline void MDSimpleTick::set_lowpx(int64_t value) {
  _internal_set_lowpx(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSimpleTick.LowPx)
}

// int64 IOPV = 17;
inline void MDSimpleTick::clear_iopv() {
  _impl_.iopv_ = int64_t{0};
}
inline int64_t MDSimpleTick::_internal_iopv() const {
  return _impl_.iopv_;
}
inline int64_t MDSimpleTick::iopv() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSimpleTick.IOPV)
  return _internal_iopv();
}
inline void MDSimpleTick::_internal_set_iopv(int64_t value) {
  
  _impl_.iopv_ = value;
}
inline void MDSimpleTick::set_iopv(int64_t value) {
  _internal_set_iopv(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSimpleTick.IOPV)
}

// int64 PreIOPV = 18;
inline void MDSimpleTick::clear_preiopv() {
  _impl_.preiopv_ = int64_t{0};
}
inline int64_t MDSimpleTick::_internal_preiopv() const {
  return _impl_.preiopv_;
}
inline int64_t MDSimpleTick::preiopv() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSimpleTick.PreIOPV)
  return _internal_preiopv();
}
inline void MDSimpleTick::_internal_set_preiopv(int64_t value) {
  
  _impl_.preiopv_ = value;
}
inline void MDSimpleTick::set_preiopv(int64_t value) {
  _internal_set_preiopv(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSimpleTick.PreIOPV)
}

// int64 OpenInterest = 19;
inline void MDSimpleTick::clear_openinterest() {
  _impl_.openinterest_ = int64_t{0};
}
inline int64_t MDSimpleTick::_internal_openinterest() const {
  return _impl_.openinterest_;
}
inline int64_t MDSimpleTick::openinterest() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSimpleTick.OpenInterest)
  return _internal_openinterest();
}
inline void MDSimpleTick::_internal_set_openinterest(int64_t value) {
  
  _impl_.openinterest_ = value;
}
inline void MDSimpleTick::set_openinterest(int64_t value) {
  _internal_set_openinterest(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSimpleTick.OpenInterest)
}

// int64 PreOpenInterest = 20;
inline void MDSimpleTick::clear_preopeninterest() {
  _impl_.preopeninterest_ = int64_t{0};
}
inline int64_t MDSimpleTick::_internal_preopeninterest() const {
  return _impl_.preopeninterest_;
}
inline int64_t MDSimpleTick::preopeninterest() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSimpleTick.PreOpenInterest)
  return _internal_preopeninterest();
}
inline void MDSimpleTick::_internal_set_preopeninterest(int64_t value) {
  
  _impl_.preopeninterest_ = value;
}
inline void MDSimpleTick::set_preopeninterest(int64_t value) {
  _internal_set_preopeninterest(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSimpleTick.PreOpenInterest)
}

// int64 SettlePrice = 21;
inline void MDSimpleTick::clear_settleprice() {
  _impl_.settleprice_ = int64_t{0};
}
inline int64_t MDSimpleTick::_internal_settleprice() const {
  return _impl_.settleprice_;
}
inline int64_t MDSimpleTick::settleprice() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSimpleTick.SettlePrice)
  return _internal_settleprice();
}
inline void MDSimpleTick::_internal_set_settleprice(int64_t value) {
  
  _impl_.settleprice_ = value;
}
inline void MDSimpleTick::set_settleprice(int64_t value) {
  _internal_set_settleprice(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSimpleTick.SettlePrice)
}

// int64 PreSettlePrice = 22;
inline void MDSimpleTick::clear_presettleprice() {
  _impl_.presettleprice_ = int64_t{0};
}
inline int64_t MDSimpleTick::_internal_presettleprice() const {
  return _impl_.presettleprice_;
}
inline int64_t MDSimpleTick::presettleprice() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSimpleTick.PreSettlePrice)
  return _internal_presettleprice();
}
inline void MDSimpleTick::_internal_set_presettleprice(int64_t value) {
  
  _impl_.presettleprice_ = value;
}
inline void MDSimpleTick::set_presettleprice(int64_t value) {
  _internal_set_presettleprice(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSimpleTick.PreSettlePrice)
}

// int32 ExchangeDate = 23;
inline void MDSimpleTick::clear_exchangedate() {
  _impl_.exchangedate_ = 0;
}
inline int32_t MDSimpleTick::_internal_exchangedate() const {
  return _impl_.exchangedate_;
}
inline int32_t MDSimpleTick::exchangedate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSimpleTick.ExchangeDate)
  return _internal_exchangedate();
}
inline void MDSimpleTick::_internal_set_exchangedate(int32_t value) {
  
  _impl_.exchangedate_ = value;
}
inline void MDSimpleTick::set_exchangedate(int32_t value) {
  _internal_set_exchangedate(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSimpleTick.ExchangeDate)
}

// int32 ExchangeTime = 24;
inline void MDSimpleTick::clear_exchangetime() {
  _impl_.exchangetime_ = 0;
}
inline int32_t MDSimpleTick::_internal_exchangetime() const {
  return _impl_.exchangetime_;
}
inline int32_t MDSimpleTick::exchangetime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSimpleTick.ExchangeTime)
  return _internal_exchangetime();
}
inline void MDSimpleTick::_internal_set_exchangetime(int32_t value) {
  
  _impl_.exchangetime_ = value;
}
inline void MDSimpleTick::set_exchangetime(int32_t value) {
  _internal_set_exchangetime(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSimpleTick.ExchangeTime)
}

// int32 DataMultiplePowerOf10 = 25;
inline void MDSimpleTick::clear_datamultiplepowerof10() {
  _impl_.datamultiplepowerof10_ = 0;
}
inline int32_t MDSimpleTick::_internal_datamultiplepowerof10() const {
  return _impl_.datamultiplepowerof10_;
}
inline int32_t MDSimpleTick::datamultiplepowerof10() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSimpleTick.DataMultiplePowerOf10)
  return _internal_datamultiplepowerof10();
}
inline void MDSimpleTick::_internal_set_datamultiplepowerof10(int32_t value) {
  
  _impl_.datamultiplepowerof10_ = value;
}
inline void MDSimpleTick::set_datamultiplepowerof10(int32_t value) {
  _internal_set_datamultiplepowerof10(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSimpleTick.DataMultiplePowerOf10)
}

// .com.htsc.mdc.insight.model.ADIndicators ADIndicators = 40;
inline bool MDSimpleTick::_internal_has_adindicators() const {
  return this != internal_default_instance() && _impl_.adindicators_ != nullptr;
}
inline bool MDSimpleTick::has_adindicators() const {
  return _internal_has_adindicators();
}
inline void MDSimpleTick::clear_adindicators() {
  if (GetArenaForAllocation() == nullptr && _impl_.adindicators_ != nullptr) {
    delete _impl_.adindicators_;
  }
  _impl_.adindicators_ = nullptr;
}
inline const ::com::htsc::mdc::insight::model::ADIndicators& MDSimpleTick::_internal_adindicators() const {
  const ::com::htsc::mdc::insight::model::ADIndicators* p = _impl_.adindicators_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::ADIndicators&>(
      ::com::htsc::mdc::insight::model::_ADIndicators_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::ADIndicators& MDSimpleTick::adindicators() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSimpleTick.ADIndicators)
  return _internal_adindicators();
}
inline void MDSimpleTick::unsafe_arena_set_allocated_adindicators(
    ::com::htsc::mdc::insight::model::ADIndicators* adindicators) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.adindicators_);
  }
  _impl_.adindicators_ = adindicators;
  if (adindicators) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MDSimpleTick.ADIndicators)
}
inline ::com::htsc::mdc::insight::model::ADIndicators* MDSimpleTick::release_adindicators() {
  
  ::com::htsc::mdc::insight::model::ADIndicators* temp = _impl_.adindicators_;
  _impl_.adindicators_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::ADIndicators* MDSimpleTick::unsafe_arena_release_adindicators() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDSimpleTick.ADIndicators)
  
  ::com::htsc::mdc::insight::model::ADIndicators* temp = _impl_.adindicators_;
  _impl_.adindicators_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::ADIndicators* MDSimpleTick::_internal_mutable_adindicators() {
  
  if (_impl_.adindicators_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::ADIndicators>(GetArenaForAllocation());
    _impl_.adindicators_ = p;
  }
  return _impl_.adindicators_;
}
inline ::com::htsc::mdc::insight::model::ADIndicators* MDSimpleTick::mutable_adindicators() {
  ::com::htsc::mdc::insight::model::ADIndicators* _msg = _internal_mutable_adindicators();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDSimpleTick.ADIndicators)
  return _msg;
}
inline void MDSimpleTick::set_allocated_adindicators(::com::htsc::mdc::insight::model::ADIndicators* adindicators) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.adindicators_;
  }
  if (adindicators) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(adindicators);
    if (message_arena != submessage_arena) {
      adindicators = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, adindicators, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.adindicators_ = adindicators;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDSimpleTick.ADIndicators)
}

// -------------------------------------------------------------------

// ADIndicators

// int64 Ind1101 = 1;
inline void ADIndicators::clear_ind1101() {
  _impl_.ind1101_ = int64_t{0};
}
inline int64_t ADIndicators::_internal_ind1101() const {
  return _impl_.ind1101_;
}
inline int64_t ADIndicators::ind1101() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicators.Ind1101)
  return _internal_ind1101();
}
inline void ADIndicators::_internal_set_ind1101(int64_t value) {
  
  _impl_.ind1101_ = value;
}
inline void ADIndicators::set_ind1101(int64_t value) {
  _internal_set_ind1101(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADIndicators.Ind1101)
}

// int64 Ind1102 = 2;
inline void ADIndicators::clear_ind1102() {
  _impl_.ind1102_ = int64_t{0};
}
inline int64_t ADIndicators::_internal_ind1102() const {
  return _impl_.ind1102_;
}
inline int64_t ADIndicators::ind1102() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicators.Ind1102)
  return _internal_ind1102();
}
inline void ADIndicators::_internal_set_ind1102(int64_t value) {
  
  _impl_.ind1102_ = value;
}
inline void ADIndicators::set_ind1102(int64_t value) {
  _internal_set_ind1102(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADIndicators.Ind1102)
}

// int64 Ind1103 = 3;
inline void ADIndicators::clear_ind1103() {
  _impl_.ind1103_ = int64_t{0};
}
inline int64_t ADIndicators::_internal_ind1103() const {
  return _impl_.ind1103_;
}
inline int64_t ADIndicators::ind1103() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicators.Ind1103)
  return _internal_ind1103();
}
inline void ADIndicators::_internal_set_ind1103(int64_t value) {
  
  _impl_.ind1103_ = value;
}
inline void ADIndicators::set_ind1103(int64_t value) {
  _internal_set_ind1103(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADIndicators.Ind1103)
}

// int64 Ind1104 = 4;
inline void ADIndicators::clear_ind1104() {
  _impl_.ind1104_ = int64_t{0};
}
inline int64_t ADIndicators::_internal_ind1104() const {
  return _impl_.ind1104_;
}
inline int64_t ADIndicators::ind1104() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicators.Ind1104)
  return _internal_ind1104();
}
inline void ADIndicators::_internal_set_ind1104(int64_t value) {
  
  _impl_.ind1104_ = value;
}
inline void ADIndicators::set_ind1104(int64_t value) {
  _internal_set_ind1104(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADIndicators.Ind1104)
}

// int64 Ind1105 = 5;
inline void ADIndicators::clear_ind1105() {
  _impl_.ind1105_ = int64_t{0};
}
inline int64_t ADIndicators::_internal_ind1105() const {
  return _impl_.ind1105_;
}
inline int64_t ADIndicators::ind1105() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicators.Ind1105)
  return _internal_ind1105();
}
inline void ADIndicators::_internal_set_ind1105(int64_t value) {
  
  _impl_.ind1105_ = value;
}
inline void ADIndicators::set_ind1105(int64_t value) {
  _internal_set_ind1105(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADIndicators.Ind1105)
}

// int64 Ind1106 = 6;
inline void ADIndicators::clear_ind1106() {
  _impl_.ind1106_ = int64_t{0};
}
inline int64_t ADIndicators::_internal_ind1106() const {
  return _impl_.ind1106_;
}
inline int64_t ADIndicators::ind1106() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicators.Ind1106)
  return _internal_ind1106();
}
inline void ADIndicators::_internal_set_ind1106(int64_t value) {
  
  _impl_.ind1106_ = value;
}
inline void ADIndicators::set_ind1106(int64_t value) {
  _internal_set_ind1106(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADIndicators.Ind1106)
}

// int64 Ind1107 = 7;
inline void ADIndicators::clear_ind1107() {
  _impl_.ind1107_ = int64_t{0};
}
inline int64_t ADIndicators::_internal_ind1107() const {
  return _impl_.ind1107_;
}
inline int64_t ADIndicators::ind1107() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicators.Ind1107)
  return _internal_ind1107();
}
inline void ADIndicators::_internal_set_ind1107(int64_t value) {
  
  _impl_.ind1107_ = value;
}
inline void ADIndicators::set_ind1107(int64_t value) {
  _internal_set_ind1107(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADIndicators.Ind1107)
}

// int64 Ind1108 = 8;
inline void ADIndicators::clear_ind1108() {
  _impl_.ind1108_ = int64_t{0};
}
inline int64_t ADIndicators::_internal_ind1108() const {
  return _impl_.ind1108_;
}
inline int64_t ADIndicators::ind1108() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicators.Ind1108)
  return _internal_ind1108();
}
inline void ADIndicators::_internal_set_ind1108(int64_t value) {
  
  _impl_.ind1108_ = value;
}
inline void ADIndicators::set_ind1108(int64_t value) {
  _internal_set_ind1108(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADIndicators.Ind1108)
}

// int64 Ind1109 = 9;
inline void ADIndicators::clear_ind1109() {
  _impl_.ind1109_ = int64_t{0};
}
inline int64_t ADIndicators::_internal_ind1109() const {
  return _impl_.ind1109_;
}
inline int64_t ADIndicators::ind1109() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicators.Ind1109)
  return _internal_ind1109();
}
inline void ADIndicators::_internal_set_ind1109(int64_t value) {
  
  _impl_.ind1109_ = value;
}
inline void ADIndicators::set_ind1109(int64_t value) {
  _internal_set_ind1109(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADIndicators.Ind1109)
}

// int64 Ind1110 = 10;
inline void ADIndicators::clear_ind1110() {
  _impl_.ind1110_ = int64_t{0};
}
inline int64_t ADIndicators::_internal_ind1110() const {
  return _impl_.ind1110_;
}
inline int64_t ADIndicators::ind1110() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicators.Ind1110)
  return _internal_ind1110();
}
inline void ADIndicators::_internal_set_ind1110(int64_t value) {
  
  _impl_.ind1110_ = value;
}
inline void ADIndicators::set_ind1110(int64_t value) {
  _internal_set_ind1110(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADIndicators.Ind1110)
}

// int64 Ind1111 = 11;
inline void ADIndicators::clear_ind1111() {
  _impl_.ind1111_ = int64_t{0};
}
inline int64_t ADIndicators::_internal_ind1111() const {
  return _impl_.ind1111_;
}
inline int64_t ADIndicators::ind1111() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicators.Ind1111)
  return _internal_ind1111();
}
inline void ADIndicators::_internal_set_ind1111(int64_t value) {
  
  _impl_.ind1111_ = value;
}
inline void ADIndicators::set_ind1111(int64_t value) {
  _internal_set_ind1111(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADIndicators.Ind1111)
}

// int64 Ind1112 = 12;
inline void ADIndicators::clear_ind1112() {
  _impl_.ind1112_ = int64_t{0};
}
inline int64_t ADIndicators::_internal_ind1112() const {
  return _impl_.ind1112_;
}
inline int64_t ADIndicators::ind1112() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicators.Ind1112)
  return _internal_ind1112();
}
inline void ADIndicators::_internal_set_ind1112(int64_t value) {
  
  _impl_.ind1112_ = value;
}
inline void ADIndicators::set_ind1112(int64_t value) {
  _internal_set_ind1112(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADIndicators.Ind1112)
}

// int64 Ind1113 = 13;
inline void ADIndicators::clear_ind1113() {
  _impl_.ind1113_ = int64_t{0};
}
inline int64_t ADIndicators::_internal_ind1113() const {
  return _impl_.ind1113_;
}
inline int64_t ADIndicators::ind1113() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicators.Ind1113)
  return _internal_ind1113();
}
inline void ADIndicators::_internal_set_ind1113(int64_t value) {
  
  _impl_.ind1113_ = value;
}
inline void ADIndicators::set_ind1113(int64_t value) {
  _internal_set_ind1113(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADIndicators.Ind1113)
}

// int64 Ind1114 = 14;
inline void ADIndicators::clear_ind1114() {
  _impl_.ind1114_ = int64_t{0};
}
inline int64_t ADIndicators::_internal_ind1114() const {
  return _impl_.ind1114_;
}
inline int64_t ADIndicators::ind1114() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicators.Ind1114)
  return _internal_ind1114();
}
inline void ADIndicators::_internal_set_ind1114(int64_t value) {
  
  _impl_.ind1114_ = value;
}
inline void ADIndicators::set_ind1114(int64_t value) {
  _internal_set_ind1114(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADIndicators.Ind1114)
}

// int64 Ind1115 = 15;
inline void ADIndicators::clear_ind1115() {
  _impl_.ind1115_ = int64_t{0};
}
inline int64_t ADIndicators::_internal_ind1115() const {
  return _impl_.ind1115_;
}
inline int64_t ADIndicators::ind1115() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicators.Ind1115)
  return _internal_ind1115();
}
inline void ADIndicators::_internal_set_ind1115(int64_t value) {
  
  _impl_.ind1115_ = value;
}
inline void ADIndicators::set_ind1115(int64_t value) {
  _internal_set_ind1115(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADIndicators.Ind1115)
}

// int64 Ind1116 = 16;
inline void ADIndicators::clear_ind1116() {
  _impl_.ind1116_ = int64_t{0};
}
inline int64_t ADIndicators::_internal_ind1116() const {
  return _impl_.ind1116_;
}
inline int64_t ADIndicators::ind1116() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicators.Ind1116)
  return _internal_ind1116();
}
inline void ADIndicators::_internal_set_ind1116(int64_t value) {
  
  _impl_.ind1116_ = value;
}
inline void ADIndicators::set_ind1116(int64_t value) {
  _internal_set_ind1116(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADIndicators.Ind1116)
}

// int64 Ind1117 = 17;
inline void ADIndicators::clear_ind1117() {
  _impl_.ind1117_ = int64_t{0};
}
inline int64_t ADIndicators::_internal_ind1117() const {
  return _impl_.ind1117_;
}
inline int64_t ADIndicators::ind1117() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicators.Ind1117)
  return _internal_ind1117();
}
inline void ADIndicators::_internal_set_ind1117(int64_t value) {
  
  _impl_.ind1117_ = value;
}
inline void ADIndicators::set_ind1117(int64_t value) {
  _internal_set_ind1117(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADIndicators.Ind1117)
}

// int64 Ind1118 = 18;
inline void ADIndicators::clear_ind1118() {
  _impl_.ind1118_ = int64_t{0};
}
inline int64_t ADIndicators::_internal_ind1118() const {
  return _impl_.ind1118_;
}
inline int64_t ADIndicators::ind1118() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicators.Ind1118)
  return _internal_ind1118();
}
inline void ADIndicators::_internal_set_ind1118(int64_t value) {
  
  _impl_.ind1118_ = value;
}
inline void ADIndicators::set_ind1118(int64_t value) {
  _internal_set_ind1118(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADIndicators.Ind1118)
}

// int64 Ind1119 = 19;
inline void ADIndicators::clear_ind1119() {
  _impl_.ind1119_ = int64_t{0};
}
inline int64_t ADIndicators::_internal_ind1119() const {
  return _impl_.ind1119_;
}
inline int64_t ADIndicators::ind1119() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicators.Ind1119)
  return _internal_ind1119();
}
inline void ADIndicators::_internal_set_ind1119(int64_t value) {
  
  _impl_.ind1119_ = value;
}
inline void ADIndicators::set_ind1119(int64_t value) {
  _internal_set_ind1119(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADIndicators.Ind1119)
}

// int64 Ind1120 = 20;
inline void ADIndicators::clear_ind1120() {
  _impl_.ind1120_ = int64_t{0};
}
inline int64_t ADIndicators::_internal_ind1120() const {
  return _impl_.ind1120_;
}
inline int64_t ADIndicators::ind1120() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicators.Ind1120)
  return _internal_ind1120();
}
inline void ADIndicators::_internal_set_ind1120(int64_t value) {
  
  _impl_.ind1120_ = value;
}
inline void ADIndicators::set_ind1120(int64_t value) {
  _internal_set_ind1120(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADIndicators.Ind1120)
}

// int64 Ind1121 = 21;
inline void ADIndicators::clear_ind1121() {
  _impl_.ind1121_ = int64_t{0};
}
inline int64_t ADIndicators::_internal_ind1121() const {
  return _impl_.ind1121_;
}
inline int64_t ADIndicators::ind1121() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADIndicators.Ind1121)
  return _internal_ind1121();
}
inline void ADIndicators::_internal_set_ind1121(int64_t value) {
  
  _impl_.ind1121_ = value;
}
inline void ADIndicators::set_ind1121(int64_t value) {
  _internal_set_ind1121(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADIndicators.Ind1121)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_MDSimpleTick_2eproto

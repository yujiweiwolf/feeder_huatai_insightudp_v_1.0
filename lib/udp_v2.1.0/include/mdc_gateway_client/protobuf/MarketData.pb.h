// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MarketData.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_MarketData_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_MarketData_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "EMarketDataType.pb.h"
#include "MDStock.pb.h"
#include "MDBond.pb.h"
#include "MDFund.pb.h"
#include "MDOption.pb.h"
#include "MDIndex.pb.h"
#include "MDFuture.pb.h"
#include "MDTransaction.pb.h"
#include "MDOrder.pb.h"
#include "ADKLine.pb.h"
#include "ADTwap.pb.h"
#include "ADVwap.pb.h"
#include "MDBasicInfo.pb.h"
#include "MDSimpleTick.pb.h"
#include "ADUpsDownsAnalysis.pb.h"
#include "ADIndicatorsRanking.pb.h"
#include "DynamicPacket.pb.h"
#include "ADVolumeByPrice.pb.h"
#include "ADFundFlowAnalysis.pb.h"
#include "MDForex.pb.h"
#include "MDSpot.pb.h"
#include "MDRate.pb.h"
#include "ADOrderbookSnapshot.pb.h"
#include "ADOrderbookSnapshotWithTick.pb.h"
#include "MDQuote.pb.h"
#include "MDETFBasicInfo.pb.h"
#include "MDFIQuote.pb.h"
#include "ADChipDistribution.pb.h"
#include "MDWarrant.pb.h"
#include "MDSecurityLending.pb.h"
#include "ADNews.pb.h"
#include "ADStaringResult.pb.h"
#include "ADDerivedAnalysis.pb.h"
#include "MDQBQuote.pb.h"
#include "MDQBTransaction.pb.h"
#include "MDUSATransaction.pb.h"
#include "MDUSAOrder.pb.h"
#include "MDSLTransaction.pb.h"
#include "MDSLOrder.pb.h"
#include "MDHKGreyMarket.pb.h"
#include "MDSLIndicativeQuote.pb.h"
#include "MDSLStatistics.pb.h"
#include "MDUSAQuote.pb.h"
#include "MDSLEstimation.pb.h"
#include "MDCnexDeal.pb.h"
#include "MDCnexQuote.pb.h"
#include "MDDelaySnapshot.pb.h"
#include "MDHighAccuracyFuture.pb.h"
#include "MDCfetsForex.pb.h"
#include "MDCfetsFxSnapshot.pb.h"
#include "MDCfetsFxQuote.pb.h"
#include "SPFuture.pb.h"
#include "MDCfetsBenchmark.pb.h"
#include "MDCfetsBondDeal.pb.h"
#include "MDCfetsBondSnapshot.pb.h"
#include "MDCfetsCurrencyDeal.pb.h"
#include "MDCfetsCurrencySnapshot.pb.h"
#include "MDCfetsODMSnapshot.pb.h"
#include "MDCfetsQDMQuote.pb.h"
#include "MDCfetsRateDeal.pb.h"
#include "MDCfetsRateSnapshot.pb.h"
#include "MDCfetsFxCnyMiddlePrice.pb.h"
#include "MDIopvSnapshot.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_MarketData_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_MarketData_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_MarketData_2eproto;
namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {
class MarketData;
struct MarketDataDefaultTypeInternal;
extern MarketDataDefaultTypeInternal _MarketData_default_instance_;
class MarketDataList;
struct MarketDataListDefaultTypeInternal;
extern MarketDataListDefaultTypeInternal _MarketDataList_default_instance_;
class MarketDataStream;
struct MarketDataStreamDefaultTypeInternal;
extern MarketDataStreamDefaultTypeInternal _MarketDataStream_default_instance_;
}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> ::com::htsc::mdc::insight::model::MarketData* Arena::CreateMaybeMessage<::com::htsc::mdc::insight::model::MarketData>(Arena*);
template<> ::com::htsc::mdc::insight::model::MarketDataList* Arena::CreateMaybeMessage<::com::htsc::mdc::insight::model::MarketDataList>(Arena*);
template<> ::com::htsc::mdc::insight::model::MarketDataStream* Arena::CreateMaybeMessage<::com::htsc::mdc::insight::model::MarketDataStream>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {

// ===================================================================

class MarketData final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.htsc.mdc.insight.model.MarketData) */ {
 public:
  inline MarketData() : MarketData(nullptr) {}
  ~MarketData() override;
  explicit PROTOBUF_CONSTEXPR MarketData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MarketData(const MarketData& from);
  MarketData(MarketData&& from) noexcept
    : MarketData() {
    *this = ::std::move(from);
  }

  inline MarketData& operator=(const MarketData& from) {
    CopyFrom(from);
    return *this;
  }
  inline MarketData& operator=(MarketData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MarketData& default_instance() {
    return *internal_default_instance();
  }
  static inline const MarketData* internal_default_instance() {
    return reinterpret_cast<const MarketData*>(
               &_MarketData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MarketData& a, MarketData& b) {
    a.Swap(&b);
  }
  inline void Swap(MarketData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MarketData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MarketData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MarketData>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MarketData& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MarketData& from) {
    MarketData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MarketData* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.htsc.mdc.insight.model.MarketData";
  }
  protected:
  explicit MarketData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMdStockFieldNumber = 10,
    kMdIndexFieldNumber = 11,
    kMdBondFieldNumber = 12,
    kMdFundFieldNumber = 13,
    kMdOptionFieldNumber = 14,
    kMdFutureFieldNumber = 15,
    kMdTransactionFieldNumber = 16,
    kMdOrderFieldNumber = 17,
    kMdKLineFieldNumber = 18,
    kMdTwapFieldNumber = 19,
    kMdVwapFieldNumber = 20,
    kMdConstantFieldNumber = 21,
    kMdSimpleTickFieldNumber = 22,
    kMdUpsDownsAnalysisFieldNumber = 23,
    kMdIndicatorsRankingFieldNumber = 24,
    kDynamicPacketFieldNumber = 25,
    kMdVolumeByPriceFieldNumber = 26,
    kMdFundFlowAnalysisFieldNumber = 27,
    kMdForexFieldNumber = 28,
    kMdSpotFieldNumber = 29,
    kMdRateFieldNumber = 30,
    kOrderbookSnapshotFieldNumber = 31,
    kOrderbookSnapshotWithTickFieldNumber = 32,
    kMdQuoteFieldNumber = 33,
    kMdETFBasicInfoFieldNumber = 34,
    kMdFIQuoteFieldNumber = 35,
    kMdChipDistributionFieldNumber = 36,
    kMdWarrantFieldNumber = 37,
    kMdSecurityLendingFieldNumber = 38,
    kMdNewsFieldNumber = 39,
    kMdStaringResultFieldNumber = 40,
    kMdDerivedAnalysisFieldNumber = 41,
    kMdQBQuoteFieldNumber = 42,
    kMdQBTransactionFieldNumber = 43,
    kMdUSAOrderFieldNumber = 44,
    kMdUSATransactionFieldNumber = 45,
    kMdSLOrderFieldNumber = 46,
    kMdSLTransactionFieldNumber = 47,
    kMdHKGreyMarketFieldNumber = 48,
    kMdSLIndicativeQuoteFieldNumber = 49,
    kMdSLStatisticsFieldNumber = 50,
    kMdUSAQuoteFieldNumber = 51,
    kMdSLEstimationFieldNumber = 52,
    kMdCnexDealFieldNumber = 53,
    kMdCnexQuoteFieldNumber = 54,
    kMdDelaySnapshotFieldNumber = 55,
    kMdHighAccuracyFutureFieldNumber = 56,
    kMdCfetsForexFieldNumber = 57,
    kMdCfetsFxSnapshotFieldNumber = 58,
    kMdCfetsFxQuoteFieldNumber = 59,
    kSpFutureFieldNumber = 60,
    kMdCfetsBenchmarkFieldNumber = 61,
    kMdCfetsBondDealFieldNumber = 62,
    kMdCfetsBondSnapshotFieldNumber = 63,
    kMdCfetsCurrencyDealFieldNumber = 64,
    kMdCfetsCurrencySnapshotFieldNumber = 65,
    kMdCfetsODMSnapshotFieldNumber = 66,
    kMdCfetsQDMQuoteFieldNumber = 67,
    kMdCfetsRateDealFieldNumber = 68,
    kMdCfetsRateSnapshotFieldNumber = 69,
    kMdCfetsFxCnyMiddlePriceFieldNumber = 70,
    kMdIopvSnapshotFieldNumber = 71,
    kMessageChannelNumberFieldNumber = 2,
    kMarketDataTypeFieldNumber = 1,
  };
  // .com.htsc.mdc.insight.model.MDStock mdStock = 10;
  bool has_mdstock() const;
  private:
  bool _internal_has_mdstock() const;
  public:
  void clear_mdstock();
  const ::com::htsc::mdc::insight::model::MDStock& mdstock() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDStock* release_mdstock();
  ::com::htsc::mdc::insight::model::MDStock* mutable_mdstock();
  void set_allocated_mdstock(::com::htsc::mdc::insight::model::MDStock* mdstock);
  private:
  const ::com::htsc::mdc::insight::model::MDStock& _internal_mdstock() const;
  ::com::htsc::mdc::insight::model::MDStock* _internal_mutable_mdstock();
  public:
  void unsafe_arena_set_allocated_mdstock(
      ::com::htsc::mdc::insight::model::MDStock* mdstock);
  ::com::htsc::mdc::insight::model::MDStock* unsafe_arena_release_mdstock();

  // .com.htsc.mdc.insight.model.MDIndex mdIndex = 11;
  bool has_mdindex() const;
  private:
  bool _internal_has_mdindex() const;
  public:
  void clear_mdindex();
  const ::com::htsc::mdc::insight::model::MDIndex& mdindex() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDIndex* release_mdindex();
  ::com::htsc::mdc::insight::model::MDIndex* mutable_mdindex();
  void set_allocated_mdindex(::com::htsc::mdc::insight::model::MDIndex* mdindex);
  private:
  const ::com::htsc::mdc::insight::model::MDIndex& _internal_mdindex() const;
  ::com::htsc::mdc::insight::model::MDIndex* _internal_mutable_mdindex();
  public:
  void unsafe_arena_set_allocated_mdindex(
      ::com::htsc::mdc::insight::model::MDIndex* mdindex);
  ::com::htsc::mdc::insight::model::MDIndex* unsafe_arena_release_mdindex();

  // .com.htsc.mdc.insight.model.MDBond mdBond = 12;
  bool has_mdbond() const;
  private:
  bool _internal_has_mdbond() const;
  public:
  void clear_mdbond();
  const ::com::htsc::mdc::insight::model::MDBond& mdbond() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDBond* release_mdbond();
  ::com::htsc::mdc::insight::model::MDBond* mutable_mdbond();
  void set_allocated_mdbond(::com::htsc::mdc::insight::model::MDBond* mdbond);
  private:
  const ::com::htsc::mdc::insight::model::MDBond& _internal_mdbond() const;
  ::com::htsc::mdc::insight::model::MDBond* _internal_mutable_mdbond();
  public:
  void unsafe_arena_set_allocated_mdbond(
      ::com::htsc::mdc::insight::model::MDBond* mdbond);
  ::com::htsc::mdc::insight::model::MDBond* unsafe_arena_release_mdbond();

  // .com.htsc.mdc.insight.model.MDFund mdFund = 13;
  bool has_mdfund() const;
  private:
  bool _internal_has_mdfund() const;
  public:
  void clear_mdfund();
  const ::com::htsc::mdc::insight::model::MDFund& mdfund() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDFund* release_mdfund();
  ::com::htsc::mdc::insight::model::MDFund* mutable_mdfund();
  void set_allocated_mdfund(::com::htsc::mdc::insight::model::MDFund* mdfund);
  private:
  const ::com::htsc::mdc::insight::model::MDFund& _internal_mdfund() const;
  ::com::htsc::mdc::insight::model::MDFund* _internal_mutable_mdfund();
  public:
  void unsafe_arena_set_allocated_mdfund(
      ::com::htsc::mdc::insight::model::MDFund* mdfund);
  ::com::htsc::mdc::insight::model::MDFund* unsafe_arena_release_mdfund();

  // .com.htsc.mdc.insight.model.MDOption mdOption = 14;
  bool has_mdoption() const;
  private:
  bool _internal_has_mdoption() const;
  public:
  void clear_mdoption();
  const ::com::htsc::mdc::insight::model::MDOption& mdoption() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDOption* release_mdoption();
  ::com::htsc::mdc::insight::model::MDOption* mutable_mdoption();
  void set_allocated_mdoption(::com::htsc::mdc::insight::model::MDOption* mdoption);
  private:
  const ::com::htsc::mdc::insight::model::MDOption& _internal_mdoption() const;
  ::com::htsc::mdc::insight::model::MDOption* _internal_mutable_mdoption();
  public:
  void unsafe_arena_set_allocated_mdoption(
      ::com::htsc::mdc::insight::model::MDOption* mdoption);
  ::com::htsc::mdc::insight::model::MDOption* unsafe_arena_release_mdoption();

  // .com.htsc.mdc.insight.model.MDFuture mdFuture = 15;
  bool has_mdfuture() const;
  private:
  bool _internal_has_mdfuture() const;
  public:
  void clear_mdfuture();
  const ::com::htsc::mdc::insight::model::MDFuture& mdfuture() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDFuture* release_mdfuture();
  ::com::htsc::mdc::insight::model::MDFuture* mutable_mdfuture();
  void set_allocated_mdfuture(::com::htsc::mdc::insight::model::MDFuture* mdfuture);
  private:
  const ::com::htsc::mdc::insight::model::MDFuture& _internal_mdfuture() const;
  ::com::htsc::mdc::insight::model::MDFuture* _internal_mutable_mdfuture();
  public:
  void unsafe_arena_set_allocated_mdfuture(
      ::com::htsc::mdc::insight::model::MDFuture* mdfuture);
  ::com::htsc::mdc::insight::model::MDFuture* unsafe_arena_release_mdfuture();

  // .com.htsc.mdc.insight.model.MDTransaction mdTransaction = 16;
  bool has_mdtransaction() const;
  private:
  bool _internal_has_mdtransaction() const;
  public:
  void clear_mdtransaction();
  const ::com::htsc::mdc::insight::model::MDTransaction& mdtransaction() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDTransaction* release_mdtransaction();
  ::com::htsc::mdc::insight::model::MDTransaction* mutable_mdtransaction();
  void set_allocated_mdtransaction(::com::htsc::mdc::insight::model::MDTransaction* mdtransaction);
  private:
  const ::com::htsc::mdc::insight::model::MDTransaction& _internal_mdtransaction() const;
  ::com::htsc::mdc::insight::model::MDTransaction* _internal_mutable_mdtransaction();
  public:
  void unsafe_arena_set_allocated_mdtransaction(
      ::com::htsc::mdc::insight::model::MDTransaction* mdtransaction);
  ::com::htsc::mdc::insight::model::MDTransaction* unsafe_arena_release_mdtransaction();

  // .com.htsc.mdc.insight.model.MDOrder mdOrder = 17;
  bool has_mdorder() const;
  private:
  bool _internal_has_mdorder() const;
  public:
  void clear_mdorder();
  const ::com::htsc::mdc::insight::model::MDOrder& mdorder() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDOrder* release_mdorder();
  ::com::htsc::mdc::insight::model::MDOrder* mutable_mdorder();
  void set_allocated_mdorder(::com::htsc::mdc::insight::model::MDOrder* mdorder);
  private:
  const ::com::htsc::mdc::insight::model::MDOrder& _internal_mdorder() const;
  ::com::htsc::mdc::insight::model::MDOrder* _internal_mutable_mdorder();
  public:
  void unsafe_arena_set_allocated_mdorder(
      ::com::htsc::mdc::insight::model::MDOrder* mdorder);
  ::com::htsc::mdc::insight::model::MDOrder* unsafe_arena_release_mdorder();

  // .com.htsc.mdc.insight.model.ADKLine mdKLine = 18;
  bool has_mdkline() const;
  private:
  bool _internal_has_mdkline() const;
  public:
  void clear_mdkline();
  const ::com::htsc::mdc::insight::model::ADKLine& mdkline() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::ADKLine* release_mdkline();
  ::com::htsc::mdc::insight::model::ADKLine* mutable_mdkline();
  void set_allocated_mdkline(::com::htsc::mdc::insight::model::ADKLine* mdkline);
  private:
  const ::com::htsc::mdc::insight::model::ADKLine& _internal_mdkline() const;
  ::com::htsc::mdc::insight::model::ADKLine* _internal_mutable_mdkline();
  public:
  void unsafe_arena_set_allocated_mdkline(
      ::com::htsc::mdc::insight::model::ADKLine* mdkline);
  ::com::htsc::mdc::insight::model::ADKLine* unsafe_arena_release_mdkline();

  // .com.htsc.mdc.insight.model.ADTwap mdTwap = 19;
  bool has_mdtwap() const;
  private:
  bool _internal_has_mdtwap() const;
  public:
  void clear_mdtwap();
  const ::com::htsc::mdc::insight::model::ADTwap& mdtwap() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::ADTwap* release_mdtwap();
  ::com::htsc::mdc::insight::model::ADTwap* mutable_mdtwap();
  void set_allocated_mdtwap(::com::htsc::mdc::insight::model::ADTwap* mdtwap);
  private:
  const ::com::htsc::mdc::insight::model::ADTwap& _internal_mdtwap() const;
  ::com::htsc::mdc::insight::model::ADTwap* _internal_mutable_mdtwap();
  public:
  void unsafe_arena_set_allocated_mdtwap(
      ::com::htsc::mdc::insight::model::ADTwap* mdtwap);
  ::com::htsc::mdc::insight::model::ADTwap* unsafe_arena_release_mdtwap();

  // .com.htsc.mdc.insight.model.ADVwap mdVwap = 20;
  bool has_mdvwap() const;
  private:
  bool _internal_has_mdvwap() const;
  public:
  void clear_mdvwap();
  const ::com::htsc::mdc::insight::model::ADVwap& mdvwap() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::ADVwap* release_mdvwap();
  ::com::htsc::mdc::insight::model::ADVwap* mutable_mdvwap();
  void set_allocated_mdvwap(::com::htsc::mdc::insight::model::ADVwap* mdvwap);
  private:
  const ::com::htsc::mdc::insight::model::ADVwap& _internal_mdvwap() const;
  ::com::htsc::mdc::insight::model::ADVwap* _internal_mutable_mdvwap();
  public:
  void unsafe_arena_set_allocated_mdvwap(
      ::com::htsc::mdc::insight::model::ADVwap* mdvwap);
  ::com::htsc::mdc::insight::model::ADVwap* unsafe_arena_release_mdvwap();

  // .com.htsc.mdc.insight.model.MDBasicInfo mdConstant = 21;
  bool has_mdconstant() const;
  private:
  bool _internal_has_mdconstant() const;
  public:
  void clear_mdconstant();
  const ::com::htsc::mdc::insight::model::MDBasicInfo& mdconstant() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDBasicInfo* release_mdconstant();
  ::com::htsc::mdc::insight::model::MDBasicInfo* mutable_mdconstant();
  void set_allocated_mdconstant(::com::htsc::mdc::insight::model::MDBasicInfo* mdconstant);
  private:
  const ::com::htsc::mdc::insight::model::MDBasicInfo& _internal_mdconstant() const;
  ::com::htsc::mdc::insight::model::MDBasicInfo* _internal_mutable_mdconstant();
  public:
  void unsafe_arena_set_allocated_mdconstant(
      ::com::htsc::mdc::insight::model::MDBasicInfo* mdconstant);
  ::com::htsc::mdc::insight::model::MDBasicInfo* unsafe_arena_release_mdconstant();

  // .com.htsc.mdc.insight.model.MDSimpleTick mdSimpleTick = 22;
  bool has_mdsimpletick() const;
  private:
  bool _internal_has_mdsimpletick() const;
  public:
  void clear_mdsimpletick();
  const ::com::htsc::mdc::insight::model::MDSimpleTick& mdsimpletick() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDSimpleTick* release_mdsimpletick();
  ::com::htsc::mdc::insight::model::MDSimpleTick* mutable_mdsimpletick();
  void set_allocated_mdsimpletick(::com::htsc::mdc::insight::model::MDSimpleTick* mdsimpletick);
  private:
  const ::com::htsc::mdc::insight::model::MDSimpleTick& _internal_mdsimpletick() const;
  ::com::htsc::mdc::insight::model::MDSimpleTick* _internal_mutable_mdsimpletick();
  public:
  void unsafe_arena_set_allocated_mdsimpletick(
      ::com::htsc::mdc::insight::model::MDSimpleTick* mdsimpletick);
  ::com::htsc::mdc::insight::model::MDSimpleTick* unsafe_arena_release_mdsimpletick();

  // .com.htsc.mdc.insight.model.ADUpsDownsAnalysis mdUpsDownsAnalysis = 23;
  bool has_mdupsdownsanalysis() const;
  private:
  bool _internal_has_mdupsdownsanalysis() const;
  public:
  void clear_mdupsdownsanalysis();
  const ::com::htsc::mdc::insight::model::ADUpsDownsAnalysis& mdupsdownsanalysis() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::ADUpsDownsAnalysis* release_mdupsdownsanalysis();
  ::com::htsc::mdc::insight::model::ADUpsDownsAnalysis* mutable_mdupsdownsanalysis();
  void set_allocated_mdupsdownsanalysis(::com::htsc::mdc::insight::model::ADUpsDownsAnalysis* mdupsdownsanalysis);
  private:
  const ::com::htsc::mdc::insight::model::ADUpsDownsAnalysis& _internal_mdupsdownsanalysis() const;
  ::com::htsc::mdc::insight::model::ADUpsDownsAnalysis* _internal_mutable_mdupsdownsanalysis();
  public:
  void unsafe_arena_set_allocated_mdupsdownsanalysis(
      ::com::htsc::mdc::insight::model::ADUpsDownsAnalysis* mdupsdownsanalysis);
  ::com::htsc::mdc::insight::model::ADUpsDownsAnalysis* unsafe_arena_release_mdupsdownsanalysis();

  // .com.htsc.mdc.insight.model.ADIndicatorsRanking mdIndicatorsRanking = 24;
  bool has_mdindicatorsranking() const;
  private:
  bool _internal_has_mdindicatorsranking() const;
  public:
  void clear_mdindicatorsranking();
  const ::com::htsc::mdc::insight::model::ADIndicatorsRanking& mdindicatorsranking() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::ADIndicatorsRanking* release_mdindicatorsranking();
  ::com::htsc::mdc::insight::model::ADIndicatorsRanking* mutable_mdindicatorsranking();
  void set_allocated_mdindicatorsranking(::com::htsc::mdc::insight::model::ADIndicatorsRanking* mdindicatorsranking);
  private:
  const ::com::htsc::mdc::insight::model::ADIndicatorsRanking& _internal_mdindicatorsranking() const;
  ::com::htsc::mdc::insight::model::ADIndicatorsRanking* _internal_mutable_mdindicatorsranking();
  public:
  void unsafe_arena_set_allocated_mdindicatorsranking(
      ::com::htsc::mdc::insight::model::ADIndicatorsRanking* mdindicatorsranking);
  ::com::htsc::mdc::insight::model::ADIndicatorsRanking* unsafe_arena_release_mdindicatorsranking();

  // .com.htsc.mdc.insight.model.DynamicPacket dynamicPacket = 25;
  bool has_dynamicpacket() const;
  private:
  bool _internal_has_dynamicpacket() const;
  public:
  void clear_dynamicpacket();
  const ::com::htsc::mdc::insight::model::DynamicPacket& dynamicpacket() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::DynamicPacket* release_dynamicpacket();
  ::com::htsc::mdc::insight::model::DynamicPacket* mutable_dynamicpacket();
  void set_allocated_dynamicpacket(::com::htsc::mdc::insight::model::DynamicPacket* dynamicpacket);
  private:
  const ::com::htsc::mdc::insight::model::DynamicPacket& _internal_dynamicpacket() const;
  ::com::htsc::mdc::insight::model::DynamicPacket* _internal_mutable_dynamicpacket();
  public:
  void unsafe_arena_set_allocated_dynamicpacket(
      ::com::htsc::mdc::insight::model::DynamicPacket* dynamicpacket);
  ::com::htsc::mdc::insight::model::DynamicPacket* unsafe_arena_release_dynamicpacket();

  // .com.htsc.mdc.insight.model.ADVolumeByPrice mdVolumeByPrice = 26;
  bool has_mdvolumebyprice() const;
  private:
  bool _internal_has_mdvolumebyprice() const;
  public:
  void clear_mdvolumebyprice();
  const ::com::htsc::mdc::insight::model::ADVolumeByPrice& mdvolumebyprice() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::ADVolumeByPrice* release_mdvolumebyprice();
  ::com::htsc::mdc::insight::model::ADVolumeByPrice* mutable_mdvolumebyprice();
  void set_allocated_mdvolumebyprice(::com::htsc::mdc::insight::model::ADVolumeByPrice* mdvolumebyprice);
  private:
  const ::com::htsc::mdc::insight::model::ADVolumeByPrice& _internal_mdvolumebyprice() const;
  ::com::htsc::mdc::insight::model::ADVolumeByPrice* _internal_mutable_mdvolumebyprice();
  public:
  void unsafe_arena_set_allocated_mdvolumebyprice(
      ::com::htsc::mdc::insight::model::ADVolumeByPrice* mdvolumebyprice);
  ::com::htsc::mdc::insight::model::ADVolumeByPrice* unsafe_arena_release_mdvolumebyprice();

  // .com.htsc.mdc.insight.model.ADFundFlowAnalysis mdFundFlowAnalysis = 27;
  bool has_mdfundflowanalysis() const;
  private:
  bool _internal_has_mdfundflowanalysis() const;
  public:
  void clear_mdfundflowanalysis();
  const ::com::htsc::mdc::insight::model::ADFundFlowAnalysis& mdfundflowanalysis() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::ADFundFlowAnalysis* release_mdfundflowanalysis();
  ::com::htsc::mdc::insight::model::ADFundFlowAnalysis* mutable_mdfundflowanalysis();
  void set_allocated_mdfundflowanalysis(::com::htsc::mdc::insight::model::ADFundFlowAnalysis* mdfundflowanalysis);
  private:
  const ::com::htsc::mdc::insight::model::ADFundFlowAnalysis& _internal_mdfundflowanalysis() const;
  ::com::htsc::mdc::insight::model::ADFundFlowAnalysis* _internal_mutable_mdfundflowanalysis();
  public:
  void unsafe_arena_set_allocated_mdfundflowanalysis(
      ::com::htsc::mdc::insight::model::ADFundFlowAnalysis* mdfundflowanalysis);
  ::com::htsc::mdc::insight::model::ADFundFlowAnalysis* unsafe_arena_release_mdfundflowanalysis();

  // .com.htsc.mdc.insight.model.MDForex mdForex = 28;
  bool has_mdforex() const;
  private:
  bool _internal_has_mdforex() const;
  public:
  void clear_mdforex();
  const ::com::htsc::mdc::insight::model::MDForex& mdforex() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDForex* release_mdforex();
  ::com::htsc::mdc::insight::model::MDForex* mutable_mdforex();
  void set_allocated_mdforex(::com::htsc::mdc::insight::model::MDForex* mdforex);
  private:
  const ::com::htsc::mdc::insight::model::MDForex& _internal_mdforex() const;
  ::com::htsc::mdc::insight::model::MDForex* _internal_mutable_mdforex();
  public:
  void unsafe_arena_set_allocated_mdforex(
      ::com::htsc::mdc::insight::model::MDForex* mdforex);
  ::com::htsc::mdc::insight::model::MDForex* unsafe_arena_release_mdforex();

  // .com.htsc.mdc.insight.model.MDSpot mdSpot = 29;
  bool has_mdspot() const;
  private:
  bool _internal_has_mdspot() const;
  public:
  void clear_mdspot();
  const ::com::htsc::mdc::insight::model::MDSpot& mdspot() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDSpot* release_mdspot();
  ::com::htsc::mdc::insight::model::MDSpot* mutable_mdspot();
  void set_allocated_mdspot(::com::htsc::mdc::insight::model::MDSpot* mdspot);
  private:
  const ::com::htsc::mdc::insight::model::MDSpot& _internal_mdspot() const;
  ::com::htsc::mdc::insight::model::MDSpot* _internal_mutable_mdspot();
  public:
  void unsafe_arena_set_allocated_mdspot(
      ::com::htsc::mdc::insight::model::MDSpot* mdspot);
  ::com::htsc::mdc::insight::model::MDSpot* unsafe_arena_release_mdspot();

  // .com.htsc.mdc.insight.model.MDRate mdRate = 30;
  bool has_mdrate() const;
  private:
  bool _internal_has_mdrate() const;
  public:
  void clear_mdrate();
  const ::com::htsc::mdc::insight::model::MDRate& mdrate() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDRate* release_mdrate();
  ::com::htsc::mdc::insight::model::MDRate* mutable_mdrate();
  void set_allocated_mdrate(::com::htsc::mdc::insight::model::MDRate* mdrate);
  private:
  const ::com::htsc::mdc::insight::model::MDRate& _internal_mdrate() const;
  ::com::htsc::mdc::insight::model::MDRate* _internal_mutable_mdrate();
  public:
  void unsafe_arena_set_allocated_mdrate(
      ::com::htsc::mdc::insight::model::MDRate* mdrate);
  ::com::htsc::mdc::insight::model::MDRate* unsafe_arena_release_mdrate();

  // .com.htsc.mdc.insight.model.ADOrderbookSnapshot orderbookSnapshot = 31;
  bool has_orderbooksnapshot() const;
  private:
  bool _internal_has_orderbooksnapshot() const;
  public:
  void clear_orderbooksnapshot();
  const ::com::htsc::mdc::insight::model::ADOrderbookSnapshot& orderbooksnapshot() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* release_orderbooksnapshot();
  ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* mutable_orderbooksnapshot();
  void set_allocated_orderbooksnapshot(::com::htsc::mdc::insight::model::ADOrderbookSnapshot* orderbooksnapshot);
  private:
  const ::com::htsc::mdc::insight::model::ADOrderbookSnapshot& _internal_orderbooksnapshot() const;
  ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* _internal_mutable_orderbooksnapshot();
  public:
  void unsafe_arena_set_allocated_orderbooksnapshot(
      ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* orderbooksnapshot);
  ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* unsafe_arena_release_orderbooksnapshot();

  // .com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick orderbookSnapshotWithTick = 32;
  bool has_orderbooksnapshotwithtick() const;
  private:
  bool _internal_has_orderbooksnapshotwithtick() const;
  public:
  void clear_orderbooksnapshotwithtick();
  const ::com::htsc::mdc::insight::model::ADOrderbookSnapshotWithTick& orderbooksnapshotwithtick() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::ADOrderbookSnapshotWithTick* release_orderbooksnapshotwithtick();
  ::com::htsc::mdc::insight::model::ADOrderbookSnapshotWithTick* mutable_orderbooksnapshotwithtick();
  void set_allocated_orderbooksnapshotwithtick(::com::htsc::mdc::insight::model::ADOrderbookSnapshotWithTick* orderbooksnapshotwithtick);
  private:
  const ::com::htsc::mdc::insight::model::ADOrderbookSnapshotWithTick& _internal_orderbooksnapshotwithtick() const;
  ::com::htsc::mdc::insight::model::ADOrderbookSnapshotWithTick* _internal_mutable_orderbooksnapshotwithtick();
  public:
  void unsafe_arena_set_allocated_orderbooksnapshotwithtick(
      ::com::htsc::mdc::insight::model::ADOrderbookSnapshotWithTick* orderbooksnapshotwithtick);
  ::com::htsc::mdc::insight::model::ADOrderbookSnapshotWithTick* unsafe_arena_release_orderbooksnapshotwithtick();

  // .com.htsc.mdc.insight.model.MDQuote mdQuote = 33;
  bool has_mdquote() const;
  private:
  bool _internal_has_mdquote() const;
  public:
  void clear_mdquote();
  const ::com::htsc::mdc::insight::model::MDQuote& mdquote() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDQuote* release_mdquote();
  ::com::htsc::mdc::insight::model::MDQuote* mutable_mdquote();
  void set_allocated_mdquote(::com::htsc::mdc::insight::model::MDQuote* mdquote);
  private:
  const ::com::htsc::mdc::insight::model::MDQuote& _internal_mdquote() const;
  ::com::htsc::mdc::insight::model::MDQuote* _internal_mutable_mdquote();
  public:
  void unsafe_arena_set_allocated_mdquote(
      ::com::htsc::mdc::insight::model::MDQuote* mdquote);
  ::com::htsc::mdc::insight::model::MDQuote* unsafe_arena_release_mdquote();

  // .com.htsc.mdc.insight.model.MDETFBasicInfo mdETFBasicInfo = 34;
  bool has_mdetfbasicinfo() const;
  private:
  bool _internal_has_mdetfbasicinfo() const;
  public:
  void clear_mdetfbasicinfo();
  const ::com::htsc::mdc::insight::model::MDETFBasicInfo& mdetfbasicinfo() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDETFBasicInfo* release_mdetfbasicinfo();
  ::com::htsc::mdc::insight::model::MDETFBasicInfo* mutable_mdetfbasicinfo();
  void set_allocated_mdetfbasicinfo(::com::htsc::mdc::insight::model::MDETFBasicInfo* mdetfbasicinfo);
  private:
  const ::com::htsc::mdc::insight::model::MDETFBasicInfo& _internal_mdetfbasicinfo() const;
  ::com::htsc::mdc::insight::model::MDETFBasicInfo* _internal_mutable_mdetfbasicinfo();
  public:
  void unsafe_arena_set_allocated_mdetfbasicinfo(
      ::com::htsc::mdc::insight::model::MDETFBasicInfo* mdetfbasicinfo);
  ::com::htsc::mdc::insight::model::MDETFBasicInfo* unsafe_arena_release_mdetfbasicinfo();

  // .com.htsc.mdc.insight.model.MDFIQuote mdFIQuote = 35;
  bool has_mdfiquote() const;
  private:
  bool _internal_has_mdfiquote() const;
  public:
  void clear_mdfiquote();
  const ::com::htsc::mdc::insight::model::MDFIQuote& mdfiquote() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDFIQuote* release_mdfiquote();
  ::com::htsc::mdc::insight::model::MDFIQuote* mutable_mdfiquote();
  void set_allocated_mdfiquote(::com::htsc::mdc::insight::model::MDFIQuote* mdfiquote);
  private:
  const ::com::htsc::mdc::insight::model::MDFIQuote& _internal_mdfiquote() const;
  ::com::htsc::mdc::insight::model::MDFIQuote* _internal_mutable_mdfiquote();
  public:
  void unsafe_arena_set_allocated_mdfiquote(
      ::com::htsc::mdc::insight::model::MDFIQuote* mdfiquote);
  ::com::htsc::mdc::insight::model::MDFIQuote* unsafe_arena_release_mdfiquote();

  // .com.htsc.mdc.insight.model.ADChipDistribution mdChipDistribution = 36;
  bool has_mdchipdistribution() const;
  private:
  bool _internal_has_mdchipdistribution() const;
  public:
  void clear_mdchipdistribution();
  const ::com::htsc::mdc::insight::model::ADChipDistribution& mdchipdistribution() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::ADChipDistribution* release_mdchipdistribution();
  ::com::htsc::mdc::insight::model::ADChipDistribution* mutable_mdchipdistribution();
  void set_allocated_mdchipdistribution(::com::htsc::mdc::insight::model::ADChipDistribution* mdchipdistribution);
  private:
  const ::com::htsc::mdc::insight::model::ADChipDistribution& _internal_mdchipdistribution() const;
  ::com::htsc::mdc::insight::model::ADChipDistribution* _internal_mutable_mdchipdistribution();
  public:
  void unsafe_arena_set_allocated_mdchipdistribution(
      ::com::htsc::mdc::insight::model::ADChipDistribution* mdchipdistribution);
  ::com::htsc::mdc::insight::model::ADChipDistribution* unsafe_arena_release_mdchipdistribution();

  // .com.htsc.mdc.insight.model.MDWarrant mdWarrant = 37;
  bool has_mdwarrant() const;
  private:
  bool _internal_has_mdwarrant() const;
  public:
  void clear_mdwarrant();
  const ::com::htsc::mdc::insight::model::MDWarrant& mdwarrant() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDWarrant* release_mdwarrant();
  ::com::htsc::mdc::insight::model::MDWarrant* mutable_mdwarrant();
  void set_allocated_mdwarrant(::com::htsc::mdc::insight::model::MDWarrant* mdwarrant);
  private:
  const ::com::htsc::mdc::insight::model::MDWarrant& _internal_mdwarrant() const;
  ::com::htsc::mdc::insight::model::MDWarrant* _internal_mutable_mdwarrant();
  public:
  void unsafe_arena_set_allocated_mdwarrant(
      ::com::htsc::mdc::insight::model::MDWarrant* mdwarrant);
  ::com::htsc::mdc::insight::model::MDWarrant* unsafe_arena_release_mdwarrant();

  // .com.htsc.mdc.insight.model.MDSecurityLending mdSecurityLending = 38;
  bool has_mdsecuritylending() const;
  private:
  bool _internal_has_mdsecuritylending() const;
  public:
  void clear_mdsecuritylending();
  const ::com::htsc::mdc::insight::model::MDSecurityLending& mdsecuritylending() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDSecurityLending* release_mdsecuritylending();
  ::com::htsc::mdc::insight::model::MDSecurityLending* mutable_mdsecuritylending();
  void set_allocated_mdsecuritylending(::com::htsc::mdc::insight::model::MDSecurityLending* mdsecuritylending);
  private:
  const ::com::htsc::mdc::insight::model::MDSecurityLending& _internal_mdsecuritylending() const;
  ::com::htsc::mdc::insight::model::MDSecurityLending* _internal_mutable_mdsecuritylending();
  public:
  void unsafe_arena_set_allocated_mdsecuritylending(
      ::com::htsc::mdc::insight::model::MDSecurityLending* mdsecuritylending);
  ::com::htsc::mdc::insight::model::MDSecurityLending* unsafe_arena_release_mdsecuritylending();

  // .com.htsc.mdc.insight.model.ADNews mdNews = 39;
  bool has_mdnews() const;
  private:
  bool _internal_has_mdnews() const;
  public:
  void clear_mdnews();
  const ::com::htsc::mdc::insight::model::ADNews& mdnews() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::ADNews* release_mdnews();
  ::com::htsc::mdc::insight::model::ADNews* mutable_mdnews();
  void set_allocated_mdnews(::com::htsc::mdc::insight::model::ADNews* mdnews);
  private:
  const ::com::htsc::mdc::insight::model::ADNews& _internal_mdnews() const;
  ::com::htsc::mdc::insight::model::ADNews* _internal_mutable_mdnews();
  public:
  void unsafe_arena_set_allocated_mdnews(
      ::com::htsc::mdc::insight::model::ADNews* mdnews);
  ::com::htsc::mdc::insight::model::ADNews* unsafe_arena_release_mdnews();

  // .com.htsc.mdc.insight.model.ADStaringResult mdStaringResult = 40;
  bool has_mdstaringresult() const;
  private:
  bool _internal_has_mdstaringresult() const;
  public:
  void clear_mdstaringresult();
  const ::com::htsc::mdc::insight::model::ADStaringResult& mdstaringresult() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::ADStaringResult* release_mdstaringresult();
  ::com::htsc::mdc::insight::model::ADStaringResult* mutable_mdstaringresult();
  void set_allocated_mdstaringresult(::com::htsc::mdc::insight::model::ADStaringResult* mdstaringresult);
  private:
  const ::com::htsc::mdc::insight::model::ADStaringResult& _internal_mdstaringresult() const;
  ::com::htsc::mdc::insight::model::ADStaringResult* _internal_mutable_mdstaringresult();
  public:
  void unsafe_arena_set_allocated_mdstaringresult(
      ::com::htsc::mdc::insight::model::ADStaringResult* mdstaringresult);
  ::com::htsc::mdc::insight::model::ADStaringResult* unsafe_arena_release_mdstaringresult();

  // .com.htsc.mdc.insight.model.ADDerivedAnalysis mdDerivedAnalysis = 41;
  bool has_mdderivedanalysis() const;
  private:
  bool _internal_has_mdderivedanalysis() const;
  public:
  void clear_mdderivedanalysis();
  const ::com::htsc::mdc::insight::model::ADDerivedAnalysis& mdderivedanalysis() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::ADDerivedAnalysis* release_mdderivedanalysis();
  ::com::htsc::mdc::insight::model::ADDerivedAnalysis* mutable_mdderivedanalysis();
  void set_allocated_mdderivedanalysis(::com::htsc::mdc::insight::model::ADDerivedAnalysis* mdderivedanalysis);
  private:
  const ::com::htsc::mdc::insight::model::ADDerivedAnalysis& _internal_mdderivedanalysis() const;
  ::com::htsc::mdc::insight::model::ADDerivedAnalysis* _internal_mutable_mdderivedanalysis();
  public:
  void unsafe_arena_set_allocated_mdderivedanalysis(
      ::com::htsc::mdc::insight::model::ADDerivedAnalysis* mdderivedanalysis);
  ::com::htsc::mdc::insight::model::ADDerivedAnalysis* unsafe_arena_release_mdderivedanalysis();

  // .com.htsc.mdc.insight.model.MDQBQuote mdQBQuote = 42;
  bool has_mdqbquote() const;
  private:
  bool _internal_has_mdqbquote() const;
  public:
  void clear_mdqbquote();
  const ::com::htsc::mdc::insight::model::MDQBQuote& mdqbquote() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDQBQuote* release_mdqbquote();
  ::com::htsc::mdc::insight::model::MDQBQuote* mutable_mdqbquote();
  void set_allocated_mdqbquote(::com::htsc::mdc::insight::model::MDQBQuote* mdqbquote);
  private:
  const ::com::htsc::mdc::insight::model::MDQBQuote& _internal_mdqbquote() const;
  ::com::htsc::mdc::insight::model::MDQBQuote* _internal_mutable_mdqbquote();
  public:
  void unsafe_arena_set_allocated_mdqbquote(
      ::com::htsc::mdc::insight::model::MDQBQuote* mdqbquote);
  ::com::htsc::mdc::insight::model::MDQBQuote* unsafe_arena_release_mdqbquote();

  // .com.htsc.mdc.insight.model.MDQBTransaction mdQBTransaction = 43;
  bool has_mdqbtransaction() const;
  private:
  bool _internal_has_mdqbtransaction() const;
  public:
  void clear_mdqbtransaction();
  const ::com::htsc::mdc::insight::model::MDQBTransaction& mdqbtransaction() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDQBTransaction* release_mdqbtransaction();
  ::com::htsc::mdc::insight::model::MDQBTransaction* mutable_mdqbtransaction();
  void set_allocated_mdqbtransaction(::com::htsc::mdc::insight::model::MDQBTransaction* mdqbtransaction);
  private:
  const ::com::htsc::mdc::insight::model::MDQBTransaction& _internal_mdqbtransaction() const;
  ::com::htsc::mdc::insight::model::MDQBTransaction* _internal_mutable_mdqbtransaction();
  public:
  void unsafe_arena_set_allocated_mdqbtransaction(
      ::com::htsc::mdc::insight::model::MDQBTransaction* mdqbtransaction);
  ::com::htsc::mdc::insight::model::MDQBTransaction* unsafe_arena_release_mdqbtransaction();

  // .com.htsc.mdc.insight.model.MDUSAOrder mdUSAOrder = 44;
  bool has_mdusaorder() const;
  private:
  bool _internal_has_mdusaorder() const;
  public:
  void clear_mdusaorder();
  const ::com::htsc::mdc::insight::model::MDUSAOrder& mdusaorder() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDUSAOrder* release_mdusaorder();
  ::com::htsc::mdc::insight::model::MDUSAOrder* mutable_mdusaorder();
  void set_allocated_mdusaorder(::com::htsc::mdc::insight::model::MDUSAOrder* mdusaorder);
  private:
  const ::com::htsc::mdc::insight::model::MDUSAOrder& _internal_mdusaorder() const;
  ::com::htsc::mdc::insight::model::MDUSAOrder* _internal_mutable_mdusaorder();
  public:
  void unsafe_arena_set_allocated_mdusaorder(
      ::com::htsc::mdc::insight::model::MDUSAOrder* mdusaorder);
  ::com::htsc::mdc::insight::model::MDUSAOrder* unsafe_arena_release_mdusaorder();

  // .com.htsc.mdc.insight.model.MDUSATransaction mdUSATransaction = 45;
  bool has_mdusatransaction() const;
  private:
  bool _internal_has_mdusatransaction() const;
  public:
  void clear_mdusatransaction();
  const ::com::htsc::mdc::insight::model::MDUSATransaction& mdusatransaction() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDUSATransaction* release_mdusatransaction();
  ::com::htsc::mdc::insight::model::MDUSATransaction* mutable_mdusatransaction();
  void set_allocated_mdusatransaction(::com::htsc::mdc::insight::model::MDUSATransaction* mdusatransaction);
  private:
  const ::com::htsc::mdc::insight::model::MDUSATransaction& _internal_mdusatransaction() const;
  ::com::htsc::mdc::insight::model::MDUSATransaction* _internal_mutable_mdusatransaction();
  public:
  void unsafe_arena_set_allocated_mdusatransaction(
      ::com::htsc::mdc::insight::model::MDUSATransaction* mdusatransaction);
  ::com::htsc::mdc::insight::model::MDUSATransaction* unsafe_arena_release_mdusatransaction();

  // .com.htsc.mdc.insight.model.MDSLOrder mdSLOrder = 46;
  bool has_mdslorder() const;
  private:
  bool _internal_has_mdslorder() const;
  public:
  void clear_mdslorder();
  const ::com::htsc::mdc::insight::model::MDSLOrder& mdslorder() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDSLOrder* release_mdslorder();
  ::com::htsc::mdc::insight::model::MDSLOrder* mutable_mdslorder();
  void set_allocated_mdslorder(::com::htsc::mdc::insight::model::MDSLOrder* mdslorder);
  private:
  const ::com::htsc::mdc::insight::model::MDSLOrder& _internal_mdslorder() const;
  ::com::htsc::mdc::insight::model::MDSLOrder* _internal_mutable_mdslorder();
  public:
  void unsafe_arena_set_allocated_mdslorder(
      ::com::htsc::mdc::insight::model::MDSLOrder* mdslorder);
  ::com::htsc::mdc::insight::model::MDSLOrder* unsafe_arena_release_mdslorder();

  // .com.htsc.mdc.insight.model.MDSLTransaction mdSLTransaction = 47;
  bool has_mdsltransaction() const;
  private:
  bool _internal_has_mdsltransaction() const;
  public:
  void clear_mdsltransaction();
  const ::com::htsc::mdc::insight::model::MDSLTransaction& mdsltransaction() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDSLTransaction* release_mdsltransaction();
  ::com::htsc::mdc::insight::model::MDSLTransaction* mutable_mdsltransaction();
  void set_allocated_mdsltransaction(::com::htsc::mdc::insight::model::MDSLTransaction* mdsltransaction);
  private:
  const ::com::htsc::mdc::insight::model::MDSLTransaction& _internal_mdsltransaction() const;
  ::com::htsc::mdc::insight::model::MDSLTransaction* _internal_mutable_mdsltransaction();
  public:
  void unsafe_arena_set_allocated_mdsltransaction(
      ::com::htsc::mdc::insight::model::MDSLTransaction* mdsltransaction);
  ::com::htsc::mdc::insight::model::MDSLTransaction* unsafe_arena_release_mdsltransaction();

  // .com.htsc.mdc.insight.model.MDHKGreyMarket mdHKGreyMarket = 48;
  bool has_mdhkgreymarket() const;
  private:
  bool _internal_has_mdhkgreymarket() const;
  public:
  void clear_mdhkgreymarket();
  const ::com::htsc::mdc::insight::model::MDHKGreyMarket& mdhkgreymarket() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDHKGreyMarket* release_mdhkgreymarket();
  ::com::htsc::mdc::insight::model::MDHKGreyMarket* mutable_mdhkgreymarket();
  void set_allocated_mdhkgreymarket(::com::htsc::mdc::insight::model::MDHKGreyMarket* mdhkgreymarket);
  private:
  const ::com::htsc::mdc::insight::model::MDHKGreyMarket& _internal_mdhkgreymarket() const;
  ::com::htsc::mdc::insight::model::MDHKGreyMarket* _internal_mutable_mdhkgreymarket();
  public:
  void unsafe_arena_set_allocated_mdhkgreymarket(
      ::com::htsc::mdc::insight::model::MDHKGreyMarket* mdhkgreymarket);
  ::com::htsc::mdc::insight::model::MDHKGreyMarket* unsafe_arena_release_mdhkgreymarket();

  // .com.htsc.mdc.insight.model.MDSLIndicativeQuote mdSLIndicativeQuote = 49;
  bool has_mdslindicativequote() const;
  private:
  bool _internal_has_mdslindicativequote() const;
  public:
  void clear_mdslindicativequote();
  const ::com::htsc::mdc::insight::model::MDSLIndicativeQuote& mdslindicativequote() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDSLIndicativeQuote* release_mdslindicativequote();
  ::com::htsc::mdc::insight::model::MDSLIndicativeQuote* mutable_mdslindicativequote();
  void set_allocated_mdslindicativequote(::com::htsc::mdc::insight::model::MDSLIndicativeQuote* mdslindicativequote);
  private:
  const ::com::htsc::mdc::insight::model::MDSLIndicativeQuote& _internal_mdslindicativequote() const;
  ::com::htsc::mdc::insight::model::MDSLIndicativeQuote* _internal_mutable_mdslindicativequote();
  public:
  void unsafe_arena_set_allocated_mdslindicativequote(
      ::com::htsc::mdc::insight::model::MDSLIndicativeQuote* mdslindicativequote);
  ::com::htsc::mdc::insight::model::MDSLIndicativeQuote* unsafe_arena_release_mdslindicativequote();

  // .com.htsc.mdc.insight.model.MDSLStatistics mdSLStatistics = 50;
  bool has_mdslstatistics() const;
  private:
  bool _internal_has_mdslstatistics() const;
  public:
  void clear_mdslstatistics();
  const ::com::htsc::mdc::insight::model::MDSLStatistics& mdslstatistics() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDSLStatistics* release_mdslstatistics();
  ::com::htsc::mdc::insight::model::MDSLStatistics* mutable_mdslstatistics();
  void set_allocated_mdslstatistics(::com::htsc::mdc::insight::model::MDSLStatistics* mdslstatistics);
  private:
  const ::com::htsc::mdc::insight::model::MDSLStatistics& _internal_mdslstatistics() const;
  ::com::htsc::mdc::insight::model::MDSLStatistics* _internal_mutable_mdslstatistics();
  public:
  void unsafe_arena_set_allocated_mdslstatistics(
      ::com::htsc::mdc::insight::model::MDSLStatistics* mdslstatistics);
  ::com::htsc::mdc::insight::model::MDSLStatistics* unsafe_arena_release_mdslstatistics();

  // .com.htsc.mdc.insight.model.MDUSAQuote mdUSAQuote = 51;
  bool has_mdusaquote() const;
  private:
  bool _internal_has_mdusaquote() const;
  public:
  void clear_mdusaquote();
  const ::com::htsc::mdc::insight::model::MDUSAQuote& mdusaquote() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDUSAQuote* release_mdusaquote();
  ::com::htsc::mdc::insight::model::MDUSAQuote* mutable_mdusaquote();
  void set_allocated_mdusaquote(::com::htsc::mdc::insight::model::MDUSAQuote* mdusaquote);
  private:
  const ::com::htsc::mdc::insight::model::MDUSAQuote& _internal_mdusaquote() const;
  ::com::htsc::mdc::insight::model::MDUSAQuote* _internal_mutable_mdusaquote();
  public:
  void unsafe_arena_set_allocated_mdusaquote(
      ::com::htsc::mdc::insight::model::MDUSAQuote* mdusaquote);
  ::com::htsc::mdc::insight::model::MDUSAQuote* unsafe_arena_release_mdusaquote();

  // .com.htsc.mdc.insight.model.MDSLEstimation mdSLEstimation = 52;
  bool has_mdslestimation() const;
  private:
  bool _internal_has_mdslestimation() const;
  public:
  void clear_mdslestimation();
  const ::com::htsc::mdc::insight::model::MDSLEstimation& mdslestimation() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDSLEstimation* release_mdslestimation();
  ::com::htsc::mdc::insight::model::MDSLEstimation* mutable_mdslestimation();
  void set_allocated_mdslestimation(::com::htsc::mdc::insight::model::MDSLEstimation* mdslestimation);
  private:
  const ::com::htsc::mdc::insight::model::MDSLEstimation& _internal_mdslestimation() const;
  ::com::htsc::mdc::insight::model::MDSLEstimation* _internal_mutable_mdslestimation();
  public:
  void unsafe_arena_set_allocated_mdslestimation(
      ::com::htsc::mdc::insight::model::MDSLEstimation* mdslestimation);
  ::com::htsc::mdc::insight::model::MDSLEstimation* unsafe_arena_release_mdslestimation();

  // .com.htsc.mdc.insight.model.MDCnexDeal mdCnexDeal = 53;
  bool has_mdcnexdeal() const;
  private:
  bool _internal_has_mdcnexdeal() const;
  public:
  void clear_mdcnexdeal();
  const ::com::htsc::mdc::insight::model::MDCnexDeal& mdcnexdeal() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDCnexDeal* release_mdcnexdeal();
  ::com::htsc::mdc::insight::model::MDCnexDeal* mutable_mdcnexdeal();
  void set_allocated_mdcnexdeal(::com::htsc::mdc::insight::model::MDCnexDeal* mdcnexdeal);
  private:
  const ::com::htsc::mdc::insight::model::MDCnexDeal& _internal_mdcnexdeal() const;
  ::com::htsc::mdc::insight::model::MDCnexDeal* _internal_mutable_mdcnexdeal();
  public:
  void unsafe_arena_set_allocated_mdcnexdeal(
      ::com::htsc::mdc::insight::model::MDCnexDeal* mdcnexdeal);
  ::com::htsc::mdc::insight::model::MDCnexDeal* unsafe_arena_release_mdcnexdeal();

  // .com.htsc.mdc.insight.model.MDCnexQuote mdCnexQuote = 54;
  bool has_mdcnexquote() const;
  private:
  bool _internal_has_mdcnexquote() const;
  public:
  void clear_mdcnexquote();
  const ::com::htsc::mdc::insight::model::MDCnexQuote& mdcnexquote() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDCnexQuote* release_mdcnexquote();
  ::com::htsc::mdc::insight::model::MDCnexQuote* mutable_mdcnexquote();
  void set_allocated_mdcnexquote(::com::htsc::mdc::insight::model::MDCnexQuote* mdcnexquote);
  private:
  const ::com::htsc::mdc::insight::model::MDCnexQuote& _internal_mdcnexquote() const;
  ::com::htsc::mdc::insight::model::MDCnexQuote* _internal_mutable_mdcnexquote();
  public:
  void unsafe_arena_set_allocated_mdcnexquote(
      ::com::htsc::mdc::insight::model::MDCnexQuote* mdcnexquote);
  ::com::htsc::mdc::insight::model::MDCnexQuote* unsafe_arena_release_mdcnexquote();

  // .com.htsc.mdc.insight.model.MDDelaySnapshot mdDelaySnapshot = 55;
  bool has_mddelaysnapshot() const;
  private:
  bool _internal_has_mddelaysnapshot() const;
  public:
  void clear_mddelaysnapshot();
  const ::com::htsc::mdc::insight::model::MDDelaySnapshot& mddelaysnapshot() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDDelaySnapshot* release_mddelaysnapshot();
  ::com::htsc::mdc::insight::model::MDDelaySnapshot* mutable_mddelaysnapshot();
  void set_allocated_mddelaysnapshot(::com::htsc::mdc::insight::model::MDDelaySnapshot* mddelaysnapshot);
  private:
  const ::com::htsc::mdc::insight::model::MDDelaySnapshot& _internal_mddelaysnapshot() const;
  ::com::htsc::mdc::insight::model::MDDelaySnapshot* _internal_mutable_mddelaysnapshot();
  public:
  void unsafe_arena_set_allocated_mddelaysnapshot(
      ::com::htsc::mdc::insight::model::MDDelaySnapshot* mddelaysnapshot);
  ::com::htsc::mdc::insight::model::MDDelaySnapshot* unsafe_arena_release_mddelaysnapshot();

  // .com.htsc.mdc.insight.model.MDHighAccuracyFuture mdHighAccuracyFuture = 56;
  bool has_mdhighaccuracyfuture() const;
  private:
  bool _internal_has_mdhighaccuracyfuture() const;
  public:
  void clear_mdhighaccuracyfuture();
  const ::com::htsc::mdc::insight::model::MDHighAccuracyFuture& mdhighaccuracyfuture() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDHighAccuracyFuture* release_mdhighaccuracyfuture();
  ::com::htsc::mdc::insight::model::MDHighAccuracyFuture* mutable_mdhighaccuracyfuture();
  void set_allocated_mdhighaccuracyfuture(::com::htsc::mdc::insight::model::MDHighAccuracyFuture* mdhighaccuracyfuture);
  private:
  const ::com::htsc::mdc::insight::model::MDHighAccuracyFuture& _internal_mdhighaccuracyfuture() const;
  ::com::htsc::mdc::insight::model::MDHighAccuracyFuture* _internal_mutable_mdhighaccuracyfuture();
  public:
  void unsafe_arena_set_allocated_mdhighaccuracyfuture(
      ::com::htsc::mdc::insight::model::MDHighAccuracyFuture* mdhighaccuracyfuture);
  ::com::htsc::mdc::insight::model::MDHighAccuracyFuture* unsafe_arena_release_mdhighaccuracyfuture();

  // .com.htsc.mdc.insight.model.MDCfetsForex mdCfetsForex = 57;
  bool has_mdcfetsforex() const;
  private:
  bool _internal_has_mdcfetsforex() const;
  public:
  void clear_mdcfetsforex();
  const ::com::htsc::mdc::insight::model::MDCfetsForex& mdcfetsforex() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDCfetsForex* release_mdcfetsforex();
  ::com::htsc::mdc::insight::model::MDCfetsForex* mutable_mdcfetsforex();
  void set_allocated_mdcfetsforex(::com::htsc::mdc::insight::model::MDCfetsForex* mdcfetsforex);
  private:
  const ::com::htsc::mdc::insight::model::MDCfetsForex& _internal_mdcfetsforex() const;
  ::com::htsc::mdc::insight::model::MDCfetsForex* _internal_mutable_mdcfetsforex();
  public:
  void unsafe_arena_set_allocated_mdcfetsforex(
      ::com::htsc::mdc::insight::model::MDCfetsForex* mdcfetsforex);
  ::com::htsc::mdc::insight::model::MDCfetsForex* unsafe_arena_release_mdcfetsforex();

  // .com.htsc.mdc.insight.model.MDCfetsFxSnapshot mdCfetsFxSnapshot = 58;
  bool has_mdcfetsfxsnapshot() const;
  private:
  bool _internal_has_mdcfetsfxsnapshot() const;
  public:
  void clear_mdcfetsfxsnapshot();
  const ::com::htsc::mdc::insight::model::MDCfetsFxSnapshot& mdcfetsfxsnapshot() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDCfetsFxSnapshot* release_mdcfetsfxsnapshot();
  ::com::htsc::mdc::insight::model::MDCfetsFxSnapshot* mutable_mdcfetsfxsnapshot();
  void set_allocated_mdcfetsfxsnapshot(::com::htsc::mdc::insight::model::MDCfetsFxSnapshot* mdcfetsfxsnapshot);
  private:
  const ::com::htsc::mdc::insight::model::MDCfetsFxSnapshot& _internal_mdcfetsfxsnapshot() const;
  ::com::htsc::mdc::insight::model::MDCfetsFxSnapshot* _internal_mutable_mdcfetsfxsnapshot();
  public:
  void unsafe_arena_set_allocated_mdcfetsfxsnapshot(
      ::com::htsc::mdc::insight::model::MDCfetsFxSnapshot* mdcfetsfxsnapshot);
  ::com::htsc::mdc::insight::model::MDCfetsFxSnapshot* unsafe_arena_release_mdcfetsfxsnapshot();

  // .com.htsc.mdc.insight.model.MDCfetsFxQuote mdCfetsFxQuote = 59;
  bool has_mdcfetsfxquote() const;
  private:
  bool _internal_has_mdcfetsfxquote() const;
  public:
  void clear_mdcfetsfxquote();
  const ::com::htsc::mdc::insight::model::MDCfetsFxQuote& mdcfetsfxquote() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDCfetsFxQuote* release_mdcfetsfxquote();
  ::com::htsc::mdc::insight::model::MDCfetsFxQuote* mutable_mdcfetsfxquote();
  void set_allocated_mdcfetsfxquote(::com::htsc::mdc::insight::model::MDCfetsFxQuote* mdcfetsfxquote);
  private:
  const ::com::htsc::mdc::insight::model::MDCfetsFxQuote& _internal_mdcfetsfxquote() const;
  ::com::htsc::mdc::insight::model::MDCfetsFxQuote* _internal_mutable_mdcfetsfxquote();
  public:
  void unsafe_arena_set_allocated_mdcfetsfxquote(
      ::com::htsc::mdc::insight::model::MDCfetsFxQuote* mdcfetsfxquote);
  ::com::htsc::mdc::insight::model::MDCfetsFxQuote* unsafe_arena_release_mdcfetsfxquote();

  // .com.htsc.mdc.insight.model.SPFuture spFuture = 60;
  bool has_spfuture() const;
  private:
  bool _internal_has_spfuture() const;
  public:
  void clear_spfuture();
  const ::com::htsc::mdc::insight::model::SPFuture& spfuture() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::SPFuture* release_spfuture();
  ::com::htsc::mdc::insight::model::SPFuture* mutable_spfuture();
  void set_allocated_spfuture(::com::htsc::mdc::insight::model::SPFuture* spfuture);
  private:
  const ::com::htsc::mdc::insight::model::SPFuture& _internal_spfuture() const;
  ::com::htsc::mdc::insight::model::SPFuture* _internal_mutable_spfuture();
  public:
  void unsafe_arena_set_allocated_spfuture(
      ::com::htsc::mdc::insight::model::SPFuture* spfuture);
  ::com::htsc::mdc::insight::model::SPFuture* unsafe_arena_release_spfuture();

  // .com.htsc.mdc.insight.model.MDCfetsBenchmark mdCfetsBenchmark = 61;
  bool has_mdcfetsbenchmark() const;
  private:
  bool _internal_has_mdcfetsbenchmark() const;
  public:
  void clear_mdcfetsbenchmark();
  const ::com::htsc::mdc::insight::model::MDCfetsBenchmark& mdcfetsbenchmark() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDCfetsBenchmark* release_mdcfetsbenchmark();
  ::com::htsc::mdc::insight::model::MDCfetsBenchmark* mutable_mdcfetsbenchmark();
  void set_allocated_mdcfetsbenchmark(::com::htsc::mdc::insight::model::MDCfetsBenchmark* mdcfetsbenchmark);
  private:
  const ::com::htsc::mdc::insight::model::MDCfetsBenchmark& _internal_mdcfetsbenchmark() const;
  ::com::htsc::mdc::insight::model::MDCfetsBenchmark* _internal_mutable_mdcfetsbenchmark();
  public:
  void unsafe_arena_set_allocated_mdcfetsbenchmark(
      ::com::htsc::mdc::insight::model::MDCfetsBenchmark* mdcfetsbenchmark);
  ::com::htsc::mdc::insight::model::MDCfetsBenchmark* unsafe_arena_release_mdcfetsbenchmark();

  // .com.htsc.mdc.insight.model.MDCfetsBondDeal mdCfetsBondDeal = 62;
  bool has_mdcfetsbonddeal() const;
  private:
  bool _internal_has_mdcfetsbonddeal() const;
  public:
  void clear_mdcfetsbonddeal();
  const ::com::htsc::mdc::insight::model::MDCfetsBondDeal& mdcfetsbonddeal() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDCfetsBondDeal* release_mdcfetsbonddeal();
  ::com::htsc::mdc::insight::model::MDCfetsBondDeal* mutable_mdcfetsbonddeal();
  void set_allocated_mdcfetsbonddeal(::com::htsc::mdc::insight::model::MDCfetsBondDeal* mdcfetsbonddeal);
  private:
  const ::com::htsc::mdc::insight::model::MDCfetsBondDeal& _internal_mdcfetsbonddeal() const;
  ::com::htsc::mdc::insight::model::MDCfetsBondDeal* _internal_mutable_mdcfetsbonddeal();
  public:
  void unsafe_arena_set_allocated_mdcfetsbonddeal(
      ::com::htsc::mdc::insight::model::MDCfetsBondDeal* mdcfetsbonddeal);
  ::com::htsc::mdc::insight::model::MDCfetsBondDeal* unsafe_arena_release_mdcfetsbonddeal();

  // .com.htsc.mdc.insight.model.MDCfetsBondSnapshot mdCfetsBondSnapshot = 63;
  bool has_mdcfetsbondsnapshot() const;
  private:
  bool _internal_has_mdcfetsbondsnapshot() const;
  public:
  void clear_mdcfetsbondsnapshot();
  const ::com::htsc::mdc::insight::model::MDCfetsBondSnapshot& mdcfetsbondsnapshot() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDCfetsBondSnapshot* release_mdcfetsbondsnapshot();
  ::com::htsc::mdc::insight::model::MDCfetsBondSnapshot* mutable_mdcfetsbondsnapshot();
  void set_allocated_mdcfetsbondsnapshot(::com::htsc::mdc::insight::model::MDCfetsBondSnapshot* mdcfetsbondsnapshot);
  private:
  const ::com::htsc::mdc::insight::model::MDCfetsBondSnapshot& _internal_mdcfetsbondsnapshot() const;
  ::com::htsc::mdc::insight::model::MDCfetsBondSnapshot* _internal_mutable_mdcfetsbondsnapshot();
  public:
  void unsafe_arena_set_allocated_mdcfetsbondsnapshot(
      ::com::htsc::mdc::insight::model::MDCfetsBondSnapshot* mdcfetsbondsnapshot);
  ::com::htsc::mdc::insight::model::MDCfetsBondSnapshot* unsafe_arena_release_mdcfetsbondsnapshot();

  // .com.htsc.mdc.insight.model.MDCfetsCurrencyDeal mdCfetsCurrencyDeal = 64;
  bool has_mdcfetscurrencydeal() const;
  private:
  bool _internal_has_mdcfetscurrencydeal() const;
  public:
  void clear_mdcfetscurrencydeal();
  const ::com::htsc::mdc::insight::model::MDCfetsCurrencyDeal& mdcfetscurrencydeal() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDCfetsCurrencyDeal* release_mdcfetscurrencydeal();
  ::com::htsc::mdc::insight::model::MDCfetsCurrencyDeal* mutable_mdcfetscurrencydeal();
  void set_allocated_mdcfetscurrencydeal(::com::htsc::mdc::insight::model::MDCfetsCurrencyDeal* mdcfetscurrencydeal);
  private:
  const ::com::htsc::mdc::insight::model::MDCfetsCurrencyDeal& _internal_mdcfetscurrencydeal() const;
  ::com::htsc::mdc::insight::model::MDCfetsCurrencyDeal* _internal_mutable_mdcfetscurrencydeal();
  public:
  void unsafe_arena_set_allocated_mdcfetscurrencydeal(
      ::com::htsc::mdc::insight::model::MDCfetsCurrencyDeal* mdcfetscurrencydeal);
  ::com::htsc::mdc::insight::model::MDCfetsCurrencyDeal* unsafe_arena_release_mdcfetscurrencydeal();

  // .com.htsc.mdc.insight.model.MDCfetsCurrencySnapshot mdCfetsCurrencySnapshot = 65;
  bool has_mdcfetscurrencysnapshot() const;
  private:
  bool _internal_has_mdcfetscurrencysnapshot() const;
  public:
  void clear_mdcfetscurrencysnapshot();
  const ::com::htsc::mdc::insight::model::MDCfetsCurrencySnapshot& mdcfetscurrencysnapshot() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDCfetsCurrencySnapshot* release_mdcfetscurrencysnapshot();
  ::com::htsc::mdc::insight::model::MDCfetsCurrencySnapshot* mutable_mdcfetscurrencysnapshot();
  void set_allocated_mdcfetscurrencysnapshot(::com::htsc::mdc::insight::model::MDCfetsCurrencySnapshot* mdcfetscurrencysnapshot);
  private:
  const ::com::htsc::mdc::insight::model::MDCfetsCurrencySnapshot& _internal_mdcfetscurrencysnapshot() const;
  ::com::htsc::mdc::insight::model::MDCfetsCurrencySnapshot* _internal_mutable_mdcfetscurrencysnapshot();
  public:
  void unsafe_arena_set_allocated_mdcfetscurrencysnapshot(
      ::com::htsc::mdc::insight::model::MDCfetsCurrencySnapshot* mdcfetscurrencysnapshot);
  ::com::htsc::mdc::insight::model::MDCfetsCurrencySnapshot* unsafe_arena_release_mdcfetscurrencysnapshot();

  // .com.htsc.mdc.insight.model.MDCfetsODMSnapshot mdCfetsODMSnapshot = 66;
  bool has_mdcfetsodmsnapshot() const;
  private:
  bool _internal_has_mdcfetsodmsnapshot() const;
  public:
  void clear_mdcfetsodmsnapshot();
  const ::com::htsc::mdc::insight::model::MDCfetsODMSnapshot& mdcfetsodmsnapshot() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDCfetsODMSnapshot* release_mdcfetsodmsnapshot();
  ::com::htsc::mdc::insight::model::MDCfetsODMSnapshot* mutable_mdcfetsodmsnapshot();
  void set_allocated_mdcfetsodmsnapshot(::com::htsc::mdc::insight::model::MDCfetsODMSnapshot* mdcfetsodmsnapshot);
  private:
  const ::com::htsc::mdc::insight::model::MDCfetsODMSnapshot& _internal_mdcfetsodmsnapshot() const;
  ::com::htsc::mdc::insight::model::MDCfetsODMSnapshot* _internal_mutable_mdcfetsodmsnapshot();
  public:
  void unsafe_arena_set_allocated_mdcfetsodmsnapshot(
      ::com::htsc::mdc::insight::model::MDCfetsODMSnapshot* mdcfetsodmsnapshot);
  ::com::htsc::mdc::insight::model::MDCfetsODMSnapshot* unsafe_arena_release_mdcfetsodmsnapshot();

  // .com.htsc.mdc.insight.model.MDCfetsQDMQuote mdCfetsQDMQuote = 67;
  bool has_mdcfetsqdmquote() const;
  private:
  bool _internal_has_mdcfetsqdmquote() const;
  public:
  void clear_mdcfetsqdmquote();
  const ::com::htsc::mdc::insight::model::MDCfetsQDMQuote& mdcfetsqdmquote() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDCfetsQDMQuote* release_mdcfetsqdmquote();
  ::com::htsc::mdc::insight::model::MDCfetsQDMQuote* mutable_mdcfetsqdmquote();
  void set_allocated_mdcfetsqdmquote(::com::htsc::mdc::insight::model::MDCfetsQDMQuote* mdcfetsqdmquote);
  private:
  const ::com::htsc::mdc::insight::model::MDCfetsQDMQuote& _internal_mdcfetsqdmquote() const;
  ::com::htsc::mdc::insight::model::MDCfetsQDMQuote* _internal_mutable_mdcfetsqdmquote();
  public:
  void unsafe_arena_set_allocated_mdcfetsqdmquote(
      ::com::htsc::mdc::insight::model::MDCfetsQDMQuote* mdcfetsqdmquote);
  ::com::htsc::mdc::insight::model::MDCfetsQDMQuote* unsafe_arena_release_mdcfetsqdmquote();

  // .com.htsc.mdc.insight.model.MDCfetsRateDeal mdCfetsRateDeal = 68;
  bool has_mdcfetsratedeal() const;
  private:
  bool _internal_has_mdcfetsratedeal() const;
  public:
  void clear_mdcfetsratedeal();
  const ::com::htsc::mdc::insight::model::MDCfetsRateDeal& mdcfetsratedeal() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDCfetsRateDeal* release_mdcfetsratedeal();
  ::com::htsc::mdc::insight::model::MDCfetsRateDeal* mutable_mdcfetsratedeal();
  void set_allocated_mdcfetsratedeal(::com::htsc::mdc::insight::model::MDCfetsRateDeal* mdcfetsratedeal);
  private:
  const ::com::htsc::mdc::insight::model::MDCfetsRateDeal& _internal_mdcfetsratedeal() const;
  ::com::htsc::mdc::insight::model::MDCfetsRateDeal* _internal_mutable_mdcfetsratedeal();
  public:
  void unsafe_arena_set_allocated_mdcfetsratedeal(
      ::com::htsc::mdc::insight::model::MDCfetsRateDeal* mdcfetsratedeal);
  ::com::htsc::mdc::insight::model::MDCfetsRateDeal* unsafe_arena_release_mdcfetsratedeal();

  // .com.htsc.mdc.insight.model.MDCfetsRateSnapshot mdCfetsRateSnapshot = 69;
  bool has_mdcfetsratesnapshot() const;
  private:
  bool _internal_has_mdcfetsratesnapshot() const;
  public:
  void clear_mdcfetsratesnapshot();
  const ::com::htsc::mdc::insight::model::MDCfetsRateSnapshot& mdcfetsratesnapshot() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDCfetsRateSnapshot* release_mdcfetsratesnapshot();
  ::com::htsc::mdc::insight::model::MDCfetsRateSnapshot* mutable_mdcfetsratesnapshot();
  void set_allocated_mdcfetsratesnapshot(::com::htsc::mdc::insight::model::MDCfetsRateSnapshot* mdcfetsratesnapshot);
  private:
  const ::com::htsc::mdc::insight::model::MDCfetsRateSnapshot& _internal_mdcfetsratesnapshot() const;
  ::com::htsc::mdc::insight::model::MDCfetsRateSnapshot* _internal_mutable_mdcfetsratesnapshot();
  public:
  void unsafe_arena_set_allocated_mdcfetsratesnapshot(
      ::com::htsc::mdc::insight::model::MDCfetsRateSnapshot* mdcfetsratesnapshot);
  ::com::htsc::mdc::insight::model::MDCfetsRateSnapshot* unsafe_arena_release_mdcfetsratesnapshot();

  // .com.htsc.mdc.insight.model.MDCfetsFxCnyMiddlePrice mdCfetsFxCnyMiddlePrice = 70;
  bool has_mdcfetsfxcnymiddleprice() const;
  private:
  bool _internal_has_mdcfetsfxcnymiddleprice() const;
  public:
  void clear_mdcfetsfxcnymiddleprice();
  const ::com::htsc::mdc::insight::model::MDCfetsFxCnyMiddlePrice& mdcfetsfxcnymiddleprice() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDCfetsFxCnyMiddlePrice* release_mdcfetsfxcnymiddleprice();
  ::com::htsc::mdc::insight::model::MDCfetsFxCnyMiddlePrice* mutable_mdcfetsfxcnymiddleprice();
  void set_allocated_mdcfetsfxcnymiddleprice(::com::htsc::mdc::insight::model::MDCfetsFxCnyMiddlePrice* mdcfetsfxcnymiddleprice);
  private:
  const ::com::htsc::mdc::insight::model::MDCfetsFxCnyMiddlePrice& _internal_mdcfetsfxcnymiddleprice() const;
  ::com::htsc::mdc::insight::model::MDCfetsFxCnyMiddlePrice* _internal_mutable_mdcfetsfxcnymiddleprice();
  public:
  void unsafe_arena_set_allocated_mdcfetsfxcnymiddleprice(
      ::com::htsc::mdc::insight::model::MDCfetsFxCnyMiddlePrice* mdcfetsfxcnymiddleprice);
  ::com::htsc::mdc::insight::model::MDCfetsFxCnyMiddlePrice* unsafe_arena_release_mdcfetsfxcnymiddleprice();

  // .com.htsc.mdc.insight.model.MDIopvSnapshot mdIopvSnapshot = 71;
  bool has_mdiopvsnapshot() const;
  private:
  bool _internal_has_mdiopvsnapshot() const;
  public:
  void clear_mdiopvsnapshot();
  const ::com::htsc::mdc::insight::model::MDIopvSnapshot& mdiopvsnapshot() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDIopvSnapshot* release_mdiopvsnapshot();
  ::com::htsc::mdc::insight::model::MDIopvSnapshot* mutable_mdiopvsnapshot();
  void set_allocated_mdiopvsnapshot(::com::htsc::mdc::insight::model::MDIopvSnapshot* mdiopvsnapshot);
  private:
  const ::com::htsc::mdc::insight::model::MDIopvSnapshot& _internal_mdiopvsnapshot() const;
  ::com::htsc::mdc::insight::model::MDIopvSnapshot* _internal_mutable_mdiopvsnapshot();
  public:
  void unsafe_arena_set_allocated_mdiopvsnapshot(
      ::com::htsc::mdc::insight::model::MDIopvSnapshot* mdiopvsnapshot);
  ::com::htsc::mdc::insight::model::MDIopvSnapshot* unsafe_arena_release_mdiopvsnapshot();

  // int64 MessageChannelNumber = 2;
  void clear_messagechannelnumber();
  int64_t messagechannelnumber() const;
  void set_messagechannelnumber(int64_t value);
  private:
  int64_t _internal_messagechannelnumber() const;
  void _internal_set_messagechannelnumber(int64_t value);
  public:

  // .com.htsc.mdc.insight.model.EMarketDataType marketDataType = 1;
  void clear_marketdatatype();
  ::com::htsc::mdc::insight::model::EMarketDataType marketdatatype() const;
  void set_marketdatatype(::com::htsc::mdc::insight::model::EMarketDataType value);
  private:
  ::com::htsc::mdc::insight::model::EMarketDataType _internal_marketdatatype() const;
  void _internal_set_marketdatatype(::com::htsc::mdc::insight::model::EMarketDataType value);
  public:

  // @@protoc_insertion_point(class_scope:com.htsc.mdc.insight.model.MarketData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::com::htsc::mdc::insight::model::MDStock* mdstock_;
    ::com::htsc::mdc::insight::model::MDIndex* mdindex_;
    ::com::htsc::mdc::insight::model::MDBond* mdbond_;
    ::com::htsc::mdc::insight::model::MDFund* mdfund_;
    ::com::htsc::mdc::insight::model::MDOption* mdoption_;
    ::com::htsc::mdc::insight::model::MDFuture* mdfuture_;
    ::com::htsc::mdc::insight::model::MDTransaction* mdtransaction_;
    ::com::htsc::mdc::insight::model::MDOrder* mdorder_;
    ::com::htsc::mdc::insight::model::ADKLine* mdkline_;
    ::com::htsc::mdc::insight::model::ADTwap* mdtwap_;
    ::com::htsc::mdc::insight::model::ADVwap* mdvwap_;
    ::com::htsc::mdc::insight::model::MDBasicInfo* mdconstant_;
    ::com::htsc::mdc::insight::model::MDSimpleTick* mdsimpletick_;
    ::com::htsc::mdc::insight::model::ADUpsDownsAnalysis* mdupsdownsanalysis_;
    ::com::htsc::mdc::insight::model::ADIndicatorsRanking* mdindicatorsranking_;
    ::com::htsc::mdc::insight::model::DynamicPacket* dynamicpacket_;
    ::com::htsc::mdc::insight::model::ADVolumeByPrice* mdvolumebyprice_;
    ::com::htsc::mdc::insight::model::ADFundFlowAnalysis* mdfundflowanalysis_;
    ::com::htsc::mdc::insight::model::MDForex* mdforex_;
    ::com::htsc::mdc::insight::model::MDSpot* mdspot_;
    ::com::htsc::mdc::insight::model::MDRate* mdrate_;
    ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* orderbooksnapshot_;
    ::com::htsc::mdc::insight::model::ADOrderbookSnapshotWithTick* orderbooksnapshotwithtick_;
    ::com::htsc::mdc::insight::model::MDQuote* mdquote_;
    ::com::htsc::mdc::insight::model::MDETFBasicInfo* mdetfbasicinfo_;
    ::com::htsc::mdc::insight::model::MDFIQuote* mdfiquote_;
    ::com::htsc::mdc::insight::model::ADChipDistribution* mdchipdistribution_;
    ::com::htsc::mdc::insight::model::MDWarrant* mdwarrant_;
    ::com::htsc::mdc::insight::model::MDSecurityLending* mdsecuritylending_;
    ::com::htsc::mdc::insight::model::ADNews* mdnews_;
    ::com::htsc::mdc::insight::model::ADStaringResult* mdstaringresult_;
    ::com::htsc::mdc::insight::model::ADDerivedAnalysis* mdderivedanalysis_;
    ::com::htsc::mdc::insight::model::MDQBQuote* mdqbquote_;
    ::com::htsc::mdc::insight::model::MDQBTransaction* mdqbtransaction_;
    ::com::htsc::mdc::insight::model::MDUSAOrder* mdusaorder_;
    ::com::htsc::mdc::insight::model::MDUSATransaction* mdusatransaction_;
    ::com::htsc::mdc::insight::model::MDSLOrder* mdslorder_;
    ::com::htsc::mdc::insight::model::MDSLTransaction* mdsltransaction_;
    ::com::htsc::mdc::insight::model::MDHKGreyMarket* mdhkgreymarket_;
    ::com::htsc::mdc::insight::model::MDSLIndicativeQuote* mdslindicativequote_;
    ::com::htsc::mdc::insight::model::MDSLStatistics* mdslstatistics_;
    ::com::htsc::mdc::insight::model::MDUSAQuote* mdusaquote_;
    ::com::htsc::mdc::insight::model::MDSLEstimation* mdslestimation_;
    ::com::htsc::mdc::insight::model::MDCnexDeal* mdcnexdeal_;
    ::com::htsc::mdc::insight::model::MDCnexQuote* mdcnexquote_;
    ::com::htsc::mdc::insight::model::MDDelaySnapshot* mddelaysnapshot_;
    ::com::htsc::mdc::insight::model::MDHighAccuracyFuture* mdhighaccuracyfuture_;
    ::com::htsc::mdc::insight::model::MDCfetsForex* mdcfetsforex_;
    ::com::htsc::mdc::insight::model::MDCfetsFxSnapshot* mdcfetsfxsnapshot_;
    ::com::htsc::mdc::insight::model::MDCfetsFxQuote* mdcfetsfxquote_;
    ::com::htsc::mdc::insight::model::SPFuture* spfuture_;
    ::com::htsc::mdc::insight::model::MDCfetsBenchmark* mdcfetsbenchmark_;
    ::com::htsc::mdc::insight::model::MDCfetsBondDeal* mdcfetsbonddeal_;
    ::com::htsc::mdc::insight::model::MDCfetsBondSnapshot* mdcfetsbondsnapshot_;
    ::com::htsc::mdc::insight::model::MDCfetsCurrencyDeal* mdcfetscurrencydeal_;
    ::com::htsc::mdc::insight::model::MDCfetsCurrencySnapshot* mdcfetscurrencysnapshot_;
    ::com::htsc::mdc::insight::model::MDCfetsODMSnapshot* mdcfetsodmsnapshot_;
    ::com::htsc::mdc::insight::model::MDCfetsQDMQuote* mdcfetsqdmquote_;
    ::com::htsc::mdc::insight::model::MDCfetsRateDeal* mdcfetsratedeal_;
    ::com::htsc::mdc::insight::model::MDCfetsRateSnapshot* mdcfetsratesnapshot_;
    ::com::htsc::mdc::insight::model::MDCfetsFxCnyMiddlePrice* mdcfetsfxcnymiddleprice_;
    ::com::htsc::mdc::insight::model::MDIopvSnapshot* mdiopvsnapshot_;
    int64_t messagechannelnumber_;
    int marketdatatype_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MarketData_2eproto;
};
// -------------------------------------------------------------------

class MarketDataStream final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.htsc.mdc.insight.model.MarketDataStream) */ {
 public:
  inline MarketDataStream() : MarketDataStream(nullptr) {}
  ~MarketDataStream() override;
  explicit PROTOBUF_CONSTEXPR MarketDataStream(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MarketDataStream(const MarketDataStream& from);
  MarketDataStream(MarketDataStream&& from) noexcept
    : MarketDataStream() {
    *this = ::std::move(from);
  }

  inline MarketDataStream& operator=(const MarketDataStream& from) {
    CopyFrom(from);
    return *this;
  }
  inline MarketDataStream& operator=(MarketDataStream&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MarketDataStream& default_instance() {
    return *internal_default_instance();
  }
  static inline const MarketDataStream* internal_default_instance() {
    return reinterpret_cast<const MarketDataStream*>(
               &_MarketDataStream_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MarketDataStream& a, MarketDataStream& b) {
    a.Swap(&b);
  }
  inline void Swap(MarketDataStream* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MarketDataStream* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MarketDataStream* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MarketDataStream>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MarketDataStream& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MarketDataStream& from) {
    MarketDataStream::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MarketDataStream* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.htsc.mdc.insight.model.MarketDataStream";
  }
  protected:
  explicit MarketDataStream(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCompressedDataFieldNumber = 3,
    kMarketDataListFieldNumber = 4,
    kOriginalLengthFieldNumber = 2,
    kIsCompressedFieldNumber = 1,
    kIsFinishedFieldNumber = 7,
    kTotalNumberFieldNumber = 5,
    kSerialFieldNumber = 6,
  };
  // bytes compressedData = 3;
  void clear_compresseddata();
  const std::string& compresseddata() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_compresseddata(ArgT0&& arg0, ArgT... args);
  std::string* mutable_compresseddata();
  PROTOBUF_NODISCARD std::string* release_compresseddata();
  void set_allocated_compresseddata(std::string* compresseddata);
  private:
  const std::string& _internal_compresseddata() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_compresseddata(const std::string& value);
  std::string* _internal_mutable_compresseddata();
  public:

  // .com.htsc.mdc.insight.model.MarketDataList marketDataList = 4;
  bool has_marketdatalist() const;
  private:
  bool _internal_has_marketdatalist() const;
  public:
  void clear_marketdatalist();
  const ::com::htsc::mdc::insight::model::MarketDataList& marketdatalist() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MarketDataList* release_marketdatalist();
  ::com::htsc::mdc::insight::model::MarketDataList* mutable_marketdatalist();
  void set_allocated_marketdatalist(::com::htsc::mdc::insight::model::MarketDataList* marketdatalist);
  private:
  const ::com::htsc::mdc::insight::model::MarketDataList& _internal_marketdatalist() const;
  ::com::htsc::mdc::insight::model::MarketDataList* _internal_mutable_marketdatalist();
  public:
  void unsafe_arena_set_allocated_marketdatalist(
      ::com::htsc::mdc::insight::model::MarketDataList* marketdatalist);
  ::com::htsc::mdc::insight::model::MarketDataList* unsafe_arena_release_marketdatalist();

  // int32 originalLength = 2;
  void clear_originallength();
  int32_t originallength() const;
  void set_originallength(int32_t value);
  private:
  int32_t _internal_originallength() const;
  void _internal_set_originallength(int32_t value);
  public:

  // bool isCompressed = 1;
  void clear_iscompressed();
  bool iscompressed() const;
  void set_iscompressed(bool value);
  private:
  bool _internal_iscompressed() const;
  void _internal_set_iscompressed(bool value);
  public:

  // bool isFinished = 7;
  void clear_isfinished();
  bool isfinished() const;
  void set_isfinished(bool value);
  private:
  bool _internal_isfinished() const;
  void _internal_set_isfinished(bool value);
  public:

  // int32 totalNumber = 5;
  void clear_totalnumber();
  int32_t totalnumber() const;
  void set_totalnumber(int32_t value);
  private:
  int32_t _internal_totalnumber() const;
  void _internal_set_totalnumber(int32_t value);
  public:

  // int32 serial = 6;
  void clear_serial();
  int32_t serial() const;
  void set_serial(int32_t value);
  private:
  int32_t _internal_serial() const;
  void _internal_set_serial(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:com.htsc.mdc.insight.model.MarketDataStream)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr compresseddata_;
    ::com::htsc::mdc::insight::model::MarketDataList* marketdatalist_;
    int32_t originallength_;
    bool iscompressed_;
    bool isfinished_;
    int32_t totalnumber_;
    int32_t serial_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MarketData_2eproto;
};
// -------------------------------------------------------------------

class MarketDataList final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.htsc.mdc.insight.model.MarketDataList) */ {
 public:
  inline MarketDataList() : MarketDataList(nullptr) {}
  ~MarketDataList() override;
  explicit PROTOBUF_CONSTEXPR MarketDataList(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MarketDataList(const MarketDataList& from);
  MarketDataList(MarketDataList&& from) noexcept
    : MarketDataList() {
    *this = ::std::move(from);
  }

  inline MarketDataList& operator=(const MarketDataList& from) {
    CopyFrom(from);
    return *this;
  }
  inline MarketDataList& operator=(MarketDataList&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MarketDataList& default_instance() {
    return *internal_default_instance();
  }
  static inline const MarketDataList* internal_default_instance() {
    return reinterpret_cast<const MarketDataList*>(
               &_MarketDataList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MarketDataList& a, MarketDataList& b) {
    a.Swap(&b);
  }
  inline void Swap(MarketDataList* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MarketDataList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MarketDataList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MarketDataList>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MarketDataList& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MarketDataList& from) {
    MarketDataList::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MarketDataList* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.htsc.mdc.insight.model.MarketDataList";
  }
  protected:
  explicit MarketDataList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMarketDatasFieldNumber = 1,
  };
  // repeated .com.htsc.mdc.insight.model.MarketData marketDatas = 1;
  int marketdatas_size() const;
  private:
  int _internal_marketdatas_size() const;
  public:
  void clear_marketdatas();
  ::com::htsc::mdc::insight::model::MarketData* mutable_marketdatas(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::MarketData >*
      mutable_marketdatas();
  private:
  const ::com::htsc::mdc::insight::model::MarketData& _internal_marketdatas(int index) const;
  ::com::htsc::mdc::insight::model::MarketData* _internal_add_marketdatas();
  public:
  const ::com::htsc::mdc::insight::model::MarketData& marketdatas(int index) const;
  ::com::htsc::mdc::insight::model::MarketData* add_marketdatas();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::MarketData >&
      marketdatas() const;

  // @@protoc_insertion_point(class_scope:com.htsc.mdc.insight.model.MarketDataList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::MarketData > marketdatas_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MarketData_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MarketData

// .com.htsc.mdc.insight.model.EMarketDataType marketDataType = 1;
inline void MarketData::clear_marketdatatype() {
  _impl_.marketdatatype_ = 0;
}
inline ::com::htsc::mdc::insight::model::EMarketDataType MarketData::_internal_marketdatatype() const {
  return static_cast< ::com::htsc::mdc::insight::model::EMarketDataType >(_impl_.marketdatatype_);
}
inline ::com::htsc::mdc::insight::model::EMarketDataType MarketData::marketdatatype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.marketDataType)
  return _internal_marketdatatype();
}
inline void MarketData::_internal_set_marketdatatype(::com::htsc::mdc::insight::model::EMarketDataType value) {
  
  _impl_.marketdatatype_ = value;
}
inline void MarketData::set_marketdatatype(::com::htsc::mdc::insight::model::EMarketDataType value) {
  _internal_set_marketdatatype(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MarketData.marketDataType)
}

// int64 MessageChannelNumber = 2;
inline void MarketData::clear_messagechannelnumber() {
  _impl_.messagechannelnumber_ = int64_t{0};
}
inline int64_t MarketData::_internal_messagechannelnumber() const {
  return _impl_.messagechannelnumber_;
}
inline int64_t MarketData::messagechannelnumber() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.MessageChannelNumber)
  return _internal_messagechannelnumber();
}
inline void MarketData::_internal_set_messagechannelnumber(int64_t value) {
  
  _impl_.messagechannelnumber_ = value;
}
inline void MarketData::set_messagechannelnumber(int64_t value) {
  _internal_set_messagechannelnumber(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MarketData.MessageChannelNumber)
}

// .com.htsc.mdc.insight.model.MDStock mdStock = 10;
inline bool MarketData::_internal_has_mdstock() const {
  return this != internal_default_instance() && _impl_.mdstock_ != nullptr;
}
inline bool MarketData::has_mdstock() const {
  return _internal_has_mdstock();
}
inline const ::com::htsc::mdc::insight::model::MDStock& MarketData::_internal_mdstock() const {
  const ::com::htsc::mdc::insight::model::MDStock* p = _impl_.mdstock_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDStock&>(
      ::com::htsc::mdc::insight::model::_MDStock_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDStock& MarketData::mdstock() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdStock)
  return _internal_mdstock();
}
inline void MarketData::unsafe_arena_set_allocated_mdstock(
    ::com::htsc::mdc::insight::model::MDStock* mdstock) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdstock_);
  }
  _impl_.mdstock_ = mdstock;
  if (mdstock) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdStock)
}
inline ::com::htsc::mdc::insight::model::MDStock* MarketData::release_mdstock() {
  
  ::com::htsc::mdc::insight::model::MDStock* temp = _impl_.mdstock_;
  _impl_.mdstock_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDStock* MarketData::unsafe_arena_release_mdstock() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdStock)
  
  ::com::htsc::mdc::insight::model::MDStock* temp = _impl_.mdstock_;
  _impl_.mdstock_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDStock* MarketData::_internal_mutable_mdstock() {
  
  if (_impl_.mdstock_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDStock>(GetArenaForAllocation());
    _impl_.mdstock_ = p;
  }
  return _impl_.mdstock_;
}
inline ::com::htsc::mdc::insight::model::MDStock* MarketData::mutable_mdstock() {
  ::com::htsc::mdc::insight::model::MDStock* _msg = _internal_mutable_mdstock();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdStock)
  return _msg;
}
inline void MarketData::set_allocated_mdstock(::com::htsc::mdc::insight::model::MDStock* mdstock) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdstock_);
  }
  if (mdstock) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdstock));
    if (message_arena != submessage_arena) {
      mdstock = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdstock, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdstock_ = mdstock;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdStock)
}

// .com.htsc.mdc.insight.model.MDIndex mdIndex = 11;
inline bool MarketData::_internal_has_mdindex() const {
  return this != internal_default_instance() && _impl_.mdindex_ != nullptr;
}
inline bool MarketData::has_mdindex() const {
  return _internal_has_mdindex();
}
inline const ::com::htsc::mdc::insight::model::MDIndex& MarketData::_internal_mdindex() const {
  const ::com::htsc::mdc::insight::model::MDIndex* p = _impl_.mdindex_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDIndex&>(
      ::com::htsc::mdc::insight::model::_MDIndex_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDIndex& MarketData::mdindex() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdIndex)
  return _internal_mdindex();
}
inline void MarketData::unsafe_arena_set_allocated_mdindex(
    ::com::htsc::mdc::insight::model::MDIndex* mdindex) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdindex_);
  }
  _impl_.mdindex_ = mdindex;
  if (mdindex) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdIndex)
}
inline ::com::htsc::mdc::insight::model::MDIndex* MarketData::release_mdindex() {
  
  ::com::htsc::mdc::insight::model::MDIndex* temp = _impl_.mdindex_;
  _impl_.mdindex_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDIndex* MarketData::unsafe_arena_release_mdindex() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdIndex)
  
  ::com::htsc::mdc::insight::model::MDIndex* temp = _impl_.mdindex_;
  _impl_.mdindex_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDIndex* MarketData::_internal_mutable_mdindex() {
  
  if (_impl_.mdindex_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDIndex>(GetArenaForAllocation());
    _impl_.mdindex_ = p;
  }
  return _impl_.mdindex_;
}
inline ::com::htsc::mdc::insight::model::MDIndex* MarketData::mutable_mdindex() {
  ::com::htsc::mdc::insight::model::MDIndex* _msg = _internal_mutable_mdindex();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdIndex)
  return _msg;
}
inline void MarketData::set_allocated_mdindex(::com::htsc::mdc::insight::model::MDIndex* mdindex) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdindex_);
  }
  if (mdindex) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdindex));
    if (message_arena != submessage_arena) {
      mdindex = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdindex, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdindex_ = mdindex;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdIndex)
}

// .com.htsc.mdc.insight.model.MDBond mdBond = 12;
inline bool MarketData::_internal_has_mdbond() const {
  return this != internal_default_instance() && _impl_.mdbond_ != nullptr;
}
inline bool MarketData::has_mdbond() const {
  return _internal_has_mdbond();
}
inline const ::com::htsc::mdc::insight::model::MDBond& MarketData::_internal_mdbond() const {
  const ::com::htsc::mdc::insight::model::MDBond* p = _impl_.mdbond_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDBond&>(
      ::com::htsc::mdc::insight::model::_MDBond_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDBond& MarketData::mdbond() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdBond)
  return _internal_mdbond();
}
inline void MarketData::unsafe_arena_set_allocated_mdbond(
    ::com::htsc::mdc::insight::model::MDBond* mdbond) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdbond_);
  }
  _impl_.mdbond_ = mdbond;
  if (mdbond) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdBond)
}
inline ::com::htsc::mdc::insight::model::MDBond* MarketData::release_mdbond() {
  
  ::com::htsc::mdc::insight::model::MDBond* temp = _impl_.mdbond_;
  _impl_.mdbond_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDBond* MarketData::unsafe_arena_release_mdbond() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdBond)
  
  ::com::htsc::mdc::insight::model::MDBond* temp = _impl_.mdbond_;
  _impl_.mdbond_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDBond* MarketData::_internal_mutable_mdbond() {
  
  if (_impl_.mdbond_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDBond>(GetArenaForAllocation());
    _impl_.mdbond_ = p;
  }
  return _impl_.mdbond_;
}
inline ::com::htsc::mdc::insight::model::MDBond* MarketData::mutable_mdbond() {
  ::com::htsc::mdc::insight::model::MDBond* _msg = _internal_mutable_mdbond();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdBond)
  return _msg;
}
inline void MarketData::set_allocated_mdbond(::com::htsc::mdc::insight::model::MDBond* mdbond) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdbond_);
  }
  if (mdbond) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdbond));
    if (message_arena != submessage_arena) {
      mdbond = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdbond, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdbond_ = mdbond;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdBond)
}

// .com.htsc.mdc.insight.model.MDFund mdFund = 13;
inline bool MarketData::_internal_has_mdfund() const {
  return this != internal_default_instance() && _impl_.mdfund_ != nullptr;
}
inline bool MarketData::has_mdfund() const {
  return _internal_has_mdfund();
}
inline const ::com::htsc::mdc::insight::model::MDFund& MarketData::_internal_mdfund() const {
  const ::com::htsc::mdc::insight::model::MDFund* p = _impl_.mdfund_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDFund&>(
      ::com::htsc::mdc::insight::model::_MDFund_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDFund& MarketData::mdfund() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdFund)
  return _internal_mdfund();
}
inline void MarketData::unsafe_arena_set_allocated_mdfund(
    ::com::htsc::mdc::insight::model::MDFund* mdfund) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdfund_);
  }
  _impl_.mdfund_ = mdfund;
  if (mdfund) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdFund)
}
inline ::com::htsc::mdc::insight::model::MDFund* MarketData::release_mdfund() {
  
  ::com::htsc::mdc::insight::model::MDFund* temp = _impl_.mdfund_;
  _impl_.mdfund_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDFund* MarketData::unsafe_arena_release_mdfund() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdFund)
  
  ::com::htsc::mdc::insight::model::MDFund* temp = _impl_.mdfund_;
  _impl_.mdfund_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDFund* MarketData::_internal_mutable_mdfund() {
  
  if (_impl_.mdfund_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDFund>(GetArenaForAllocation());
    _impl_.mdfund_ = p;
  }
  return _impl_.mdfund_;
}
inline ::com::htsc::mdc::insight::model::MDFund* MarketData::mutable_mdfund() {
  ::com::htsc::mdc::insight::model::MDFund* _msg = _internal_mutable_mdfund();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdFund)
  return _msg;
}
inline void MarketData::set_allocated_mdfund(::com::htsc::mdc::insight::model::MDFund* mdfund) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdfund_);
  }
  if (mdfund) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdfund));
    if (message_arena != submessage_arena) {
      mdfund = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdfund, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdfund_ = mdfund;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdFund)
}

// .com.htsc.mdc.insight.model.MDOption mdOption = 14;
inline bool MarketData::_internal_has_mdoption() const {
  return this != internal_default_instance() && _impl_.mdoption_ != nullptr;
}
inline bool MarketData::has_mdoption() const {
  return _internal_has_mdoption();
}
inline const ::com::htsc::mdc::insight::model::MDOption& MarketData::_internal_mdoption() const {
  const ::com::htsc::mdc::insight::model::MDOption* p = _impl_.mdoption_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDOption&>(
      ::com::htsc::mdc::insight::model::_MDOption_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDOption& MarketData::mdoption() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdOption)
  return _internal_mdoption();
}
inline void MarketData::unsafe_arena_set_allocated_mdoption(
    ::com::htsc::mdc::insight::model::MDOption* mdoption) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdoption_);
  }
  _impl_.mdoption_ = mdoption;
  if (mdoption) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdOption)
}
inline ::com::htsc::mdc::insight::model::MDOption* MarketData::release_mdoption() {
  
  ::com::htsc::mdc::insight::model::MDOption* temp = _impl_.mdoption_;
  _impl_.mdoption_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDOption* MarketData::unsafe_arena_release_mdoption() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdOption)
  
  ::com::htsc::mdc::insight::model::MDOption* temp = _impl_.mdoption_;
  _impl_.mdoption_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDOption* MarketData::_internal_mutable_mdoption() {
  
  if (_impl_.mdoption_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDOption>(GetArenaForAllocation());
    _impl_.mdoption_ = p;
  }
  return _impl_.mdoption_;
}
inline ::com::htsc::mdc::insight::model::MDOption* MarketData::mutable_mdoption() {
  ::com::htsc::mdc::insight::model::MDOption* _msg = _internal_mutable_mdoption();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdOption)
  return _msg;
}
inline void MarketData::set_allocated_mdoption(::com::htsc::mdc::insight::model::MDOption* mdoption) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdoption_);
  }
  if (mdoption) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdoption));
    if (message_arena != submessage_arena) {
      mdoption = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdoption, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdoption_ = mdoption;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdOption)
}

// .com.htsc.mdc.insight.model.MDFuture mdFuture = 15;
inline bool MarketData::_internal_has_mdfuture() const {
  return this != internal_default_instance() && _impl_.mdfuture_ != nullptr;
}
inline bool MarketData::has_mdfuture() const {
  return _internal_has_mdfuture();
}
inline const ::com::htsc::mdc::insight::model::MDFuture& MarketData::_internal_mdfuture() const {
  const ::com::htsc::mdc::insight::model::MDFuture* p = _impl_.mdfuture_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDFuture&>(
      ::com::htsc::mdc::insight::model::_MDFuture_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDFuture& MarketData::mdfuture() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdFuture)
  return _internal_mdfuture();
}
inline void MarketData::unsafe_arena_set_allocated_mdfuture(
    ::com::htsc::mdc::insight::model::MDFuture* mdfuture) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdfuture_);
  }
  _impl_.mdfuture_ = mdfuture;
  if (mdfuture) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdFuture)
}
inline ::com::htsc::mdc::insight::model::MDFuture* MarketData::release_mdfuture() {
  
  ::com::htsc::mdc::insight::model::MDFuture* temp = _impl_.mdfuture_;
  _impl_.mdfuture_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDFuture* MarketData::unsafe_arena_release_mdfuture() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdFuture)
  
  ::com::htsc::mdc::insight::model::MDFuture* temp = _impl_.mdfuture_;
  _impl_.mdfuture_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDFuture* MarketData::_internal_mutable_mdfuture() {
  
  if (_impl_.mdfuture_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDFuture>(GetArenaForAllocation());
    _impl_.mdfuture_ = p;
  }
  return _impl_.mdfuture_;
}
inline ::com::htsc::mdc::insight::model::MDFuture* MarketData::mutable_mdfuture() {
  ::com::htsc::mdc::insight::model::MDFuture* _msg = _internal_mutable_mdfuture();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdFuture)
  return _msg;
}
inline void MarketData::set_allocated_mdfuture(::com::htsc::mdc::insight::model::MDFuture* mdfuture) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdfuture_);
  }
  if (mdfuture) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdfuture));
    if (message_arena != submessage_arena) {
      mdfuture = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdfuture, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdfuture_ = mdfuture;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdFuture)
}

// .com.htsc.mdc.insight.model.MDTransaction mdTransaction = 16;
inline bool MarketData::_internal_has_mdtransaction() const {
  return this != internal_default_instance() && _impl_.mdtransaction_ != nullptr;
}
inline bool MarketData::has_mdtransaction() const {
  return _internal_has_mdtransaction();
}
inline const ::com::htsc::mdc::insight::model::MDTransaction& MarketData::_internal_mdtransaction() const {
  const ::com::htsc::mdc::insight::model::MDTransaction* p = _impl_.mdtransaction_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDTransaction&>(
      ::com::htsc::mdc::insight::model::_MDTransaction_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDTransaction& MarketData::mdtransaction() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdTransaction)
  return _internal_mdtransaction();
}
inline void MarketData::unsafe_arena_set_allocated_mdtransaction(
    ::com::htsc::mdc::insight::model::MDTransaction* mdtransaction) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdtransaction_);
  }
  _impl_.mdtransaction_ = mdtransaction;
  if (mdtransaction) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdTransaction)
}
inline ::com::htsc::mdc::insight::model::MDTransaction* MarketData::release_mdtransaction() {
  
  ::com::htsc::mdc::insight::model::MDTransaction* temp = _impl_.mdtransaction_;
  _impl_.mdtransaction_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDTransaction* MarketData::unsafe_arena_release_mdtransaction() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdTransaction)
  
  ::com::htsc::mdc::insight::model::MDTransaction* temp = _impl_.mdtransaction_;
  _impl_.mdtransaction_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDTransaction* MarketData::_internal_mutable_mdtransaction() {
  
  if (_impl_.mdtransaction_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDTransaction>(GetArenaForAllocation());
    _impl_.mdtransaction_ = p;
  }
  return _impl_.mdtransaction_;
}
inline ::com::htsc::mdc::insight::model::MDTransaction* MarketData::mutable_mdtransaction() {
  ::com::htsc::mdc::insight::model::MDTransaction* _msg = _internal_mutable_mdtransaction();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdTransaction)
  return _msg;
}
inline void MarketData::set_allocated_mdtransaction(::com::htsc::mdc::insight::model::MDTransaction* mdtransaction) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdtransaction_);
  }
  if (mdtransaction) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdtransaction));
    if (message_arena != submessage_arena) {
      mdtransaction = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdtransaction, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdtransaction_ = mdtransaction;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdTransaction)
}

// .com.htsc.mdc.insight.model.MDOrder mdOrder = 17;
inline bool MarketData::_internal_has_mdorder() const {
  return this != internal_default_instance() && _impl_.mdorder_ != nullptr;
}
inline bool MarketData::has_mdorder() const {
  return _internal_has_mdorder();
}
inline const ::com::htsc::mdc::insight::model::MDOrder& MarketData::_internal_mdorder() const {
  const ::com::htsc::mdc::insight::model::MDOrder* p = _impl_.mdorder_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDOrder&>(
      ::com::htsc::mdc::insight::model::_MDOrder_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDOrder& MarketData::mdorder() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdOrder)
  return _internal_mdorder();
}
inline void MarketData::unsafe_arena_set_allocated_mdorder(
    ::com::htsc::mdc::insight::model::MDOrder* mdorder) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdorder_);
  }
  _impl_.mdorder_ = mdorder;
  if (mdorder) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdOrder)
}
inline ::com::htsc::mdc::insight::model::MDOrder* MarketData::release_mdorder() {
  
  ::com::htsc::mdc::insight::model::MDOrder* temp = _impl_.mdorder_;
  _impl_.mdorder_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDOrder* MarketData::unsafe_arena_release_mdorder() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdOrder)
  
  ::com::htsc::mdc::insight::model::MDOrder* temp = _impl_.mdorder_;
  _impl_.mdorder_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDOrder* MarketData::_internal_mutable_mdorder() {
  
  if (_impl_.mdorder_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDOrder>(GetArenaForAllocation());
    _impl_.mdorder_ = p;
  }
  return _impl_.mdorder_;
}
inline ::com::htsc::mdc::insight::model::MDOrder* MarketData::mutable_mdorder() {
  ::com::htsc::mdc::insight::model::MDOrder* _msg = _internal_mutable_mdorder();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdOrder)
  return _msg;
}
inline void MarketData::set_allocated_mdorder(::com::htsc::mdc::insight::model::MDOrder* mdorder) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdorder_);
  }
  if (mdorder) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdorder));
    if (message_arena != submessage_arena) {
      mdorder = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdorder, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdorder_ = mdorder;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdOrder)
}

// .com.htsc.mdc.insight.model.ADKLine mdKLine = 18;
inline bool MarketData::_internal_has_mdkline() const {
  return this != internal_default_instance() && _impl_.mdkline_ != nullptr;
}
inline bool MarketData::has_mdkline() const {
  return _internal_has_mdkline();
}
inline const ::com::htsc::mdc::insight::model::ADKLine& MarketData::_internal_mdkline() const {
  const ::com::htsc::mdc::insight::model::ADKLine* p = _impl_.mdkline_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::ADKLine&>(
      ::com::htsc::mdc::insight::model::_ADKLine_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::ADKLine& MarketData::mdkline() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdKLine)
  return _internal_mdkline();
}
inline void MarketData::unsafe_arena_set_allocated_mdkline(
    ::com::htsc::mdc::insight::model::ADKLine* mdkline) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdkline_);
  }
  _impl_.mdkline_ = mdkline;
  if (mdkline) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdKLine)
}
inline ::com::htsc::mdc::insight::model::ADKLine* MarketData::release_mdkline() {
  
  ::com::htsc::mdc::insight::model::ADKLine* temp = _impl_.mdkline_;
  _impl_.mdkline_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::ADKLine* MarketData::unsafe_arena_release_mdkline() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdKLine)
  
  ::com::htsc::mdc::insight::model::ADKLine* temp = _impl_.mdkline_;
  _impl_.mdkline_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::ADKLine* MarketData::_internal_mutable_mdkline() {
  
  if (_impl_.mdkline_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::ADKLine>(GetArenaForAllocation());
    _impl_.mdkline_ = p;
  }
  return _impl_.mdkline_;
}
inline ::com::htsc::mdc::insight::model::ADKLine* MarketData::mutable_mdkline() {
  ::com::htsc::mdc::insight::model::ADKLine* _msg = _internal_mutable_mdkline();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdKLine)
  return _msg;
}
inline void MarketData::set_allocated_mdkline(::com::htsc::mdc::insight::model::ADKLine* mdkline) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdkline_);
  }
  if (mdkline) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdkline));
    if (message_arena != submessage_arena) {
      mdkline = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdkline, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdkline_ = mdkline;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdKLine)
}

// .com.htsc.mdc.insight.model.ADTwap mdTwap = 19;
inline bool MarketData::_internal_has_mdtwap() const {
  return this != internal_default_instance() && _impl_.mdtwap_ != nullptr;
}
inline bool MarketData::has_mdtwap() const {
  return _internal_has_mdtwap();
}
inline const ::com::htsc::mdc::insight::model::ADTwap& MarketData::_internal_mdtwap() const {
  const ::com::htsc::mdc::insight::model::ADTwap* p = _impl_.mdtwap_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::ADTwap&>(
      ::com::htsc::mdc::insight::model::_ADTwap_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::ADTwap& MarketData::mdtwap() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdTwap)
  return _internal_mdtwap();
}
inline void MarketData::unsafe_arena_set_allocated_mdtwap(
    ::com::htsc::mdc::insight::model::ADTwap* mdtwap) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdtwap_);
  }
  _impl_.mdtwap_ = mdtwap;
  if (mdtwap) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdTwap)
}
inline ::com::htsc::mdc::insight::model::ADTwap* MarketData::release_mdtwap() {
  
  ::com::htsc::mdc::insight::model::ADTwap* temp = _impl_.mdtwap_;
  _impl_.mdtwap_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::ADTwap* MarketData::unsafe_arena_release_mdtwap() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdTwap)
  
  ::com::htsc::mdc::insight::model::ADTwap* temp = _impl_.mdtwap_;
  _impl_.mdtwap_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::ADTwap* MarketData::_internal_mutable_mdtwap() {
  
  if (_impl_.mdtwap_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::ADTwap>(GetArenaForAllocation());
    _impl_.mdtwap_ = p;
  }
  return _impl_.mdtwap_;
}
inline ::com::htsc::mdc::insight::model::ADTwap* MarketData::mutable_mdtwap() {
  ::com::htsc::mdc::insight::model::ADTwap* _msg = _internal_mutable_mdtwap();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdTwap)
  return _msg;
}
inline void MarketData::set_allocated_mdtwap(::com::htsc::mdc::insight::model::ADTwap* mdtwap) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdtwap_);
  }
  if (mdtwap) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdtwap));
    if (message_arena != submessage_arena) {
      mdtwap = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdtwap, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdtwap_ = mdtwap;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdTwap)
}

// .com.htsc.mdc.insight.model.ADVwap mdVwap = 20;
inline bool MarketData::_internal_has_mdvwap() const {
  return this != internal_default_instance() && _impl_.mdvwap_ != nullptr;
}
inline bool MarketData::has_mdvwap() const {
  return _internal_has_mdvwap();
}
inline const ::com::htsc::mdc::insight::model::ADVwap& MarketData::_internal_mdvwap() const {
  const ::com::htsc::mdc::insight::model::ADVwap* p = _impl_.mdvwap_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::ADVwap&>(
      ::com::htsc::mdc::insight::model::_ADVwap_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::ADVwap& MarketData::mdvwap() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdVwap)
  return _internal_mdvwap();
}
inline void MarketData::unsafe_arena_set_allocated_mdvwap(
    ::com::htsc::mdc::insight::model::ADVwap* mdvwap) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdvwap_);
  }
  _impl_.mdvwap_ = mdvwap;
  if (mdvwap) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdVwap)
}
inline ::com::htsc::mdc::insight::model::ADVwap* MarketData::release_mdvwap() {
  
  ::com::htsc::mdc::insight::model::ADVwap* temp = _impl_.mdvwap_;
  _impl_.mdvwap_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::ADVwap* MarketData::unsafe_arena_release_mdvwap() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdVwap)
  
  ::com::htsc::mdc::insight::model::ADVwap* temp = _impl_.mdvwap_;
  _impl_.mdvwap_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::ADVwap* MarketData::_internal_mutable_mdvwap() {
  
  if (_impl_.mdvwap_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::ADVwap>(GetArenaForAllocation());
    _impl_.mdvwap_ = p;
  }
  return _impl_.mdvwap_;
}
inline ::com::htsc::mdc::insight::model::ADVwap* MarketData::mutable_mdvwap() {
  ::com::htsc::mdc::insight::model::ADVwap* _msg = _internal_mutable_mdvwap();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdVwap)
  return _msg;
}
inline void MarketData::set_allocated_mdvwap(::com::htsc::mdc::insight::model::ADVwap* mdvwap) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdvwap_);
  }
  if (mdvwap) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdvwap));
    if (message_arena != submessage_arena) {
      mdvwap = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdvwap, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdvwap_ = mdvwap;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdVwap)
}

// .com.htsc.mdc.insight.model.MDBasicInfo mdConstant = 21;
inline bool MarketData::_internal_has_mdconstant() const {
  return this != internal_default_instance() && _impl_.mdconstant_ != nullptr;
}
inline bool MarketData::has_mdconstant() const {
  return _internal_has_mdconstant();
}
inline const ::com::htsc::mdc::insight::model::MDBasicInfo& MarketData::_internal_mdconstant() const {
  const ::com::htsc::mdc::insight::model::MDBasicInfo* p = _impl_.mdconstant_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDBasicInfo&>(
      ::com::htsc::mdc::insight::model::_MDBasicInfo_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDBasicInfo& MarketData::mdconstant() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdConstant)
  return _internal_mdconstant();
}
inline void MarketData::unsafe_arena_set_allocated_mdconstant(
    ::com::htsc::mdc::insight::model::MDBasicInfo* mdconstant) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdconstant_);
  }
  _impl_.mdconstant_ = mdconstant;
  if (mdconstant) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdConstant)
}
inline ::com::htsc::mdc::insight::model::MDBasicInfo* MarketData::release_mdconstant() {
  
  ::com::htsc::mdc::insight::model::MDBasicInfo* temp = _impl_.mdconstant_;
  _impl_.mdconstant_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDBasicInfo* MarketData::unsafe_arena_release_mdconstant() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdConstant)
  
  ::com::htsc::mdc::insight::model::MDBasicInfo* temp = _impl_.mdconstant_;
  _impl_.mdconstant_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDBasicInfo* MarketData::_internal_mutable_mdconstant() {
  
  if (_impl_.mdconstant_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDBasicInfo>(GetArenaForAllocation());
    _impl_.mdconstant_ = p;
  }
  return _impl_.mdconstant_;
}
inline ::com::htsc::mdc::insight::model::MDBasicInfo* MarketData::mutable_mdconstant() {
  ::com::htsc::mdc::insight::model::MDBasicInfo* _msg = _internal_mutable_mdconstant();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdConstant)
  return _msg;
}
inline void MarketData::set_allocated_mdconstant(::com::htsc::mdc::insight::model::MDBasicInfo* mdconstant) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdconstant_);
  }
  if (mdconstant) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdconstant));
    if (message_arena != submessage_arena) {
      mdconstant = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdconstant, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdconstant_ = mdconstant;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdConstant)
}

// .com.htsc.mdc.insight.model.MDSimpleTick mdSimpleTick = 22;
inline bool MarketData::_internal_has_mdsimpletick() const {
  return this != internal_default_instance() && _impl_.mdsimpletick_ != nullptr;
}
inline bool MarketData::has_mdsimpletick() const {
  return _internal_has_mdsimpletick();
}
inline const ::com::htsc::mdc::insight::model::MDSimpleTick& MarketData::_internal_mdsimpletick() const {
  const ::com::htsc::mdc::insight::model::MDSimpleTick* p = _impl_.mdsimpletick_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDSimpleTick&>(
      ::com::htsc::mdc::insight::model::_MDSimpleTick_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDSimpleTick& MarketData::mdsimpletick() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdSimpleTick)
  return _internal_mdsimpletick();
}
inline void MarketData::unsafe_arena_set_allocated_mdsimpletick(
    ::com::htsc::mdc::insight::model::MDSimpleTick* mdsimpletick) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdsimpletick_);
  }
  _impl_.mdsimpletick_ = mdsimpletick;
  if (mdsimpletick) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdSimpleTick)
}
inline ::com::htsc::mdc::insight::model::MDSimpleTick* MarketData::release_mdsimpletick() {
  
  ::com::htsc::mdc::insight::model::MDSimpleTick* temp = _impl_.mdsimpletick_;
  _impl_.mdsimpletick_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDSimpleTick* MarketData::unsafe_arena_release_mdsimpletick() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdSimpleTick)
  
  ::com::htsc::mdc::insight::model::MDSimpleTick* temp = _impl_.mdsimpletick_;
  _impl_.mdsimpletick_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDSimpleTick* MarketData::_internal_mutable_mdsimpletick() {
  
  if (_impl_.mdsimpletick_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDSimpleTick>(GetArenaForAllocation());
    _impl_.mdsimpletick_ = p;
  }
  return _impl_.mdsimpletick_;
}
inline ::com::htsc::mdc::insight::model::MDSimpleTick* MarketData::mutable_mdsimpletick() {
  ::com::htsc::mdc::insight::model::MDSimpleTick* _msg = _internal_mutable_mdsimpletick();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdSimpleTick)
  return _msg;
}
inline void MarketData::set_allocated_mdsimpletick(::com::htsc::mdc::insight::model::MDSimpleTick* mdsimpletick) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdsimpletick_);
  }
  if (mdsimpletick) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdsimpletick));
    if (message_arena != submessage_arena) {
      mdsimpletick = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdsimpletick, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdsimpletick_ = mdsimpletick;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdSimpleTick)
}

// .com.htsc.mdc.insight.model.ADUpsDownsAnalysis mdUpsDownsAnalysis = 23;
inline bool MarketData::_internal_has_mdupsdownsanalysis() const {
  return this != internal_default_instance() && _impl_.mdupsdownsanalysis_ != nullptr;
}
inline bool MarketData::has_mdupsdownsanalysis() const {
  return _internal_has_mdupsdownsanalysis();
}
inline const ::com::htsc::mdc::insight::model::ADUpsDownsAnalysis& MarketData::_internal_mdupsdownsanalysis() const {
  const ::com::htsc::mdc::insight::model::ADUpsDownsAnalysis* p = _impl_.mdupsdownsanalysis_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::ADUpsDownsAnalysis&>(
      ::com::htsc::mdc::insight::model::_ADUpsDownsAnalysis_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::ADUpsDownsAnalysis& MarketData::mdupsdownsanalysis() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdUpsDownsAnalysis)
  return _internal_mdupsdownsanalysis();
}
inline void MarketData::unsafe_arena_set_allocated_mdupsdownsanalysis(
    ::com::htsc::mdc::insight::model::ADUpsDownsAnalysis* mdupsdownsanalysis) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdupsdownsanalysis_);
  }
  _impl_.mdupsdownsanalysis_ = mdupsdownsanalysis;
  if (mdupsdownsanalysis) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdUpsDownsAnalysis)
}
inline ::com::htsc::mdc::insight::model::ADUpsDownsAnalysis* MarketData::release_mdupsdownsanalysis() {
  
  ::com::htsc::mdc::insight::model::ADUpsDownsAnalysis* temp = _impl_.mdupsdownsanalysis_;
  _impl_.mdupsdownsanalysis_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::ADUpsDownsAnalysis* MarketData::unsafe_arena_release_mdupsdownsanalysis() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdUpsDownsAnalysis)
  
  ::com::htsc::mdc::insight::model::ADUpsDownsAnalysis* temp = _impl_.mdupsdownsanalysis_;
  _impl_.mdupsdownsanalysis_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::ADUpsDownsAnalysis* MarketData::_internal_mutable_mdupsdownsanalysis() {
  
  if (_impl_.mdupsdownsanalysis_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::ADUpsDownsAnalysis>(GetArenaForAllocation());
    _impl_.mdupsdownsanalysis_ = p;
  }
  return _impl_.mdupsdownsanalysis_;
}
inline ::com::htsc::mdc::insight::model::ADUpsDownsAnalysis* MarketData::mutable_mdupsdownsanalysis() {
  ::com::htsc::mdc::insight::model::ADUpsDownsAnalysis* _msg = _internal_mutable_mdupsdownsanalysis();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdUpsDownsAnalysis)
  return _msg;
}
inline void MarketData::set_allocated_mdupsdownsanalysis(::com::htsc::mdc::insight::model::ADUpsDownsAnalysis* mdupsdownsanalysis) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdupsdownsanalysis_);
  }
  if (mdupsdownsanalysis) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdupsdownsanalysis));
    if (message_arena != submessage_arena) {
      mdupsdownsanalysis = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdupsdownsanalysis, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdupsdownsanalysis_ = mdupsdownsanalysis;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdUpsDownsAnalysis)
}

// .com.htsc.mdc.insight.model.ADIndicatorsRanking mdIndicatorsRanking = 24;
inline bool MarketData::_internal_has_mdindicatorsranking() const {
  return this != internal_default_instance() && _impl_.mdindicatorsranking_ != nullptr;
}
inline bool MarketData::has_mdindicatorsranking() const {
  return _internal_has_mdindicatorsranking();
}
inline const ::com::htsc::mdc::insight::model::ADIndicatorsRanking& MarketData::_internal_mdindicatorsranking() const {
  const ::com::htsc::mdc::insight::model::ADIndicatorsRanking* p = _impl_.mdindicatorsranking_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::ADIndicatorsRanking&>(
      ::com::htsc::mdc::insight::model::_ADIndicatorsRanking_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::ADIndicatorsRanking& MarketData::mdindicatorsranking() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdIndicatorsRanking)
  return _internal_mdindicatorsranking();
}
inline void MarketData::unsafe_arena_set_allocated_mdindicatorsranking(
    ::com::htsc::mdc::insight::model::ADIndicatorsRanking* mdindicatorsranking) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdindicatorsranking_);
  }
  _impl_.mdindicatorsranking_ = mdindicatorsranking;
  if (mdindicatorsranking) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdIndicatorsRanking)
}
inline ::com::htsc::mdc::insight::model::ADIndicatorsRanking* MarketData::release_mdindicatorsranking() {
  
  ::com::htsc::mdc::insight::model::ADIndicatorsRanking* temp = _impl_.mdindicatorsranking_;
  _impl_.mdindicatorsranking_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::ADIndicatorsRanking* MarketData::unsafe_arena_release_mdindicatorsranking() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdIndicatorsRanking)
  
  ::com::htsc::mdc::insight::model::ADIndicatorsRanking* temp = _impl_.mdindicatorsranking_;
  _impl_.mdindicatorsranking_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::ADIndicatorsRanking* MarketData::_internal_mutable_mdindicatorsranking() {
  
  if (_impl_.mdindicatorsranking_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::ADIndicatorsRanking>(GetArenaForAllocation());
    _impl_.mdindicatorsranking_ = p;
  }
  return _impl_.mdindicatorsranking_;
}
inline ::com::htsc::mdc::insight::model::ADIndicatorsRanking* MarketData::mutable_mdindicatorsranking() {
  ::com::htsc::mdc::insight::model::ADIndicatorsRanking* _msg = _internal_mutable_mdindicatorsranking();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdIndicatorsRanking)
  return _msg;
}
inline void MarketData::set_allocated_mdindicatorsranking(::com::htsc::mdc::insight::model::ADIndicatorsRanking* mdindicatorsranking) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdindicatorsranking_);
  }
  if (mdindicatorsranking) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdindicatorsranking));
    if (message_arena != submessage_arena) {
      mdindicatorsranking = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdindicatorsranking, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdindicatorsranking_ = mdindicatorsranking;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdIndicatorsRanking)
}

// .com.htsc.mdc.insight.model.DynamicPacket dynamicPacket = 25;
inline bool MarketData::_internal_has_dynamicpacket() const {
  return this != internal_default_instance() && _impl_.dynamicpacket_ != nullptr;
}
inline bool MarketData::has_dynamicpacket() const {
  return _internal_has_dynamicpacket();
}
inline const ::com::htsc::mdc::insight::model::DynamicPacket& MarketData::_internal_dynamicpacket() const {
  const ::com::htsc::mdc::insight::model::DynamicPacket* p = _impl_.dynamicpacket_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::DynamicPacket&>(
      ::com::htsc::mdc::insight::model::_DynamicPacket_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::DynamicPacket& MarketData::dynamicpacket() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.dynamicPacket)
  return _internal_dynamicpacket();
}
inline void MarketData::unsafe_arena_set_allocated_dynamicpacket(
    ::com::htsc::mdc::insight::model::DynamicPacket* dynamicpacket) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.dynamicpacket_);
  }
  _impl_.dynamicpacket_ = dynamicpacket;
  if (dynamicpacket) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.dynamicPacket)
}
inline ::com::htsc::mdc::insight::model::DynamicPacket* MarketData::release_dynamicpacket() {
  
  ::com::htsc::mdc::insight::model::DynamicPacket* temp = _impl_.dynamicpacket_;
  _impl_.dynamicpacket_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::DynamicPacket* MarketData::unsafe_arena_release_dynamicpacket() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.dynamicPacket)
  
  ::com::htsc::mdc::insight::model::DynamicPacket* temp = _impl_.dynamicpacket_;
  _impl_.dynamicpacket_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::DynamicPacket* MarketData::_internal_mutable_dynamicpacket() {
  
  if (_impl_.dynamicpacket_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::DynamicPacket>(GetArenaForAllocation());
    _impl_.dynamicpacket_ = p;
  }
  return _impl_.dynamicpacket_;
}
inline ::com::htsc::mdc::insight::model::DynamicPacket* MarketData::mutable_dynamicpacket() {
  ::com::htsc::mdc::insight::model::DynamicPacket* _msg = _internal_mutable_dynamicpacket();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.dynamicPacket)
  return _msg;
}
inline void MarketData::set_allocated_dynamicpacket(::com::htsc::mdc::insight::model::DynamicPacket* dynamicpacket) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.dynamicpacket_);
  }
  if (dynamicpacket) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dynamicpacket));
    if (message_arena != submessage_arena) {
      dynamicpacket = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dynamicpacket, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.dynamicpacket_ = dynamicpacket;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.dynamicPacket)
}

// .com.htsc.mdc.insight.model.ADVolumeByPrice mdVolumeByPrice = 26;
inline bool MarketData::_internal_has_mdvolumebyprice() const {
  return this != internal_default_instance() && _impl_.mdvolumebyprice_ != nullptr;
}
inline bool MarketData::has_mdvolumebyprice() const {
  return _internal_has_mdvolumebyprice();
}
inline const ::com::htsc::mdc::insight::model::ADVolumeByPrice& MarketData::_internal_mdvolumebyprice() const {
  const ::com::htsc::mdc::insight::model::ADVolumeByPrice* p = _impl_.mdvolumebyprice_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::ADVolumeByPrice&>(
      ::com::htsc::mdc::insight::model::_ADVolumeByPrice_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::ADVolumeByPrice& MarketData::mdvolumebyprice() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdVolumeByPrice)
  return _internal_mdvolumebyprice();
}
inline void MarketData::unsafe_arena_set_allocated_mdvolumebyprice(
    ::com::htsc::mdc::insight::model::ADVolumeByPrice* mdvolumebyprice) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdvolumebyprice_);
  }
  _impl_.mdvolumebyprice_ = mdvolumebyprice;
  if (mdvolumebyprice) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdVolumeByPrice)
}
inline ::com::htsc::mdc::insight::model::ADVolumeByPrice* MarketData::release_mdvolumebyprice() {
  
  ::com::htsc::mdc::insight::model::ADVolumeByPrice* temp = _impl_.mdvolumebyprice_;
  _impl_.mdvolumebyprice_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::ADVolumeByPrice* MarketData::unsafe_arena_release_mdvolumebyprice() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdVolumeByPrice)
  
  ::com::htsc::mdc::insight::model::ADVolumeByPrice* temp = _impl_.mdvolumebyprice_;
  _impl_.mdvolumebyprice_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::ADVolumeByPrice* MarketData::_internal_mutable_mdvolumebyprice() {
  
  if (_impl_.mdvolumebyprice_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::ADVolumeByPrice>(GetArenaForAllocation());
    _impl_.mdvolumebyprice_ = p;
  }
  return _impl_.mdvolumebyprice_;
}
inline ::com::htsc::mdc::insight::model::ADVolumeByPrice* MarketData::mutable_mdvolumebyprice() {
  ::com::htsc::mdc::insight::model::ADVolumeByPrice* _msg = _internal_mutable_mdvolumebyprice();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdVolumeByPrice)
  return _msg;
}
inline void MarketData::set_allocated_mdvolumebyprice(::com::htsc::mdc::insight::model::ADVolumeByPrice* mdvolumebyprice) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdvolumebyprice_);
  }
  if (mdvolumebyprice) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdvolumebyprice));
    if (message_arena != submessage_arena) {
      mdvolumebyprice = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdvolumebyprice, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdvolumebyprice_ = mdvolumebyprice;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdVolumeByPrice)
}

// .com.htsc.mdc.insight.model.ADFundFlowAnalysis mdFundFlowAnalysis = 27;
inline bool MarketData::_internal_has_mdfundflowanalysis() const {
  return this != internal_default_instance() && _impl_.mdfundflowanalysis_ != nullptr;
}
inline bool MarketData::has_mdfundflowanalysis() const {
  return _internal_has_mdfundflowanalysis();
}
inline const ::com::htsc::mdc::insight::model::ADFundFlowAnalysis& MarketData::_internal_mdfundflowanalysis() const {
  const ::com::htsc::mdc::insight::model::ADFundFlowAnalysis* p = _impl_.mdfundflowanalysis_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::ADFundFlowAnalysis&>(
      ::com::htsc::mdc::insight::model::_ADFundFlowAnalysis_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::ADFundFlowAnalysis& MarketData::mdfundflowanalysis() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdFundFlowAnalysis)
  return _internal_mdfundflowanalysis();
}
inline void MarketData::unsafe_arena_set_allocated_mdfundflowanalysis(
    ::com::htsc::mdc::insight::model::ADFundFlowAnalysis* mdfundflowanalysis) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdfundflowanalysis_);
  }
  _impl_.mdfundflowanalysis_ = mdfundflowanalysis;
  if (mdfundflowanalysis) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdFundFlowAnalysis)
}
inline ::com::htsc::mdc::insight::model::ADFundFlowAnalysis* MarketData::release_mdfundflowanalysis() {
  
  ::com::htsc::mdc::insight::model::ADFundFlowAnalysis* temp = _impl_.mdfundflowanalysis_;
  _impl_.mdfundflowanalysis_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::ADFundFlowAnalysis* MarketData::unsafe_arena_release_mdfundflowanalysis() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdFundFlowAnalysis)
  
  ::com::htsc::mdc::insight::model::ADFundFlowAnalysis* temp = _impl_.mdfundflowanalysis_;
  _impl_.mdfundflowanalysis_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::ADFundFlowAnalysis* MarketData::_internal_mutable_mdfundflowanalysis() {
  
  if (_impl_.mdfundflowanalysis_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::ADFundFlowAnalysis>(GetArenaForAllocation());
    _impl_.mdfundflowanalysis_ = p;
  }
  return _impl_.mdfundflowanalysis_;
}
inline ::com::htsc::mdc::insight::model::ADFundFlowAnalysis* MarketData::mutable_mdfundflowanalysis() {
  ::com::htsc::mdc::insight::model::ADFundFlowAnalysis* _msg = _internal_mutable_mdfundflowanalysis();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdFundFlowAnalysis)
  return _msg;
}
inline void MarketData::set_allocated_mdfundflowanalysis(::com::htsc::mdc::insight::model::ADFundFlowAnalysis* mdfundflowanalysis) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdfundflowanalysis_);
  }
  if (mdfundflowanalysis) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdfundflowanalysis));
    if (message_arena != submessage_arena) {
      mdfundflowanalysis = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdfundflowanalysis, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdfundflowanalysis_ = mdfundflowanalysis;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdFundFlowAnalysis)
}

// .com.htsc.mdc.insight.model.MDForex mdForex = 28;
inline bool MarketData::_internal_has_mdforex() const {
  return this != internal_default_instance() && _impl_.mdforex_ != nullptr;
}
inline bool MarketData::has_mdforex() const {
  return _internal_has_mdforex();
}
inline const ::com::htsc::mdc::insight::model::MDForex& MarketData::_internal_mdforex() const {
  const ::com::htsc::mdc::insight::model::MDForex* p = _impl_.mdforex_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDForex&>(
      ::com::htsc::mdc::insight::model::_MDForex_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDForex& MarketData::mdforex() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdForex)
  return _internal_mdforex();
}
inline void MarketData::unsafe_arena_set_allocated_mdforex(
    ::com::htsc::mdc::insight::model::MDForex* mdforex) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdforex_);
  }
  _impl_.mdforex_ = mdforex;
  if (mdforex) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdForex)
}
inline ::com::htsc::mdc::insight::model::MDForex* MarketData::release_mdforex() {
  
  ::com::htsc::mdc::insight::model::MDForex* temp = _impl_.mdforex_;
  _impl_.mdforex_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDForex* MarketData::unsafe_arena_release_mdforex() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdForex)
  
  ::com::htsc::mdc::insight::model::MDForex* temp = _impl_.mdforex_;
  _impl_.mdforex_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDForex* MarketData::_internal_mutable_mdforex() {
  
  if (_impl_.mdforex_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDForex>(GetArenaForAllocation());
    _impl_.mdforex_ = p;
  }
  return _impl_.mdforex_;
}
inline ::com::htsc::mdc::insight::model::MDForex* MarketData::mutable_mdforex() {
  ::com::htsc::mdc::insight::model::MDForex* _msg = _internal_mutable_mdforex();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdForex)
  return _msg;
}
inline void MarketData::set_allocated_mdforex(::com::htsc::mdc::insight::model::MDForex* mdforex) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdforex_);
  }
  if (mdforex) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdforex));
    if (message_arena != submessage_arena) {
      mdforex = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdforex, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdforex_ = mdforex;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdForex)
}

// .com.htsc.mdc.insight.model.MDSpot mdSpot = 29;
inline bool MarketData::_internal_has_mdspot() const {
  return this != internal_default_instance() && _impl_.mdspot_ != nullptr;
}
inline bool MarketData::has_mdspot() const {
  return _internal_has_mdspot();
}
inline const ::com::htsc::mdc::insight::model::MDSpot& MarketData::_internal_mdspot() const {
  const ::com::htsc::mdc::insight::model::MDSpot* p = _impl_.mdspot_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDSpot&>(
      ::com::htsc::mdc::insight::model::_MDSpot_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDSpot& MarketData::mdspot() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdSpot)
  return _internal_mdspot();
}
inline void MarketData::unsafe_arena_set_allocated_mdspot(
    ::com::htsc::mdc::insight::model::MDSpot* mdspot) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdspot_);
  }
  _impl_.mdspot_ = mdspot;
  if (mdspot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdSpot)
}
inline ::com::htsc::mdc::insight::model::MDSpot* MarketData::release_mdspot() {
  
  ::com::htsc::mdc::insight::model::MDSpot* temp = _impl_.mdspot_;
  _impl_.mdspot_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDSpot* MarketData::unsafe_arena_release_mdspot() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdSpot)
  
  ::com::htsc::mdc::insight::model::MDSpot* temp = _impl_.mdspot_;
  _impl_.mdspot_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDSpot* MarketData::_internal_mutable_mdspot() {
  
  if (_impl_.mdspot_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDSpot>(GetArenaForAllocation());
    _impl_.mdspot_ = p;
  }
  return _impl_.mdspot_;
}
inline ::com::htsc::mdc::insight::model::MDSpot* MarketData::mutable_mdspot() {
  ::com::htsc::mdc::insight::model::MDSpot* _msg = _internal_mutable_mdspot();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdSpot)
  return _msg;
}
inline void MarketData::set_allocated_mdspot(::com::htsc::mdc::insight::model::MDSpot* mdspot) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdspot_);
  }
  if (mdspot) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdspot));
    if (message_arena != submessage_arena) {
      mdspot = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdspot, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdspot_ = mdspot;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdSpot)
}

// .com.htsc.mdc.insight.model.MDRate mdRate = 30;
inline bool MarketData::_internal_has_mdrate() const {
  return this != internal_default_instance() && _impl_.mdrate_ != nullptr;
}
inline bool MarketData::has_mdrate() const {
  return _internal_has_mdrate();
}
inline const ::com::htsc::mdc::insight::model::MDRate& MarketData::_internal_mdrate() const {
  const ::com::htsc::mdc::insight::model::MDRate* p = _impl_.mdrate_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDRate&>(
      ::com::htsc::mdc::insight::model::_MDRate_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDRate& MarketData::mdrate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdRate)
  return _internal_mdrate();
}
inline void MarketData::unsafe_arena_set_allocated_mdrate(
    ::com::htsc::mdc::insight::model::MDRate* mdrate) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdrate_);
  }
  _impl_.mdrate_ = mdrate;
  if (mdrate) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdRate)
}
inline ::com::htsc::mdc::insight::model::MDRate* MarketData::release_mdrate() {
  
  ::com::htsc::mdc::insight::model::MDRate* temp = _impl_.mdrate_;
  _impl_.mdrate_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDRate* MarketData::unsafe_arena_release_mdrate() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdRate)
  
  ::com::htsc::mdc::insight::model::MDRate* temp = _impl_.mdrate_;
  _impl_.mdrate_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDRate* MarketData::_internal_mutable_mdrate() {
  
  if (_impl_.mdrate_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDRate>(GetArenaForAllocation());
    _impl_.mdrate_ = p;
  }
  return _impl_.mdrate_;
}
inline ::com::htsc::mdc::insight::model::MDRate* MarketData::mutable_mdrate() {
  ::com::htsc::mdc::insight::model::MDRate* _msg = _internal_mutable_mdrate();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdRate)
  return _msg;
}
inline void MarketData::set_allocated_mdrate(::com::htsc::mdc::insight::model::MDRate* mdrate) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdrate_);
  }
  if (mdrate) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdrate));
    if (message_arena != submessage_arena) {
      mdrate = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdrate, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdrate_ = mdrate;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdRate)
}

// .com.htsc.mdc.insight.model.ADOrderbookSnapshot orderbookSnapshot = 31;
inline bool MarketData::_internal_has_orderbooksnapshot() const {
  return this != internal_default_instance() && _impl_.orderbooksnapshot_ != nullptr;
}
inline bool MarketData::has_orderbooksnapshot() const {
  return _internal_has_orderbooksnapshot();
}
inline const ::com::htsc::mdc::insight::model::ADOrderbookSnapshot& MarketData::_internal_orderbooksnapshot() const {
  const ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* p = _impl_.orderbooksnapshot_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::ADOrderbookSnapshot&>(
      ::com::htsc::mdc::insight::model::_ADOrderbookSnapshot_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::ADOrderbookSnapshot& MarketData::orderbooksnapshot() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.orderbookSnapshot)
  return _internal_orderbooksnapshot();
}
inline void MarketData::unsafe_arena_set_allocated_orderbooksnapshot(
    ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* orderbooksnapshot) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.orderbooksnapshot_);
  }
  _impl_.orderbooksnapshot_ = orderbooksnapshot;
  if (orderbooksnapshot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.orderbookSnapshot)
}
inline ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* MarketData::release_orderbooksnapshot() {
  
  ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* temp = _impl_.orderbooksnapshot_;
  _impl_.orderbooksnapshot_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* MarketData::unsafe_arena_release_orderbooksnapshot() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.orderbookSnapshot)
  
  ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* temp = _impl_.orderbooksnapshot_;
  _impl_.orderbooksnapshot_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* MarketData::_internal_mutable_orderbooksnapshot() {
  
  if (_impl_.orderbooksnapshot_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::ADOrderbookSnapshot>(GetArenaForAllocation());
    _impl_.orderbooksnapshot_ = p;
  }
  return _impl_.orderbooksnapshot_;
}
inline ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* MarketData::mutable_orderbooksnapshot() {
  ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* _msg = _internal_mutable_orderbooksnapshot();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.orderbookSnapshot)
  return _msg;
}
inline void MarketData::set_allocated_orderbooksnapshot(::com::htsc::mdc::insight::model::ADOrderbookSnapshot* orderbooksnapshot) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.orderbooksnapshot_);
  }
  if (orderbooksnapshot) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(orderbooksnapshot));
    if (message_arena != submessage_arena) {
      orderbooksnapshot = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, orderbooksnapshot, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.orderbooksnapshot_ = orderbooksnapshot;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.orderbookSnapshot)
}

// .com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick orderbookSnapshotWithTick = 32;
inline bool MarketData::_internal_has_orderbooksnapshotwithtick() const {
  return this != internal_default_instance() && _impl_.orderbooksnapshotwithtick_ != nullptr;
}
inline bool MarketData::has_orderbooksnapshotwithtick() const {
  return _internal_has_orderbooksnapshotwithtick();
}
inline const ::com::htsc::mdc::insight::model::ADOrderbookSnapshotWithTick& MarketData::_internal_orderbooksnapshotwithtick() const {
  const ::com::htsc::mdc::insight::model::ADOrderbookSnapshotWithTick* p = _impl_.orderbooksnapshotwithtick_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::ADOrderbookSnapshotWithTick&>(
      ::com::htsc::mdc::insight::model::_ADOrderbookSnapshotWithTick_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::ADOrderbookSnapshotWithTick& MarketData::orderbooksnapshotwithtick() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.orderbookSnapshotWithTick)
  return _internal_orderbooksnapshotwithtick();
}
inline void MarketData::unsafe_arena_set_allocated_orderbooksnapshotwithtick(
    ::com::htsc::mdc::insight::model::ADOrderbookSnapshotWithTick* orderbooksnapshotwithtick) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.orderbooksnapshotwithtick_);
  }
  _impl_.orderbooksnapshotwithtick_ = orderbooksnapshotwithtick;
  if (orderbooksnapshotwithtick) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.orderbookSnapshotWithTick)
}
inline ::com::htsc::mdc::insight::model::ADOrderbookSnapshotWithTick* MarketData::release_orderbooksnapshotwithtick() {
  
  ::com::htsc::mdc::insight::model::ADOrderbookSnapshotWithTick* temp = _impl_.orderbooksnapshotwithtick_;
  _impl_.orderbooksnapshotwithtick_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::ADOrderbookSnapshotWithTick* MarketData::unsafe_arena_release_orderbooksnapshotwithtick() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.orderbookSnapshotWithTick)
  
  ::com::htsc::mdc::insight::model::ADOrderbookSnapshotWithTick* temp = _impl_.orderbooksnapshotwithtick_;
  _impl_.orderbooksnapshotwithtick_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::ADOrderbookSnapshotWithTick* MarketData::_internal_mutable_orderbooksnapshotwithtick() {
  
  if (_impl_.orderbooksnapshotwithtick_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::ADOrderbookSnapshotWithTick>(GetArenaForAllocation());
    _impl_.orderbooksnapshotwithtick_ = p;
  }
  return _impl_.orderbooksnapshotwithtick_;
}
inline ::com::htsc::mdc::insight::model::ADOrderbookSnapshotWithTick* MarketData::mutable_orderbooksnapshotwithtick() {
  ::com::htsc::mdc::insight::model::ADOrderbookSnapshotWithTick* _msg = _internal_mutable_orderbooksnapshotwithtick();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.orderbookSnapshotWithTick)
  return _msg;
}
inline void MarketData::set_allocated_orderbooksnapshotwithtick(::com::htsc::mdc::insight::model::ADOrderbookSnapshotWithTick* orderbooksnapshotwithtick) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.orderbooksnapshotwithtick_);
  }
  if (orderbooksnapshotwithtick) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(orderbooksnapshotwithtick));
    if (message_arena != submessage_arena) {
      orderbooksnapshotwithtick = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, orderbooksnapshotwithtick, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.orderbooksnapshotwithtick_ = orderbooksnapshotwithtick;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.orderbookSnapshotWithTick)
}

// .com.htsc.mdc.insight.model.MDQuote mdQuote = 33;
inline bool MarketData::_internal_has_mdquote() const {
  return this != internal_default_instance() && _impl_.mdquote_ != nullptr;
}
inline bool MarketData::has_mdquote() const {
  return _internal_has_mdquote();
}
inline const ::com::htsc::mdc::insight::model::MDQuote& MarketData::_internal_mdquote() const {
  const ::com::htsc::mdc::insight::model::MDQuote* p = _impl_.mdquote_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDQuote&>(
      ::com::htsc::mdc::insight::model::_MDQuote_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDQuote& MarketData::mdquote() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdQuote)
  return _internal_mdquote();
}
inline void MarketData::unsafe_arena_set_allocated_mdquote(
    ::com::htsc::mdc::insight::model::MDQuote* mdquote) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdquote_);
  }
  _impl_.mdquote_ = mdquote;
  if (mdquote) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdQuote)
}
inline ::com::htsc::mdc::insight::model::MDQuote* MarketData::release_mdquote() {
  
  ::com::htsc::mdc::insight::model::MDQuote* temp = _impl_.mdquote_;
  _impl_.mdquote_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDQuote* MarketData::unsafe_arena_release_mdquote() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdQuote)
  
  ::com::htsc::mdc::insight::model::MDQuote* temp = _impl_.mdquote_;
  _impl_.mdquote_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDQuote* MarketData::_internal_mutable_mdquote() {
  
  if (_impl_.mdquote_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDQuote>(GetArenaForAllocation());
    _impl_.mdquote_ = p;
  }
  return _impl_.mdquote_;
}
inline ::com::htsc::mdc::insight::model::MDQuote* MarketData::mutable_mdquote() {
  ::com::htsc::mdc::insight::model::MDQuote* _msg = _internal_mutable_mdquote();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdQuote)
  return _msg;
}
inline void MarketData::set_allocated_mdquote(::com::htsc::mdc::insight::model::MDQuote* mdquote) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdquote_);
  }
  if (mdquote) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdquote));
    if (message_arena != submessage_arena) {
      mdquote = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdquote, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdquote_ = mdquote;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdQuote)
}

// .com.htsc.mdc.insight.model.MDETFBasicInfo mdETFBasicInfo = 34;
inline bool MarketData::_internal_has_mdetfbasicinfo() const {
  return this != internal_default_instance() && _impl_.mdetfbasicinfo_ != nullptr;
}
inline bool MarketData::has_mdetfbasicinfo() const {
  return _internal_has_mdetfbasicinfo();
}
inline const ::com::htsc::mdc::insight::model::MDETFBasicInfo& MarketData::_internal_mdetfbasicinfo() const {
  const ::com::htsc::mdc::insight::model::MDETFBasicInfo* p = _impl_.mdetfbasicinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDETFBasicInfo&>(
      ::com::htsc::mdc::insight::model::_MDETFBasicInfo_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDETFBasicInfo& MarketData::mdetfbasicinfo() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdETFBasicInfo)
  return _internal_mdetfbasicinfo();
}
inline void MarketData::unsafe_arena_set_allocated_mdetfbasicinfo(
    ::com::htsc::mdc::insight::model::MDETFBasicInfo* mdetfbasicinfo) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdetfbasicinfo_);
  }
  _impl_.mdetfbasicinfo_ = mdetfbasicinfo;
  if (mdetfbasicinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdETFBasicInfo)
}
inline ::com::htsc::mdc::insight::model::MDETFBasicInfo* MarketData::release_mdetfbasicinfo() {
  
  ::com::htsc::mdc::insight::model::MDETFBasicInfo* temp = _impl_.mdetfbasicinfo_;
  _impl_.mdetfbasicinfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDETFBasicInfo* MarketData::unsafe_arena_release_mdetfbasicinfo() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdETFBasicInfo)
  
  ::com::htsc::mdc::insight::model::MDETFBasicInfo* temp = _impl_.mdetfbasicinfo_;
  _impl_.mdetfbasicinfo_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDETFBasicInfo* MarketData::_internal_mutable_mdetfbasicinfo() {
  
  if (_impl_.mdetfbasicinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDETFBasicInfo>(GetArenaForAllocation());
    _impl_.mdetfbasicinfo_ = p;
  }
  return _impl_.mdetfbasicinfo_;
}
inline ::com::htsc::mdc::insight::model::MDETFBasicInfo* MarketData::mutable_mdetfbasicinfo() {
  ::com::htsc::mdc::insight::model::MDETFBasicInfo* _msg = _internal_mutable_mdetfbasicinfo();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdETFBasicInfo)
  return _msg;
}
inline void MarketData::set_allocated_mdetfbasicinfo(::com::htsc::mdc::insight::model::MDETFBasicInfo* mdetfbasicinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdetfbasicinfo_);
  }
  if (mdetfbasicinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdetfbasicinfo));
    if (message_arena != submessage_arena) {
      mdetfbasicinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdetfbasicinfo, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdetfbasicinfo_ = mdetfbasicinfo;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdETFBasicInfo)
}

// .com.htsc.mdc.insight.model.MDFIQuote mdFIQuote = 35;
inline bool MarketData::_internal_has_mdfiquote() const {
  return this != internal_default_instance() && _impl_.mdfiquote_ != nullptr;
}
inline bool MarketData::has_mdfiquote() const {
  return _internal_has_mdfiquote();
}
inline const ::com::htsc::mdc::insight::model::MDFIQuote& MarketData::_internal_mdfiquote() const {
  const ::com::htsc::mdc::insight::model::MDFIQuote* p = _impl_.mdfiquote_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDFIQuote&>(
      ::com::htsc::mdc::insight::model::_MDFIQuote_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDFIQuote& MarketData::mdfiquote() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdFIQuote)
  return _internal_mdfiquote();
}
inline void MarketData::unsafe_arena_set_allocated_mdfiquote(
    ::com::htsc::mdc::insight::model::MDFIQuote* mdfiquote) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdfiquote_);
  }
  _impl_.mdfiquote_ = mdfiquote;
  if (mdfiquote) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdFIQuote)
}
inline ::com::htsc::mdc::insight::model::MDFIQuote* MarketData::release_mdfiquote() {
  
  ::com::htsc::mdc::insight::model::MDFIQuote* temp = _impl_.mdfiquote_;
  _impl_.mdfiquote_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDFIQuote* MarketData::unsafe_arena_release_mdfiquote() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdFIQuote)
  
  ::com::htsc::mdc::insight::model::MDFIQuote* temp = _impl_.mdfiquote_;
  _impl_.mdfiquote_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDFIQuote* MarketData::_internal_mutable_mdfiquote() {
  
  if (_impl_.mdfiquote_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDFIQuote>(GetArenaForAllocation());
    _impl_.mdfiquote_ = p;
  }
  return _impl_.mdfiquote_;
}
inline ::com::htsc::mdc::insight::model::MDFIQuote* MarketData::mutable_mdfiquote() {
  ::com::htsc::mdc::insight::model::MDFIQuote* _msg = _internal_mutable_mdfiquote();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdFIQuote)
  return _msg;
}
inline void MarketData::set_allocated_mdfiquote(::com::htsc::mdc::insight::model::MDFIQuote* mdfiquote) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdfiquote_);
  }
  if (mdfiquote) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdfiquote));
    if (message_arena != submessage_arena) {
      mdfiquote = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdfiquote, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdfiquote_ = mdfiquote;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdFIQuote)
}

// .com.htsc.mdc.insight.model.ADChipDistribution mdChipDistribution = 36;
inline bool MarketData::_internal_has_mdchipdistribution() const {
  return this != internal_default_instance() && _impl_.mdchipdistribution_ != nullptr;
}
inline bool MarketData::has_mdchipdistribution() const {
  return _internal_has_mdchipdistribution();
}
inline const ::com::htsc::mdc::insight::model::ADChipDistribution& MarketData::_internal_mdchipdistribution() const {
  const ::com::htsc::mdc::insight::model::ADChipDistribution* p = _impl_.mdchipdistribution_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::ADChipDistribution&>(
      ::com::htsc::mdc::insight::model::_ADChipDistribution_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::ADChipDistribution& MarketData::mdchipdistribution() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdChipDistribution)
  return _internal_mdchipdistribution();
}
inline void MarketData::unsafe_arena_set_allocated_mdchipdistribution(
    ::com::htsc::mdc::insight::model::ADChipDistribution* mdchipdistribution) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdchipdistribution_);
  }
  _impl_.mdchipdistribution_ = mdchipdistribution;
  if (mdchipdistribution) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdChipDistribution)
}
inline ::com::htsc::mdc::insight::model::ADChipDistribution* MarketData::release_mdchipdistribution() {
  
  ::com::htsc::mdc::insight::model::ADChipDistribution* temp = _impl_.mdchipdistribution_;
  _impl_.mdchipdistribution_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::ADChipDistribution* MarketData::unsafe_arena_release_mdchipdistribution() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdChipDistribution)
  
  ::com::htsc::mdc::insight::model::ADChipDistribution* temp = _impl_.mdchipdistribution_;
  _impl_.mdchipdistribution_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::ADChipDistribution* MarketData::_internal_mutable_mdchipdistribution() {
  
  if (_impl_.mdchipdistribution_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::ADChipDistribution>(GetArenaForAllocation());
    _impl_.mdchipdistribution_ = p;
  }
  return _impl_.mdchipdistribution_;
}
inline ::com::htsc::mdc::insight::model::ADChipDistribution* MarketData::mutable_mdchipdistribution() {
  ::com::htsc::mdc::insight::model::ADChipDistribution* _msg = _internal_mutable_mdchipdistribution();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdChipDistribution)
  return _msg;
}
inline void MarketData::set_allocated_mdchipdistribution(::com::htsc::mdc::insight::model::ADChipDistribution* mdchipdistribution) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdchipdistribution_);
  }
  if (mdchipdistribution) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdchipdistribution));
    if (message_arena != submessage_arena) {
      mdchipdistribution = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdchipdistribution, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdchipdistribution_ = mdchipdistribution;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdChipDistribution)
}

// .com.htsc.mdc.insight.model.MDWarrant mdWarrant = 37;
inline bool MarketData::_internal_has_mdwarrant() const {
  return this != internal_default_instance() && _impl_.mdwarrant_ != nullptr;
}
inline bool MarketData::has_mdwarrant() const {
  return _internal_has_mdwarrant();
}
inline const ::com::htsc::mdc::insight::model::MDWarrant& MarketData::_internal_mdwarrant() const {
  const ::com::htsc::mdc::insight::model::MDWarrant* p = _impl_.mdwarrant_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDWarrant&>(
      ::com::htsc::mdc::insight::model::_MDWarrant_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDWarrant& MarketData::mdwarrant() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdWarrant)
  return _internal_mdwarrant();
}
inline void MarketData::unsafe_arena_set_allocated_mdwarrant(
    ::com::htsc::mdc::insight::model::MDWarrant* mdwarrant) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdwarrant_);
  }
  _impl_.mdwarrant_ = mdwarrant;
  if (mdwarrant) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdWarrant)
}
inline ::com::htsc::mdc::insight::model::MDWarrant* MarketData::release_mdwarrant() {
  
  ::com::htsc::mdc::insight::model::MDWarrant* temp = _impl_.mdwarrant_;
  _impl_.mdwarrant_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDWarrant* MarketData::unsafe_arena_release_mdwarrant() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdWarrant)
  
  ::com::htsc::mdc::insight::model::MDWarrant* temp = _impl_.mdwarrant_;
  _impl_.mdwarrant_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDWarrant* MarketData::_internal_mutable_mdwarrant() {
  
  if (_impl_.mdwarrant_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDWarrant>(GetArenaForAllocation());
    _impl_.mdwarrant_ = p;
  }
  return _impl_.mdwarrant_;
}
inline ::com::htsc::mdc::insight::model::MDWarrant* MarketData::mutable_mdwarrant() {
  ::com::htsc::mdc::insight::model::MDWarrant* _msg = _internal_mutable_mdwarrant();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdWarrant)
  return _msg;
}
inline void MarketData::set_allocated_mdwarrant(::com::htsc::mdc::insight::model::MDWarrant* mdwarrant) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdwarrant_);
  }
  if (mdwarrant) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdwarrant));
    if (message_arena != submessage_arena) {
      mdwarrant = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdwarrant, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdwarrant_ = mdwarrant;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdWarrant)
}

// .com.htsc.mdc.insight.model.MDSecurityLending mdSecurityLending = 38;
inline bool MarketData::_internal_has_mdsecuritylending() const {
  return this != internal_default_instance() && _impl_.mdsecuritylending_ != nullptr;
}
inline bool MarketData::has_mdsecuritylending() const {
  return _internal_has_mdsecuritylending();
}
inline const ::com::htsc::mdc::insight::model::MDSecurityLending& MarketData::_internal_mdsecuritylending() const {
  const ::com::htsc::mdc::insight::model::MDSecurityLending* p = _impl_.mdsecuritylending_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDSecurityLending&>(
      ::com::htsc::mdc::insight::model::_MDSecurityLending_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDSecurityLending& MarketData::mdsecuritylending() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdSecurityLending)
  return _internal_mdsecuritylending();
}
inline void MarketData::unsafe_arena_set_allocated_mdsecuritylending(
    ::com::htsc::mdc::insight::model::MDSecurityLending* mdsecuritylending) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdsecuritylending_);
  }
  _impl_.mdsecuritylending_ = mdsecuritylending;
  if (mdsecuritylending) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdSecurityLending)
}
inline ::com::htsc::mdc::insight::model::MDSecurityLending* MarketData::release_mdsecuritylending() {
  
  ::com::htsc::mdc::insight::model::MDSecurityLending* temp = _impl_.mdsecuritylending_;
  _impl_.mdsecuritylending_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDSecurityLending* MarketData::unsafe_arena_release_mdsecuritylending() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdSecurityLending)
  
  ::com::htsc::mdc::insight::model::MDSecurityLending* temp = _impl_.mdsecuritylending_;
  _impl_.mdsecuritylending_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDSecurityLending* MarketData::_internal_mutable_mdsecuritylending() {
  
  if (_impl_.mdsecuritylending_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDSecurityLending>(GetArenaForAllocation());
    _impl_.mdsecuritylending_ = p;
  }
  return _impl_.mdsecuritylending_;
}
inline ::com::htsc::mdc::insight::model::MDSecurityLending* MarketData::mutable_mdsecuritylending() {
  ::com::htsc::mdc::insight::model::MDSecurityLending* _msg = _internal_mutable_mdsecuritylending();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdSecurityLending)
  return _msg;
}
inline void MarketData::set_allocated_mdsecuritylending(::com::htsc::mdc::insight::model::MDSecurityLending* mdsecuritylending) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdsecuritylending_);
  }
  if (mdsecuritylending) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdsecuritylending));
    if (message_arena != submessage_arena) {
      mdsecuritylending = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdsecuritylending, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdsecuritylending_ = mdsecuritylending;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdSecurityLending)
}

// .com.htsc.mdc.insight.model.ADNews mdNews = 39;
inline bool MarketData::_internal_has_mdnews() const {
  return this != internal_default_instance() && _impl_.mdnews_ != nullptr;
}
inline bool MarketData::has_mdnews() const {
  return _internal_has_mdnews();
}
inline const ::com::htsc::mdc::insight::model::ADNews& MarketData::_internal_mdnews() const {
  const ::com::htsc::mdc::insight::model::ADNews* p = _impl_.mdnews_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::ADNews&>(
      ::com::htsc::mdc::insight::model::_ADNews_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::ADNews& MarketData::mdnews() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdNews)
  return _internal_mdnews();
}
inline void MarketData::unsafe_arena_set_allocated_mdnews(
    ::com::htsc::mdc::insight::model::ADNews* mdnews) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdnews_);
  }
  _impl_.mdnews_ = mdnews;
  if (mdnews) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdNews)
}
inline ::com::htsc::mdc::insight::model::ADNews* MarketData::release_mdnews() {
  
  ::com::htsc::mdc::insight::model::ADNews* temp = _impl_.mdnews_;
  _impl_.mdnews_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::ADNews* MarketData::unsafe_arena_release_mdnews() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdNews)
  
  ::com::htsc::mdc::insight::model::ADNews* temp = _impl_.mdnews_;
  _impl_.mdnews_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::ADNews* MarketData::_internal_mutable_mdnews() {
  
  if (_impl_.mdnews_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::ADNews>(GetArenaForAllocation());
    _impl_.mdnews_ = p;
  }
  return _impl_.mdnews_;
}
inline ::com::htsc::mdc::insight::model::ADNews* MarketData::mutable_mdnews() {
  ::com::htsc::mdc::insight::model::ADNews* _msg = _internal_mutable_mdnews();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdNews)
  return _msg;
}
inline void MarketData::set_allocated_mdnews(::com::htsc::mdc::insight::model::ADNews* mdnews) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdnews_);
  }
  if (mdnews) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdnews));
    if (message_arena != submessage_arena) {
      mdnews = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdnews, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdnews_ = mdnews;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdNews)
}

// .com.htsc.mdc.insight.model.ADStaringResult mdStaringResult = 40;
inline bool MarketData::_internal_has_mdstaringresult() const {
  return this != internal_default_instance() && _impl_.mdstaringresult_ != nullptr;
}
inline bool MarketData::has_mdstaringresult() const {
  return _internal_has_mdstaringresult();
}
inline const ::com::htsc::mdc::insight::model::ADStaringResult& MarketData::_internal_mdstaringresult() const {
  const ::com::htsc::mdc::insight::model::ADStaringResult* p = _impl_.mdstaringresult_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::ADStaringResult&>(
      ::com::htsc::mdc::insight::model::_ADStaringResult_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::ADStaringResult& MarketData::mdstaringresult() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdStaringResult)
  return _internal_mdstaringresult();
}
inline void MarketData::unsafe_arena_set_allocated_mdstaringresult(
    ::com::htsc::mdc::insight::model::ADStaringResult* mdstaringresult) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdstaringresult_);
  }
  _impl_.mdstaringresult_ = mdstaringresult;
  if (mdstaringresult) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdStaringResult)
}
inline ::com::htsc::mdc::insight::model::ADStaringResult* MarketData::release_mdstaringresult() {
  
  ::com::htsc::mdc::insight::model::ADStaringResult* temp = _impl_.mdstaringresult_;
  _impl_.mdstaringresult_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::ADStaringResult* MarketData::unsafe_arena_release_mdstaringresult() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdStaringResult)
  
  ::com::htsc::mdc::insight::model::ADStaringResult* temp = _impl_.mdstaringresult_;
  _impl_.mdstaringresult_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::ADStaringResult* MarketData::_internal_mutable_mdstaringresult() {
  
  if (_impl_.mdstaringresult_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::ADStaringResult>(GetArenaForAllocation());
    _impl_.mdstaringresult_ = p;
  }
  return _impl_.mdstaringresult_;
}
inline ::com::htsc::mdc::insight::model::ADStaringResult* MarketData::mutable_mdstaringresult() {
  ::com::htsc::mdc::insight::model::ADStaringResult* _msg = _internal_mutable_mdstaringresult();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdStaringResult)
  return _msg;
}
inline void MarketData::set_allocated_mdstaringresult(::com::htsc::mdc::insight::model::ADStaringResult* mdstaringresult) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdstaringresult_);
  }
  if (mdstaringresult) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdstaringresult));
    if (message_arena != submessage_arena) {
      mdstaringresult = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdstaringresult, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdstaringresult_ = mdstaringresult;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdStaringResult)
}

// .com.htsc.mdc.insight.model.ADDerivedAnalysis mdDerivedAnalysis = 41;
inline bool MarketData::_internal_has_mdderivedanalysis() const {
  return this != internal_default_instance() && _impl_.mdderivedanalysis_ != nullptr;
}
inline bool MarketData::has_mdderivedanalysis() const {
  return _internal_has_mdderivedanalysis();
}
inline const ::com::htsc::mdc::insight::model::ADDerivedAnalysis& MarketData::_internal_mdderivedanalysis() const {
  const ::com::htsc::mdc::insight::model::ADDerivedAnalysis* p = _impl_.mdderivedanalysis_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::ADDerivedAnalysis&>(
      ::com::htsc::mdc::insight::model::_ADDerivedAnalysis_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::ADDerivedAnalysis& MarketData::mdderivedanalysis() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdDerivedAnalysis)
  return _internal_mdderivedanalysis();
}
inline void MarketData::unsafe_arena_set_allocated_mdderivedanalysis(
    ::com::htsc::mdc::insight::model::ADDerivedAnalysis* mdderivedanalysis) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdderivedanalysis_);
  }
  _impl_.mdderivedanalysis_ = mdderivedanalysis;
  if (mdderivedanalysis) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdDerivedAnalysis)
}
inline ::com::htsc::mdc::insight::model::ADDerivedAnalysis* MarketData::release_mdderivedanalysis() {
  
  ::com::htsc::mdc::insight::model::ADDerivedAnalysis* temp = _impl_.mdderivedanalysis_;
  _impl_.mdderivedanalysis_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::ADDerivedAnalysis* MarketData::unsafe_arena_release_mdderivedanalysis() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdDerivedAnalysis)
  
  ::com::htsc::mdc::insight::model::ADDerivedAnalysis* temp = _impl_.mdderivedanalysis_;
  _impl_.mdderivedanalysis_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::ADDerivedAnalysis* MarketData::_internal_mutable_mdderivedanalysis() {
  
  if (_impl_.mdderivedanalysis_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::ADDerivedAnalysis>(GetArenaForAllocation());
    _impl_.mdderivedanalysis_ = p;
  }
  return _impl_.mdderivedanalysis_;
}
inline ::com::htsc::mdc::insight::model::ADDerivedAnalysis* MarketData::mutable_mdderivedanalysis() {
  ::com::htsc::mdc::insight::model::ADDerivedAnalysis* _msg = _internal_mutable_mdderivedanalysis();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdDerivedAnalysis)
  return _msg;
}
inline void MarketData::set_allocated_mdderivedanalysis(::com::htsc::mdc::insight::model::ADDerivedAnalysis* mdderivedanalysis) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdderivedanalysis_);
  }
  if (mdderivedanalysis) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdderivedanalysis));
    if (message_arena != submessage_arena) {
      mdderivedanalysis = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdderivedanalysis, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdderivedanalysis_ = mdderivedanalysis;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdDerivedAnalysis)
}

// .com.htsc.mdc.insight.model.MDQBQuote mdQBQuote = 42;
inline bool MarketData::_internal_has_mdqbquote() const {
  return this != internal_default_instance() && _impl_.mdqbquote_ != nullptr;
}
inline bool MarketData::has_mdqbquote() const {
  return _internal_has_mdqbquote();
}
inline const ::com::htsc::mdc::insight::model::MDQBQuote& MarketData::_internal_mdqbquote() const {
  const ::com::htsc::mdc::insight::model::MDQBQuote* p = _impl_.mdqbquote_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDQBQuote&>(
      ::com::htsc::mdc::insight::model::_MDQBQuote_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDQBQuote& MarketData::mdqbquote() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdQBQuote)
  return _internal_mdqbquote();
}
inline void MarketData::unsafe_arena_set_allocated_mdqbquote(
    ::com::htsc::mdc::insight::model::MDQBQuote* mdqbquote) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdqbquote_);
  }
  _impl_.mdqbquote_ = mdqbquote;
  if (mdqbquote) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdQBQuote)
}
inline ::com::htsc::mdc::insight::model::MDQBQuote* MarketData::release_mdqbquote() {
  
  ::com::htsc::mdc::insight::model::MDQBQuote* temp = _impl_.mdqbquote_;
  _impl_.mdqbquote_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDQBQuote* MarketData::unsafe_arena_release_mdqbquote() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdQBQuote)
  
  ::com::htsc::mdc::insight::model::MDQBQuote* temp = _impl_.mdqbquote_;
  _impl_.mdqbquote_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDQBQuote* MarketData::_internal_mutable_mdqbquote() {
  
  if (_impl_.mdqbquote_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDQBQuote>(GetArenaForAllocation());
    _impl_.mdqbquote_ = p;
  }
  return _impl_.mdqbquote_;
}
inline ::com::htsc::mdc::insight::model::MDQBQuote* MarketData::mutable_mdqbquote() {
  ::com::htsc::mdc::insight::model::MDQBQuote* _msg = _internal_mutable_mdqbquote();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdQBQuote)
  return _msg;
}
inline void MarketData::set_allocated_mdqbquote(::com::htsc::mdc::insight::model::MDQBQuote* mdqbquote) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdqbquote_);
  }
  if (mdqbquote) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdqbquote));
    if (message_arena != submessage_arena) {
      mdqbquote = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdqbquote, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdqbquote_ = mdqbquote;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdQBQuote)
}

// .com.htsc.mdc.insight.model.MDQBTransaction mdQBTransaction = 43;
inline bool MarketData::_internal_has_mdqbtransaction() const {
  return this != internal_default_instance() && _impl_.mdqbtransaction_ != nullptr;
}
inline bool MarketData::has_mdqbtransaction() const {
  return _internal_has_mdqbtransaction();
}
inline const ::com::htsc::mdc::insight::model::MDQBTransaction& MarketData::_internal_mdqbtransaction() const {
  const ::com::htsc::mdc::insight::model::MDQBTransaction* p = _impl_.mdqbtransaction_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDQBTransaction&>(
      ::com::htsc::mdc::insight::model::_MDQBTransaction_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDQBTransaction& MarketData::mdqbtransaction() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdQBTransaction)
  return _internal_mdqbtransaction();
}
inline void MarketData::unsafe_arena_set_allocated_mdqbtransaction(
    ::com::htsc::mdc::insight::model::MDQBTransaction* mdqbtransaction) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdqbtransaction_);
  }
  _impl_.mdqbtransaction_ = mdqbtransaction;
  if (mdqbtransaction) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdQBTransaction)
}
inline ::com::htsc::mdc::insight::model::MDQBTransaction* MarketData::release_mdqbtransaction() {
  
  ::com::htsc::mdc::insight::model::MDQBTransaction* temp = _impl_.mdqbtransaction_;
  _impl_.mdqbtransaction_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDQBTransaction* MarketData::unsafe_arena_release_mdqbtransaction() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdQBTransaction)
  
  ::com::htsc::mdc::insight::model::MDQBTransaction* temp = _impl_.mdqbtransaction_;
  _impl_.mdqbtransaction_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDQBTransaction* MarketData::_internal_mutable_mdqbtransaction() {
  
  if (_impl_.mdqbtransaction_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDQBTransaction>(GetArenaForAllocation());
    _impl_.mdqbtransaction_ = p;
  }
  return _impl_.mdqbtransaction_;
}
inline ::com::htsc::mdc::insight::model::MDQBTransaction* MarketData::mutable_mdqbtransaction() {
  ::com::htsc::mdc::insight::model::MDQBTransaction* _msg = _internal_mutable_mdqbtransaction();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdQBTransaction)
  return _msg;
}
inline void MarketData::set_allocated_mdqbtransaction(::com::htsc::mdc::insight::model::MDQBTransaction* mdqbtransaction) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdqbtransaction_);
  }
  if (mdqbtransaction) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdqbtransaction));
    if (message_arena != submessage_arena) {
      mdqbtransaction = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdqbtransaction, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdqbtransaction_ = mdqbtransaction;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdQBTransaction)
}

// .com.htsc.mdc.insight.model.MDUSAOrder mdUSAOrder = 44;
inline bool MarketData::_internal_has_mdusaorder() const {
  return this != internal_default_instance() && _impl_.mdusaorder_ != nullptr;
}
inline bool MarketData::has_mdusaorder() const {
  return _internal_has_mdusaorder();
}
inline const ::com::htsc::mdc::insight::model::MDUSAOrder& MarketData::_internal_mdusaorder() const {
  const ::com::htsc::mdc::insight::model::MDUSAOrder* p = _impl_.mdusaorder_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDUSAOrder&>(
      ::com::htsc::mdc::insight::model::_MDUSAOrder_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDUSAOrder& MarketData::mdusaorder() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdUSAOrder)
  return _internal_mdusaorder();
}
inline void MarketData::unsafe_arena_set_allocated_mdusaorder(
    ::com::htsc::mdc::insight::model::MDUSAOrder* mdusaorder) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdusaorder_);
  }
  _impl_.mdusaorder_ = mdusaorder;
  if (mdusaorder) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdUSAOrder)
}
inline ::com::htsc::mdc::insight::model::MDUSAOrder* MarketData::release_mdusaorder() {
  
  ::com::htsc::mdc::insight::model::MDUSAOrder* temp = _impl_.mdusaorder_;
  _impl_.mdusaorder_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDUSAOrder* MarketData::unsafe_arena_release_mdusaorder() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdUSAOrder)
  
  ::com::htsc::mdc::insight::model::MDUSAOrder* temp = _impl_.mdusaorder_;
  _impl_.mdusaorder_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDUSAOrder* MarketData::_internal_mutable_mdusaorder() {
  
  if (_impl_.mdusaorder_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDUSAOrder>(GetArenaForAllocation());
    _impl_.mdusaorder_ = p;
  }
  return _impl_.mdusaorder_;
}
inline ::com::htsc::mdc::insight::model::MDUSAOrder* MarketData::mutable_mdusaorder() {
  ::com::htsc::mdc::insight::model::MDUSAOrder* _msg = _internal_mutable_mdusaorder();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdUSAOrder)
  return _msg;
}
inline void MarketData::set_allocated_mdusaorder(::com::htsc::mdc::insight::model::MDUSAOrder* mdusaorder) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdusaorder_);
  }
  if (mdusaorder) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdusaorder));
    if (message_arena != submessage_arena) {
      mdusaorder = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdusaorder, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdusaorder_ = mdusaorder;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdUSAOrder)
}

// .com.htsc.mdc.insight.model.MDUSATransaction mdUSATransaction = 45;
inline bool MarketData::_internal_has_mdusatransaction() const {
  return this != internal_default_instance() && _impl_.mdusatransaction_ != nullptr;
}
inline bool MarketData::has_mdusatransaction() const {
  return _internal_has_mdusatransaction();
}
inline const ::com::htsc::mdc::insight::model::MDUSATransaction& MarketData::_internal_mdusatransaction() const {
  const ::com::htsc::mdc::insight::model::MDUSATransaction* p = _impl_.mdusatransaction_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDUSATransaction&>(
      ::com::htsc::mdc::insight::model::_MDUSATransaction_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDUSATransaction& MarketData::mdusatransaction() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdUSATransaction)
  return _internal_mdusatransaction();
}
inline void MarketData::unsafe_arena_set_allocated_mdusatransaction(
    ::com::htsc::mdc::insight::model::MDUSATransaction* mdusatransaction) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdusatransaction_);
  }
  _impl_.mdusatransaction_ = mdusatransaction;
  if (mdusatransaction) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdUSATransaction)
}
inline ::com::htsc::mdc::insight::model::MDUSATransaction* MarketData::release_mdusatransaction() {
  
  ::com::htsc::mdc::insight::model::MDUSATransaction* temp = _impl_.mdusatransaction_;
  _impl_.mdusatransaction_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDUSATransaction* MarketData::unsafe_arena_release_mdusatransaction() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdUSATransaction)
  
  ::com::htsc::mdc::insight::model::MDUSATransaction* temp = _impl_.mdusatransaction_;
  _impl_.mdusatransaction_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDUSATransaction* MarketData::_internal_mutable_mdusatransaction() {
  
  if (_impl_.mdusatransaction_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDUSATransaction>(GetArenaForAllocation());
    _impl_.mdusatransaction_ = p;
  }
  return _impl_.mdusatransaction_;
}
inline ::com::htsc::mdc::insight::model::MDUSATransaction* MarketData::mutable_mdusatransaction() {
  ::com::htsc::mdc::insight::model::MDUSATransaction* _msg = _internal_mutable_mdusatransaction();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdUSATransaction)
  return _msg;
}
inline void MarketData::set_allocated_mdusatransaction(::com::htsc::mdc::insight::model::MDUSATransaction* mdusatransaction) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdusatransaction_);
  }
  if (mdusatransaction) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdusatransaction));
    if (message_arena != submessage_arena) {
      mdusatransaction = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdusatransaction, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdusatransaction_ = mdusatransaction;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdUSATransaction)
}

// .com.htsc.mdc.insight.model.MDSLOrder mdSLOrder = 46;
inline bool MarketData::_internal_has_mdslorder() const {
  return this != internal_default_instance() && _impl_.mdslorder_ != nullptr;
}
inline bool MarketData::has_mdslorder() const {
  return _internal_has_mdslorder();
}
inline const ::com::htsc::mdc::insight::model::MDSLOrder& MarketData::_internal_mdslorder() const {
  const ::com::htsc::mdc::insight::model::MDSLOrder* p = _impl_.mdslorder_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDSLOrder&>(
      ::com::htsc::mdc::insight::model::_MDSLOrder_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDSLOrder& MarketData::mdslorder() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdSLOrder)
  return _internal_mdslorder();
}
inline void MarketData::unsafe_arena_set_allocated_mdslorder(
    ::com::htsc::mdc::insight::model::MDSLOrder* mdslorder) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdslorder_);
  }
  _impl_.mdslorder_ = mdslorder;
  if (mdslorder) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdSLOrder)
}
inline ::com::htsc::mdc::insight::model::MDSLOrder* MarketData::release_mdslorder() {
  
  ::com::htsc::mdc::insight::model::MDSLOrder* temp = _impl_.mdslorder_;
  _impl_.mdslorder_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDSLOrder* MarketData::unsafe_arena_release_mdslorder() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdSLOrder)
  
  ::com::htsc::mdc::insight::model::MDSLOrder* temp = _impl_.mdslorder_;
  _impl_.mdslorder_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDSLOrder* MarketData::_internal_mutable_mdslorder() {
  
  if (_impl_.mdslorder_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDSLOrder>(GetArenaForAllocation());
    _impl_.mdslorder_ = p;
  }
  return _impl_.mdslorder_;
}
inline ::com::htsc::mdc::insight::model::MDSLOrder* MarketData::mutable_mdslorder() {
  ::com::htsc::mdc::insight::model::MDSLOrder* _msg = _internal_mutable_mdslorder();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdSLOrder)
  return _msg;
}
inline void MarketData::set_allocated_mdslorder(::com::htsc::mdc::insight::model::MDSLOrder* mdslorder) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdslorder_);
  }
  if (mdslorder) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdslorder));
    if (message_arena != submessage_arena) {
      mdslorder = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdslorder, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdslorder_ = mdslorder;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdSLOrder)
}

// .com.htsc.mdc.insight.model.MDSLTransaction mdSLTransaction = 47;
inline bool MarketData::_internal_has_mdsltransaction() const {
  return this != internal_default_instance() && _impl_.mdsltransaction_ != nullptr;
}
inline bool MarketData::has_mdsltransaction() const {
  return _internal_has_mdsltransaction();
}
inline const ::com::htsc::mdc::insight::model::MDSLTransaction& MarketData::_internal_mdsltransaction() const {
  const ::com::htsc::mdc::insight::model::MDSLTransaction* p = _impl_.mdsltransaction_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDSLTransaction&>(
      ::com::htsc::mdc::insight::model::_MDSLTransaction_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDSLTransaction& MarketData::mdsltransaction() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdSLTransaction)
  return _internal_mdsltransaction();
}
inline void MarketData::unsafe_arena_set_allocated_mdsltransaction(
    ::com::htsc::mdc::insight::model::MDSLTransaction* mdsltransaction) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdsltransaction_);
  }
  _impl_.mdsltransaction_ = mdsltransaction;
  if (mdsltransaction) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdSLTransaction)
}
inline ::com::htsc::mdc::insight::model::MDSLTransaction* MarketData::release_mdsltransaction() {
  
  ::com::htsc::mdc::insight::model::MDSLTransaction* temp = _impl_.mdsltransaction_;
  _impl_.mdsltransaction_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDSLTransaction* MarketData::unsafe_arena_release_mdsltransaction() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdSLTransaction)
  
  ::com::htsc::mdc::insight::model::MDSLTransaction* temp = _impl_.mdsltransaction_;
  _impl_.mdsltransaction_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDSLTransaction* MarketData::_internal_mutable_mdsltransaction() {
  
  if (_impl_.mdsltransaction_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDSLTransaction>(GetArenaForAllocation());
    _impl_.mdsltransaction_ = p;
  }
  return _impl_.mdsltransaction_;
}
inline ::com::htsc::mdc::insight::model::MDSLTransaction* MarketData::mutable_mdsltransaction() {
  ::com::htsc::mdc::insight::model::MDSLTransaction* _msg = _internal_mutable_mdsltransaction();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdSLTransaction)
  return _msg;
}
inline void MarketData::set_allocated_mdsltransaction(::com::htsc::mdc::insight::model::MDSLTransaction* mdsltransaction) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdsltransaction_);
  }
  if (mdsltransaction) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdsltransaction));
    if (message_arena != submessage_arena) {
      mdsltransaction = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdsltransaction, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdsltransaction_ = mdsltransaction;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdSLTransaction)
}

// .com.htsc.mdc.insight.model.MDHKGreyMarket mdHKGreyMarket = 48;
inline bool MarketData::_internal_has_mdhkgreymarket() const {
  return this != internal_default_instance() && _impl_.mdhkgreymarket_ != nullptr;
}
inline bool MarketData::has_mdhkgreymarket() const {
  return _internal_has_mdhkgreymarket();
}
inline const ::com::htsc::mdc::insight::model::MDHKGreyMarket& MarketData::_internal_mdhkgreymarket() const {
  const ::com::htsc::mdc::insight::model::MDHKGreyMarket* p = _impl_.mdhkgreymarket_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDHKGreyMarket&>(
      ::com::htsc::mdc::insight::model::_MDHKGreyMarket_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDHKGreyMarket& MarketData::mdhkgreymarket() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdHKGreyMarket)
  return _internal_mdhkgreymarket();
}
inline void MarketData::unsafe_arena_set_allocated_mdhkgreymarket(
    ::com::htsc::mdc::insight::model::MDHKGreyMarket* mdhkgreymarket) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdhkgreymarket_);
  }
  _impl_.mdhkgreymarket_ = mdhkgreymarket;
  if (mdhkgreymarket) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdHKGreyMarket)
}
inline ::com::htsc::mdc::insight::model::MDHKGreyMarket* MarketData::release_mdhkgreymarket() {
  
  ::com::htsc::mdc::insight::model::MDHKGreyMarket* temp = _impl_.mdhkgreymarket_;
  _impl_.mdhkgreymarket_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDHKGreyMarket* MarketData::unsafe_arena_release_mdhkgreymarket() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdHKGreyMarket)
  
  ::com::htsc::mdc::insight::model::MDHKGreyMarket* temp = _impl_.mdhkgreymarket_;
  _impl_.mdhkgreymarket_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDHKGreyMarket* MarketData::_internal_mutable_mdhkgreymarket() {
  
  if (_impl_.mdhkgreymarket_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDHKGreyMarket>(GetArenaForAllocation());
    _impl_.mdhkgreymarket_ = p;
  }
  return _impl_.mdhkgreymarket_;
}
inline ::com::htsc::mdc::insight::model::MDHKGreyMarket* MarketData::mutable_mdhkgreymarket() {
  ::com::htsc::mdc::insight::model::MDHKGreyMarket* _msg = _internal_mutable_mdhkgreymarket();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdHKGreyMarket)
  return _msg;
}
inline void MarketData::set_allocated_mdhkgreymarket(::com::htsc::mdc::insight::model::MDHKGreyMarket* mdhkgreymarket) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdhkgreymarket_);
  }
  if (mdhkgreymarket) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdhkgreymarket));
    if (message_arena != submessage_arena) {
      mdhkgreymarket = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdhkgreymarket, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdhkgreymarket_ = mdhkgreymarket;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdHKGreyMarket)
}

// .com.htsc.mdc.insight.model.MDSLIndicativeQuote mdSLIndicativeQuote = 49;
inline bool MarketData::_internal_has_mdslindicativequote() const {
  return this != internal_default_instance() && _impl_.mdslindicativequote_ != nullptr;
}
inline bool MarketData::has_mdslindicativequote() const {
  return _internal_has_mdslindicativequote();
}
inline const ::com::htsc::mdc::insight::model::MDSLIndicativeQuote& MarketData::_internal_mdslindicativequote() const {
  const ::com::htsc::mdc::insight::model::MDSLIndicativeQuote* p = _impl_.mdslindicativequote_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDSLIndicativeQuote&>(
      ::com::htsc::mdc::insight::model::_MDSLIndicativeQuote_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDSLIndicativeQuote& MarketData::mdslindicativequote() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdSLIndicativeQuote)
  return _internal_mdslindicativequote();
}
inline void MarketData::unsafe_arena_set_allocated_mdslindicativequote(
    ::com::htsc::mdc::insight::model::MDSLIndicativeQuote* mdslindicativequote) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdslindicativequote_);
  }
  _impl_.mdslindicativequote_ = mdslindicativequote;
  if (mdslindicativequote) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdSLIndicativeQuote)
}
inline ::com::htsc::mdc::insight::model::MDSLIndicativeQuote* MarketData::release_mdslindicativequote() {
  
  ::com::htsc::mdc::insight::model::MDSLIndicativeQuote* temp = _impl_.mdslindicativequote_;
  _impl_.mdslindicativequote_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDSLIndicativeQuote* MarketData::unsafe_arena_release_mdslindicativequote() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdSLIndicativeQuote)
  
  ::com::htsc::mdc::insight::model::MDSLIndicativeQuote* temp = _impl_.mdslindicativequote_;
  _impl_.mdslindicativequote_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDSLIndicativeQuote* MarketData::_internal_mutable_mdslindicativequote() {
  
  if (_impl_.mdslindicativequote_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDSLIndicativeQuote>(GetArenaForAllocation());
    _impl_.mdslindicativequote_ = p;
  }
  return _impl_.mdslindicativequote_;
}
inline ::com::htsc::mdc::insight::model::MDSLIndicativeQuote* MarketData::mutable_mdslindicativequote() {
  ::com::htsc::mdc::insight::model::MDSLIndicativeQuote* _msg = _internal_mutable_mdslindicativequote();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdSLIndicativeQuote)
  return _msg;
}
inline void MarketData::set_allocated_mdslindicativequote(::com::htsc::mdc::insight::model::MDSLIndicativeQuote* mdslindicativequote) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdslindicativequote_);
  }
  if (mdslindicativequote) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdslindicativequote));
    if (message_arena != submessage_arena) {
      mdslindicativequote = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdslindicativequote, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdslindicativequote_ = mdslindicativequote;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdSLIndicativeQuote)
}

// .com.htsc.mdc.insight.model.MDSLStatistics mdSLStatistics = 50;
inline bool MarketData::_internal_has_mdslstatistics() const {
  return this != internal_default_instance() && _impl_.mdslstatistics_ != nullptr;
}
inline bool MarketData::has_mdslstatistics() const {
  return _internal_has_mdslstatistics();
}
inline const ::com::htsc::mdc::insight::model::MDSLStatistics& MarketData::_internal_mdslstatistics() const {
  const ::com::htsc::mdc::insight::model::MDSLStatistics* p = _impl_.mdslstatistics_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDSLStatistics&>(
      ::com::htsc::mdc::insight::model::_MDSLStatistics_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDSLStatistics& MarketData::mdslstatistics() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdSLStatistics)
  return _internal_mdslstatistics();
}
inline void MarketData::unsafe_arena_set_allocated_mdslstatistics(
    ::com::htsc::mdc::insight::model::MDSLStatistics* mdslstatistics) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdslstatistics_);
  }
  _impl_.mdslstatistics_ = mdslstatistics;
  if (mdslstatistics) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdSLStatistics)
}
inline ::com::htsc::mdc::insight::model::MDSLStatistics* MarketData::release_mdslstatistics() {
  
  ::com::htsc::mdc::insight::model::MDSLStatistics* temp = _impl_.mdslstatistics_;
  _impl_.mdslstatistics_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDSLStatistics* MarketData::unsafe_arena_release_mdslstatistics() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdSLStatistics)
  
  ::com::htsc::mdc::insight::model::MDSLStatistics* temp = _impl_.mdslstatistics_;
  _impl_.mdslstatistics_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDSLStatistics* MarketData::_internal_mutable_mdslstatistics() {
  
  if (_impl_.mdslstatistics_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDSLStatistics>(GetArenaForAllocation());
    _impl_.mdslstatistics_ = p;
  }
  return _impl_.mdslstatistics_;
}
inline ::com::htsc::mdc::insight::model::MDSLStatistics* MarketData::mutable_mdslstatistics() {
  ::com::htsc::mdc::insight::model::MDSLStatistics* _msg = _internal_mutable_mdslstatistics();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdSLStatistics)
  return _msg;
}
inline void MarketData::set_allocated_mdslstatistics(::com::htsc::mdc::insight::model::MDSLStatistics* mdslstatistics) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdslstatistics_);
  }
  if (mdslstatistics) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdslstatistics));
    if (message_arena != submessage_arena) {
      mdslstatistics = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdslstatistics, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdslstatistics_ = mdslstatistics;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdSLStatistics)
}

// .com.htsc.mdc.insight.model.MDUSAQuote mdUSAQuote = 51;
inline bool MarketData::_internal_has_mdusaquote() const {
  return this != internal_default_instance() && _impl_.mdusaquote_ != nullptr;
}
inline bool MarketData::has_mdusaquote() const {
  return _internal_has_mdusaquote();
}
inline const ::com::htsc::mdc::insight::model::MDUSAQuote& MarketData::_internal_mdusaquote() const {
  const ::com::htsc::mdc::insight::model::MDUSAQuote* p = _impl_.mdusaquote_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDUSAQuote&>(
      ::com::htsc::mdc::insight::model::_MDUSAQuote_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDUSAQuote& MarketData::mdusaquote() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdUSAQuote)
  return _internal_mdusaquote();
}
inline void MarketData::unsafe_arena_set_allocated_mdusaquote(
    ::com::htsc::mdc::insight::model::MDUSAQuote* mdusaquote) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdusaquote_);
  }
  _impl_.mdusaquote_ = mdusaquote;
  if (mdusaquote) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdUSAQuote)
}
inline ::com::htsc::mdc::insight::model::MDUSAQuote* MarketData::release_mdusaquote() {
  
  ::com::htsc::mdc::insight::model::MDUSAQuote* temp = _impl_.mdusaquote_;
  _impl_.mdusaquote_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDUSAQuote* MarketData::unsafe_arena_release_mdusaquote() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdUSAQuote)
  
  ::com::htsc::mdc::insight::model::MDUSAQuote* temp = _impl_.mdusaquote_;
  _impl_.mdusaquote_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDUSAQuote* MarketData::_internal_mutable_mdusaquote() {
  
  if (_impl_.mdusaquote_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDUSAQuote>(GetArenaForAllocation());
    _impl_.mdusaquote_ = p;
  }
  return _impl_.mdusaquote_;
}
inline ::com::htsc::mdc::insight::model::MDUSAQuote* MarketData::mutable_mdusaquote() {
  ::com::htsc::mdc::insight::model::MDUSAQuote* _msg = _internal_mutable_mdusaquote();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdUSAQuote)
  return _msg;
}
inline void MarketData::set_allocated_mdusaquote(::com::htsc::mdc::insight::model::MDUSAQuote* mdusaquote) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdusaquote_);
  }
  if (mdusaquote) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdusaquote));
    if (message_arena != submessage_arena) {
      mdusaquote = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdusaquote, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdusaquote_ = mdusaquote;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdUSAQuote)
}

// .com.htsc.mdc.insight.model.MDSLEstimation mdSLEstimation = 52;
inline bool MarketData::_internal_has_mdslestimation() const {
  return this != internal_default_instance() && _impl_.mdslestimation_ != nullptr;
}
inline bool MarketData::has_mdslestimation() const {
  return _internal_has_mdslestimation();
}
inline const ::com::htsc::mdc::insight::model::MDSLEstimation& MarketData::_internal_mdslestimation() const {
  const ::com::htsc::mdc::insight::model::MDSLEstimation* p = _impl_.mdslestimation_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDSLEstimation&>(
      ::com::htsc::mdc::insight::model::_MDSLEstimation_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDSLEstimation& MarketData::mdslestimation() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdSLEstimation)
  return _internal_mdslestimation();
}
inline void MarketData::unsafe_arena_set_allocated_mdslestimation(
    ::com::htsc::mdc::insight::model::MDSLEstimation* mdslestimation) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdslestimation_);
  }
  _impl_.mdslestimation_ = mdslestimation;
  if (mdslestimation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdSLEstimation)
}
inline ::com::htsc::mdc::insight::model::MDSLEstimation* MarketData::release_mdslestimation() {
  
  ::com::htsc::mdc::insight::model::MDSLEstimation* temp = _impl_.mdslestimation_;
  _impl_.mdslestimation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDSLEstimation* MarketData::unsafe_arena_release_mdslestimation() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdSLEstimation)
  
  ::com::htsc::mdc::insight::model::MDSLEstimation* temp = _impl_.mdslestimation_;
  _impl_.mdslestimation_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDSLEstimation* MarketData::_internal_mutable_mdslestimation() {
  
  if (_impl_.mdslestimation_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDSLEstimation>(GetArenaForAllocation());
    _impl_.mdslestimation_ = p;
  }
  return _impl_.mdslestimation_;
}
inline ::com::htsc::mdc::insight::model::MDSLEstimation* MarketData::mutable_mdslestimation() {
  ::com::htsc::mdc::insight::model::MDSLEstimation* _msg = _internal_mutable_mdslestimation();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdSLEstimation)
  return _msg;
}
inline void MarketData::set_allocated_mdslestimation(::com::htsc::mdc::insight::model::MDSLEstimation* mdslestimation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdslestimation_);
  }
  if (mdslestimation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdslestimation));
    if (message_arena != submessage_arena) {
      mdslestimation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdslestimation, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdslestimation_ = mdslestimation;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdSLEstimation)
}

// .com.htsc.mdc.insight.model.MDCnexDeal mdCnexDeal = 53;
inline bool MarketData::_internal_has_mdcnexdeal() const {
  return this != internal_default_instance() && _impl_.mdcnexdeal_ != nullptr;
}
inline bool MarketData::has_mdcnexdeal() const {
  return _internal_has_mdcnexdeal();
}
inline const ::com::htsc::mdc::insight::model::MDCnexDeal& MarketData::_internal_mdcnexdeal() const {
  const ::com::htsc::mdc::insight::model::MDCnexDeal* p = _impl_.mdcnexdeal_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDCnexDeal&>(
      ::com::htsc::mdc::insight::model::_MDCnexDeal_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDCnexDeal& MarketData::mdcnexdeal() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdCnexDeal)
  return _internal_mdcnexdeal();
}
inline void MarketData::unsafe_arena_set_allocated_mdcnexdeal(
    ::com::htsc::mdc::insight::model::MDCnexDeal* mdcnexdeal) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdcnexdeal_);
  }
  _impl_.mdcnexdeal_ = mdcnexdeal;
  if (mdcnexdeal) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdCnexDeal)
}
inline ::com::htsc::mdc::insight::model::MDCnexDeal* MarketData::release_mdcnexdeal() {
  
  ::com::htsc::mdc::insight::model::MDCnexDeal* temp = _impl_.mdcnexdeal_;
  _impl_.mdcnexdeal_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDCnexDeal* MarketData::unsafe_arena_release_mdcnexdeal() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdCnexDeal)
  
  ::com::htsc::mdc::insight::model::MDCnexDeal* temp = _impl_.mdcnexdeal_;
  _impl_.mdcnexdeal_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDCnexDeal* MarketData::_internal_mutable_mdcnexdeal() {
  
  if (_impl_.mdcnexdeal_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDCnexDeal>(GetArenaForAllocation());
    _impl_.mdcnexdeal_ = p;
  }
  return _impl_.mdcnexdeal_;
}
inline ::com::htsc::mdc::insight::model::MDCnexDeal* MarketData::mutable_mdcnexdeal() {
  ::com::htsc::mdc::insight::model::MDCnexDeal* _msg = _internal_mutable_mdcnexdeal();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdCnexDeal)
  return _msg;
}
inline void MarketData::set_allocated_mdcnexdeal(::com::htsc::mdc::insight::model::MDCnexDeal* mdcnexdeal) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdcnexdeal_);
  }
  if (mdcnexdeal) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdcnexdeal));
    if (message_arena != submessage_arena) {
      mdcnexdeal = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdcnexdeal, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdcnexdeal_ = mdcnexdeal;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdCnexDeal)
}

// .com.htsc.mdc.insight.model.MDCnexQuote mdCnexQuote = 54;
inline bool MarketData::_internal_has_mdcnexquote() const {
  return this != internal_default_instance() && _impl_.mdcnexquote_ != nullptr;
}
inline bool MarketData::has_mdcnexquote() const {
  return _internal_has_mdcnexquote();
}
inline const ::com::htsc::mdc::insight::model::MDCnexQuote& MarketData::_internal_mdcnexquote() const {
  const ::com::htsc::mdc::insight::model::MDCnexQuote* p = _impl_.mdcnexquote_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDCnexQuote&>(
      ::com::htsc::mdc::insight::model::_MDCnexQuote_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDCnexQuote& MarketData::mdcnexquote() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdCnexQuote)
  return _internal_mdcnexquote();
}
inline void MarketData::unsafe_arena_set_allocated_mdcnexquote(
    ::com::htsc::mdc::insight::model::MDCnexQuote* mdcnexquote) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdcnexquote_);
  }
  _impl_.mdcnexquote_ = mdcnexquote;
  if (mdcnexquote) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdCnexQuote)
}
inline ::com::htsc::mdc::insight::model::MDCnexQuote* MarketData::release_mdcnexquote() {
  
  ::com::htsc::mdc::insight::model::MDCnexQuote* temp = _impl_.mdcnexquote_;
  _impl_.mdcnexquote_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDCnexQuote* MarketData::unsafe_arena_release_mdcnexquote() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdCnexQuote)
  
  ::com::htsc::mdc::insight::model::MDCnexQuote* temp = _impl_.mdcnexquote_;
  _impl_.mdcnexquote_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDCnexQuote* MarketData::_internal_mutable_mdcnexquote() {
  
  if (_impl_.mdcnexquote_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDCnexQuote>(GetArenaForAllocation());
    _impl_.mdcnexquote_ = p;
  }
  return _impl_.mdcnexquote_;
}
inline ::com::htsc::mdc::insight::model::MDCnexQuote* MarketData::mutable_mdcnexquote() {
  ::com::htsc::mdc::insight::model::MDCnexQuote* _msg = _internal_mutable_mdcnexquote();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdCnexQuote)
  return _msg;
}
inline void MarketData::set_allocated_mdcnexquote(::com::htsc::mdc::insight::model::MDCnexQuote* mdcnexquote) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdcnexquote_);
  }
  if (mdcnexquote) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdcnexquote));
    if (message_arena != submessage_arena) {
      mdcnexquote = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdcnexquote, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdcnexquote_ = mdcnexquote;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdCnexQuote)
}

// .com.htsc.mdc.insight.model.MDDelaySnapshot mdDelaySnapshot = 55;
inline bool MarketData::_internal_has_mddelaysnapshot() const {
  return this != internal_default_instance() && _impl_.mddelaysnapshot_ != nullptr;
}
inline bool MarketData::has_mddelaysnapshot() const {
  return _internal_has_mddelaysnapshot();
}
inline const ::com::htsc::mdc::insight::model::MDDelaySnapshot& MarketData::_internal_mddelaysnapshot() const {
  const ::com::htsc::mdc::insight::model::MDDelaySnapshot* p = _impl_.mddelaysnapshot_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDDelaySnapshot&>(
      ::com::htsc::mdc::insight::model::_MDDelaySnapshot_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDDelaySnapshot& MarketData::mddelaysnapshot() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdDelaySnapshot)
  return _internal_mddelaysnapshot();
}
inline void MarketData::unsafe_arena_set_allocated_mddelaysnapshot(
    ::com::htsc::mdc::insight::model::MDDelaySnapshot* mddelaysnapshot) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mddelaysnapshot_);
  }
  _impl_.mddelaysnapshot_ = mddelaysnapshot;
  if (mddelaysnapshot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdDelaySnapshot)
}
inline ::com::htsc::mdc::insight::model::MDDelaySnapshot* MarketData::release_mddelaysnapshot() {
  
  ::com::htsc::mdc::insight::model::MDDelaySnapshot* temp = _impl_.mddelaysnapshot_;
  _impl_.mddelaysnapshot_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDDelaySnapshot* MarketData::unsafe_arena_release_mddelaysnapshot() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdDelaySnapshot)
  
  ::com::htsc::mdc::insight::model::MDDelaySnapshot* temp = _impl_.mddelaysnapshot_;
  _impl_.mddelaysnapshot_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDDelaySnapshot* MarketData::_internal_mutable_mddelaysnapshot() {
  
  if (_impl_.mddelaysnapshot_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDDelaySnapshot>(GetArenaForAllocation());
    _impl_.mddelaysnapshot_ = p;
  }
  return _impl_.mddelaysnapshot_;
}
inline ::com::htsc::mdc::insight::model::MDDelaySnapshot* MarketData::mutable_mddelaysnapshot() {
  ::com::htsc::mdc::insight::model::MDDelaySnapshot* _msg = _internal_mutable_mddelaysnapshot();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdDelaySnapshot)
  return _msg;
}
inline void MarketData::set_allocated_mddelaysnapshot(::com::htsc::mdc::insight::model::MDDelaySnapshot* mddelaysnapshot) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mddelaysnapshot_);
  }
  if (mddelaysnapshot) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mddelaysnapshot));
    if (message_arena != submessage_arena) {
      mddelaysnapshot = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mddelaysnapshot, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mddelaysnapshot_ = mddelaysnapshot;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdDelaySnapshot)
}

// .com.htsc.mdc.insight.model.MDHighAccuracyFuture mdHighAccuracyFuture = 56;
inline bool MarketData::_internal_has_mdhighaccuracyfuture() const {
  return this != internal_default_instance() && _impl_.mdhighaccuracyfuture_ != nullptr;
}
inline bool MarketData::has_mdhighaccuracyfuture() const {
  return _internal_has_mdhighaccuracyfuture();
}
inline const ::com::htsc::mdc::insight::model::MDHighAccuracyFuture& MarketData::_internal_mdhighaccuracyfuture() const {
  const ::com::htsc::mdc::insight::model::MDHighAccuracyFuture* p = _impl_.mdhighaccuracyfuture_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDHighAccuracyFuture&>(
      ::com::htsc::mdc::insight::model::_MDHighAccuracyFuture_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDHighAccuracyFuture& MarketData::mdhighaccuracyfuture() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdHighAccuracyFuture)
  return _internal_mdhighaccuracyfuture();
}
inline void MarketData::unsafe_arena_set_allocated_mdhighaccuracyfuture(
    ::com::htsc::mdc::insight::model::MDHighAccuracyFuture* mdhighaccuracyfuture) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdhighaccuracyfuture_);
  }
  _impl_.mdhighaccuracyfuture_ = mdhighaccuracyfuture;
  if (mdhighaccuracyfuture) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdHighAccuracyFuture)
}
inline ::com::htsc::mdc::insight::model::MDHighAccuracyFuture* MarketData::release_mdhighaccuracyfuture() {
  
  ::com::htsc::mdc::insight::model::MDHighAccuracyFuture* temp = _impl_.mdhighaccuracyfuture_;
  _impl_.mdhighaccuracyfuture_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDHighAccuracyFuture* MarketData::unsafe_arena_release_mdhighaccuracyfuture() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdHighAccuracyFuture)
  
  ::com::htsc::mdc::insight::model::MDHighAccuracyFuture* temp = _impl_.mdhighaccuracyfuture_;
  _impl_.mdhighaccuracyfuture_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDHighAccuracyFuture* MarketData::_internal_mutable_mdhighaccuracyfuture() {
  
  if (_impl_.mdhighaccuracyfuture_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDHighAccuracyFuture>(GetArenaForAllocation());
    _impl_.mdhighaccuracyfuture_ = p;
  }
  return _impl_.mdhighaccuracyfuture_;
}
inline ::com::htsc::mdc::insight::model::MDHighAccuracyFuture* MarketData::mutable_mdhighaccuracyfuture() {
  ::com::htsc::mdc::insight::model::MDHighAccuracyFuture* _msg = _internal_mutable_mdhighaccuracyfuture();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdHighAccuracyFuture)
  return _msg;
}
inline void MarketData::set_allocated_mdhighaccuracyfuture(::com::htsc::mdc::insight::model::MDHighAccuracyFuture* mdhighaccuracyfuture) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdhighaccuracyfuture_);
  }
  if (mdhighaccuracyfuture) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdhighaccuracyfuture));
    if (message_arena != submessage_arena) {
      mdhighaccuracyfuture = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdhighaccuracyfuture, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdhighaccuracyfuture_ = mdhighaccuracyfuture;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdHighAccuracyFuture)
}

// .com.htsc.mdc.insight.model.MDCfetsForex mdCfetsForex = 57;
inline bool MarketData::_internal_has_mdcfetsforex() const {
  return this != internal_default_instance() && _impl_.mdcfetsforex_ != nullptr;
}
inline bool MarketData::has_mdcfetsforex() const {
  return _internal_has_mdcfetsforex();
}
inline const ::com::htsc::mdc::insight::model::MDCfetsForex& MarketData::_internal_mdcfetsforex() const {
  const ::com::htsc::mdc::insight::model::MDCfetsForex* p = _impl_.mdcfetsforex_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDCfetsForex&>(
      ::com::htsc::mdc::insight::model::_MDCfetsForex_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDCfetsForex& MarketData::mdcfetsforex() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdCfetsForex)
  return _internal_mdcfetsforex();
}
inline void MarketData::unsafe_arena_set_allocated_mdcfetsforex(
    ::com::htsc::mdc::insight::model::MDCfetsForex* mdcfetsforex) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdcfetsforex_);
  }
  _impl_.mdcfetsforex_ = mdcfetsforex;
  if (mdcfetsforex) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdCfetsForex)
}
inline ::com::htsc::mdc::insight::model::MDCfetsForex* MarketData::release_mdcfetsforex() {
  
  ::com::htsc::mdc::insight::model::MDCfetsForex* temp = _impl_.mdcfetsforex_;
  _impl_.mdcfetsforex_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDCfetsForex* MarketData::unsafe_arena_release_mdcfetsforex() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdCfetsForex)
  
  ::com::htsc::mdc::insight::model::MDCfetsForex* temp = _impl_.mdcfetsforex_;
  _impl_.mdcfetsforex_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDCfetsForex* MarketData::_internal_mutable_mdcfetsforex() {
  
  if (_impl_.mdcfetsforex_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDCfetsForex>(GetArenaForAllocation());
    _impl_.mdcfetsforex_ = p;
  }
  return _impl_.mdcfetsforex_;
}
inline ::com::htsc::mdc::insight::model::MDCfetsForex* MarketData::mutable_mdcfetsforex() {
  ::com::htsc::mdc::insight::model::MDCfetsForex* _msg = _internal_mutable_mdcfetsforex();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdCfetsForex)
  return _msg;
}
inline void MarketData::set_allocated_mdcfetsforex(::com::htsc::mdc::insight::model::MDCfetsForex* mdcfetsforex) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdcfetsforex_);
  }
  if (mdcfetsforex) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdcfetsforex));
    if (message_arena != submessage_arena) {
      mdcfetsforex = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdcfetsforex, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdcfetsforex_ = mdcfetsforex;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdCfetsForex)
}

// .com.htsc.mdc.insight.model.MDCfetsFxSnapshot mdCfetsFxSnapshot = 58;
inline bool MarketData::_internal_has_mdcfetsfxsnapshot() const {
  return this != internal_default_instance() && _impl_.mdcfetsfxsnapshot_ != nullptr;
}
inline bool MarketData::has_mdcfetsfxsnapshot() const {
  return _internal_has_mdcfetsfxsnapshot();
}
inline const ::com::htsc::mdc::insight::model::MDCfetsFxSnapshot& MarketData::_internal_mdcfetsfxsnapshot() const {
  const ::com::htsc::mdc::insight::model::MDCfetsFxSnapshot* p = _impl_.mdcfetsfxsnapshot_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDCfetsFxSnapshot&>(
      ::com::htsc::mdc::insight::model::_MDCfetsFxSnapshot_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDCfetsFxSnapshot& MarketData::mdcfetsfxsnapshot() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdCfetsFxSnapshot)
  return _internal_mdcfetsfxsnapshot();
}
inline void MarketData::unsafe_arena_set_allocated_mdcfetsfxsnapshot(
    ::com::htsc::mdc::insight::model::MDCfetsFxSnapshot* mdcfetsfxsnapshot) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdcfetsfxsnapshot_);
  }
  _impl_.mdcfetsfxsnapshot_ = mdcfetsfxsnapshot;
  if (mdcfetsfxsnapshot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdCfetsFxSnapshot)
}
inline ::com::htsc::mdc::insight::model::MDCfetsFxSnapshot* MarketData::release_mdcfetsfxsnapshot() {
  
  ::com::htsc::mdc::insight::model::MDCfetsFxSnapshot* temp = _impl_.mdcfetsfxsnapshot_;
  _impl_.mdcfetsfxsnapshot_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDCfetsFxSnapshot* MarketData::unsafe_arena_release_mdcfetsfxsnapshot() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdCfetsFxSnapshot)
  
  ::com::htsc::mdc::insight::model::MDCfetsFxSnapshot* temp = _impl_.mdcfetsfxsnapshot_;
  _impl_.mdcfetsfxsnapshot_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDCfetsFxSnapshot* MarketData::_internal_mutable_mdcfetsfxsnapshot() {
  
  if (_impl_.mdcfetsfxsnapshot_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDCfetsFxSnapshot>(GetArenaForAllocation());
    _impl_.mdcfetsfxsnapshot_ = p;
  }
  return _impl_.mdcfetsfxsnapshot_;
}
inline ::com::htsc::mdc::insight::model::MDCfetsFxSnapshot* MarketData::mutable_mdcfetsfxsnapshot() {
  ::com::htsc::mdc::insight::model::MDCfetsFxSnapshot* _msg = _internal_mutable_mdcfetsfxsnapshot();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdCfetsFxSnapshot)
  return _msg;
}
inline void MarketData::set_allocated_mdcfetsfxsnapshot(::com::htsc::mdc::insight::model::MDCfetsFxSnapshot* mdcfetsfxsnapshot) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdcfetsfxsnapshot_);
  }
  if (mdcfetsfxsnapshot) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdcfetsfxsnapshot));
    if (message_arena != submessage_arena) {
      mdcfetsfxsnapshot = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdcfetsfxsnapshot, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdcfetsfxsnapshot_ = mdcfetsfxsnapshot;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdCfetsFxSnapshot)
}

// .com.htsc.mdc.insight.model.MDCfetsFxQuote mdCfetsFxQuote = 59;
inline bool MarketData::_internal_has_mdcfetsfxquote() const {
  return this != internal_default_instance() && _impl_.mdcfetsfxquote_ != nullptr;
}
inline bool MarketData::has_mdcfetsfxquote() const {
  return _internal_has_mdcfetsfxquote();
}
inline const ::com::htsc::mdc::insight::model::MDCfetsFxQuote& MarketData::_internal_mdcfetsfxquote() const {
  const ::com::htsc::mdc::insight::model::MDCfetsFxQuote* p = _impl_.mdcfetsfxquote_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDCfetsFxQuote&>(
      ::com::htsc::mdc::insight::model::_MDCfetsFxQuote_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDCfetsFxQuote& MarketData::mdcfetsfxquote() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdCfetsFxQuote)
  return _internal_mdcfetsfxquote();
}
inline void MarketData::unsafe_arena_set_allocated_mdcfetsfxquote(
    ::com::htsc::mdc::insight::model::MDCfetsFxQuote* mdcfetsfxquote) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdcfetsfxquote_);
  }
  _impl_.mdcfetsfxquote_ = mdcfetsfxquote;
  if (mdcfetsfxquote) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdCfetsFxQuote)
}
inline ::com::htsc::mdc::insight::model::MDCfetsFxQuote* MarketData::release_mdcfetsfxquote() {
  
  ::com::htsc::mdc::insight::model::MDCfetsFxQuote* temp = _impl_.mdcfetsfxquote_;
  _impl_.mdcfetsfxquote_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDCfetsFxQuote* MarketData::unsafe_arena_release_mdcfetsfxquote() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdCfetsFxQuote)
  
  ::com::htsc::mdc::insight::model::MDCfetsFxQuote* temp = _impl_.mdcfetsfxquote_;
  _impl_.mdcfetsfxquote_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDCfetsFxQuote* MarketData::_internal_mutable_mdcfetsfxquote() {
  
  if (_impl_.mdcfetsfxquote_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDCfetsFxQuote>(GetArenaForAllocation());
    _impl_.mdcfetsfxquote_ = p;
  }
  return _impl_.mdcfetsfxquote_;
}
inline ::com::htsc::mdc::insight::model::MDCfetsFxQuote* MarketData::mutable_mdcfetsfxquote() {
  ::com::htsc::mdc::insight::model::MDCfetsFxQuote* _msg = _internal_mutable_mdcfetsfxquote();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdCfetsFxQuote)
  return _msg;
}
inline void MarketData::set_allocated_mdcfetsfxquote(::com::htsc::mdc::insight::model::MDCfetsFxQuote* mdcfetsfxquote) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdcfetsfxquote_);
  }
  if (mdcfetsfxquote) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdcfetsfxquote));
    if (message_arena != submessage_arena) {
      mdcfetsfxquote = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdcfetsfxquote, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdcfetsfxquote_ = mdcfetsfxquote;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdCfetsFxQuote)
}

// .com.htsc.mdc.insight.model.SPFuture spFuture = 60;
inline bool MarketData::_internal_has_spfuture() const {
  return this != internal_default_instance() && _impl_.spfuture_ != nullptr;
}
inline bool MarketData::has_spfuture() const {
  return _internal_has_spfuture();
}
inline const ::com::htsc::mdc::insight::model::SPFuture& MarketData::_internal_spfuture() const {
  const ::com::htsc::mdc::insight::model::SPFuture* p = _impl_.spfuture_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::SPFuture&>(
      ::com::htsc::mdc::insight::model::_SPFuture_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::SPFuture& MarketData::spfuture() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.spFuture)
  return _internal_spfuture();
}
inline void MarketData::unsafe_arena_set_allocated_spfuture(
    ::com::htsc::mdc::insight::model::SPFuture* spfuture) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spfuture_);
  }
  _impl_.spfuture_ = spfuture;
  if (spfuture) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.spFuture)
}
inline ::com::htsc::mdc::insight::model::SPFuture* MarketData::release_spfuture() {
  
  ::com::htsc::mdc::insight::model::SPFuture* temp = _impl_.spfuture_;
  _impl_.spfuture_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::SPFuture* MarketData::unsafe_arena_release_spfuture() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.spFuture)
  
  ::com::htsc::mdc::insight::model::SPFuture* temp = _impl_.spfuture_;
  _impl_.spfuture_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::SPFuture* MarketData::_internal_mutable_spfuture() {
  
  if (_impl_.spfuture_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::SPFuture>(GetArenaForAllocation());
    _impl_.spfuture_ = p;
  }
  return _impl_.spfuture_;
}
inline ::com::htsc::mdc::insight::model::SPFuture* MarketData::mutable_spfuture() {
  ::com::htsc::mdc::insight::model::SPFuture* _msg = _internal_mutable_spfuture();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.spFuture)
  return _msg;
}
inline void MarketData::set_allocated_spfuture(::com::htsc::mdc::insight::model::SPFuture* spfuture) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spfuture_);
  }
  if (spfuture) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(spfuture));
    if (message_arena != submessage_arena) {
      spfuture = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spfuture, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.spfuture_ = spfuture;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.spFuture)
}

// .com.htsc.mdc.insight.model.MDCfetsBenchmark mdCfetsBenchmark = 61;
inline bool MarketData::_internal_has_mdcfetsbenchmark() const {
  return this != internal_default_instance() && _impl_.mdcfetsbenchmark_ != nullptr;
}
inline bool MarketData::has_mdcfetsbenchmark() const {
  return _internal_has_mdcfetsbenchmark();
}
inline const ::com::htsc::mdc::insight::model::MDCfetsBenchmark& MarketData::_internal_mdcfetsbenchmark() const {
  const ::com::htsc::mdc::insight::model::MDCfetsBenchmark* p = _impl_.mdcfetsbenchmark_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDCfetsBenchmark&>(
      ::com::htsc::mdc::insight::model::_MDCfetsBenchmark_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDCfetsBenchmark& MarketData::mdcfetsbenchmark() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdCfetsBenchmark)
  return _internal_mdcfetsbenchmark();
}
inline void MarketData::unsafe_arena_set_allocated_mdcfetsbenchmark(
    ::com::htsc::mdc::insight::model::MDCfetsBenchmark* mdcfetsbenchmark) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdcfetsbenchmark_);
  }
  _impl_.mdcfetsbenchmark_ = mdcfetsbenchmark;
  if (mdcfetsbenchmark) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdCfetsBenchmark)
}
inline ::com::htsc::mdc::insight::model::MDCfetsBenchmark* MarketData::release_mdcfetsbenchmark() {
  
  ::com::htsc::mdc::insight::model::MDCfetsBenchmark* temp = _impl_.mdcfetsbenchmark_;
  _impl_.mdcfetsbenchmark_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDCfetsBenchmark* MarketData::unsafe_arena_release_mdcfetsbenchmark() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdCfetsBenchmark)
  
  ::com::htsc::mdc::insight::model::MDCfetsBenchmark* temp = _impl_.mdcfetsbenchmark_;
  _impl_.mdcfetsbenchmark_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDCfetsBenchmark* MarketData::_internal_mutable_mdcfetsbenchmark() {
  
  if (_impl_.mdcfetsbenchmark_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDCfetsBenchmark>(GetArenaForAllocation());
    _impl_.mdcfetsbenchmark_ = p;
  }
  return _impl_.mdcfetsbenchmark_;
}
inline ::com::htsc::mdc::insight::model::MDCfetsBenchmark* MarketData::mutable_mdcfetsbenchmark() {
  ::com::htsc::mdc::insight::model::MDCfetsBenchmark* _msg = _internal_mutable_mdcfetsbenchmark();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdCfetsBenchmark)
  return _msg;
}
inline void MarketData::set_allocated_mdcfetsbenchmark(::com::htsc::mdc::insight::model::MDCfetsBenchmark* mdcfetsbenchmark) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdcfetsbenchmark_);
  }
  if (mdcfetsbenchmark) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdcfetsbenchmark));
    if (message_arena != submessage_arena) {
      mdcfetsbenchmark = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdcfetsbenchmark, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdcfetsbenchmark_ = mdcfetsbenchmark;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdCfetsBenchmark)
}

// .com.htsc.mdc.insight.model.MDCfetsBondDeal mdCfetsBondDeal = 62;
inline bool MarketData::_internal_has_mdcfetsbonddeal() const {
  return this != internal_default_instance() && _impl_.mdcfetsbonddeal_ != nullptr;
}
inline bool MarketData::has_mdcfetsbonddeal() const {
  return _internal_has_mdcfetsbonddeal();
}
inline const ::com::htsc::mdc::insight::model::MDCfetsBondDeal& MarketData::_internal_mdcfetsbonddeal() const {
  const ::com::htsc::mdc::insight::model::MDCfetsBondDeal* p = _impl_.mdcfetsbonddeal_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDCfetsBondDeal&>(
      ::com::htsc::mdc::insight::model::_MDCfetsBondDeal_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDCfetsBondDeal& MarketData::mdcfetsbonddeal() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdCfetsBondDeal)
  return _internal_mdcfetsbonddeal();
}
inline void MarketData::unsafe_arena_set_allocated_mdcfetsbonddeal(
    ::com::htsc::mdc::insight::model::MDCfetsBondDeal* mdcfetsbonddeal) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdcfetsbonddeal_);
  }
  _impl_.mdcfetsbonddeal_ = mdcfetsbonddeal;
  if (mdcfetsbonddeal) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdCfetsBondDeal)
}
inline ::com::htsc::mdc::insight::model::MDCfetsBondDeal* MarketData::release_mdcfetsbonddeal() {
  
  ::com::htsc::mdc::insight::model::MDCfetsBondDeal* temp = _impl_.mdcfetsbonddeal_;
  _impl_.mdcfetsbonddeal_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDCfetsBondDeal* MarketData::unsafe_arena_release_mdcfetsbonddeal() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdCfetsBondDeal)
  
  ::com::htsc::mdc::insight::model::MDCfetsBondDeal* temp = _impl_.mdcfetsbonddeal_;
  _impl_.mdcfetsbonddeal_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDCfetsBondDeal* MarketData::_internal_mutable_mdcfetsbonddeal() {
  
  if (_impl_.mdcfetsbonddeal_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDCfetsBondDeal>(GetArenaForAllocation());
    _impl_.mdcfetsbonddeal_ = p;
  }
  return _impl_.mdcfetsbonddeal_;
}
inline ::com::htsc::mdc::insight::model::MDCfetsBondDeal* MarketData::mutable_mdcfetsbonddeal() {
  ::com::htsc::mdc::insight::model::MDCfetsBondDeal* _msg = _internal_mutable_mdcfetsbonddeal();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdCfetsBondDeal)
  return _msg;
}
inline void MarketData::set_allocated_mdcfetsbonddeal(::com::htsc::mdc::insight::model::MDCfetsBondDeal* mdcfetsbonddeal) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdcfetsbonddeal_);
  }
  if (mdcfetsbonddeal) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdcfetsbonddeal));
    if (message_arena != submessage_arena) {
      mdcfetsbonddeal = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdcfetsbonddeal, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdcfetsbonddeal_ = mdcfetsbonddeal;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdCfetsBondDeal)
}

// .com.htsc.mdc.insight.model.MDCfetsBondSnapshot mdCfetsBondSnapshot = 63;
inline bool MarketData::_internal_has_mdcfetsbondsnapshot() const {
  return this != internal_default_instance() && _impl_.mdcfetsbondsnapshot_ != nullptr;
}
inline bool MarketData::has_mdcfetsbondsnapshot() const {
  return _internal_has_mdcfetsbondsnapshot();
}
inline const ::com::htsc::mdc::insight::model::MDCfetsBondSnapshot& MarketData::_internal_mdcfetsbondsnapshot() const {
  const ::com::htsc::mdc::insight::model::MDCfetsBondSnapshot* p = _impl_.mdcfetsbondsnapshot_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDCfetsBondSnapshot&>(
      ::com::htsc::mdc::insight::model::_MDCfetsBondSnapshot_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDCfetsBondSnapshot& MarketData::mdcfetsbondsnapshot() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdCfetsBondSnapshot)
  return _internal_mdcfetsbondsnapshot();
}
inline void MarketData::unsafe_arena_set_allocated_mdcfetsbondsnapshot(
    ::com::htsc::mdc::insight::model::MDCfetsBondSnapshot* mdcfetsbondsnapshot) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdcfetsbondsnapshot_);
  }
  _impl_.mdcfetsbondsnapshot_ = mdcfetsbondsnapshot;
  if (mdcfetsbondsnapshot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdCfetsBondSnapshot)
}
inline ::com::htsc::mdc::insight::model::MDCfetsBondSnapshot* MarketData::release_mdcfetsbondsnapshot() {
  
  ::com::htsc::mdc::insight::model::MDCfetsBondSnapshot* temp = _impl_.mdcfetsbondsnapshot_;
  _impl_.mdcfetsbondsnapshot_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDCfetsBondSnapshot* MarketData::unsafe_arena_release_mdcfetsbondsnapshot() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdCfetsBondSnapshot)
  
  ::com::htsc::mdc::insight::model::MDCfetsBondSnapshot* temp = _impl_.mdcfetsbondsnapshot_;
  _impl_.mdcfetsbondsnapshot_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDCfetsBondSnapshot* MarketData::_internal_mutable_mdcfetsbondsnapshot() {
  
  if (_impl_.mdcfetsbondsnapshot_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDCfetsBondSnapshot>(GetArenaForAllocation());
    _impl_.mdcfetsbondsnapshot_ = p;
  }
  return _impl_.mdcfetsbondsnapshot_;
}
inline ::com::htsc::mdc::insight::model::MDCfetsBondSnapshot* MarketData::mutable_mdcfetsbondsnapshot() {
  ::com::htsc::mdc::insight::model::MDCfetsBondSnapshot* _msg = _internal_mutable_mdcfetsbondsnapshot();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdCfetsBondSnapshot)
  return _msg;
}
inline void MarketData::set_allocated_mdcfetsbondsnapshot(::com::htsc::mdc::insight::model::MDCfetsBondSnapshot* mdcfetsbondsnapshot) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdcfetsbondsnapshot_);
  }
  if (mdcfetsbondsnapshot) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdcfetsbondsnapshot));
    if (message_arena != submessage_arena) {
      mdcfetsbondsnapshot = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdcfetsbondsnapshot, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdcfetsbondsnapshot_ = mdcfetsbondsnapshot;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdCfetsBondSnapshot)
}

// .com.htsc.mdc.insight.model.MDCfetsCurrencyDeal mdCfetsCurrencyDeal = 64;
inline bool MarketData::_internal_has_mdcfetscurrencydeal() const {
  return this != internal_default_instance() && _impl_.mdcfetscurrencydeal_ != nullptr;
}
inline bool MarketData::has_mdcfetscurrencydeal() const {
  return _internal_has_mdcfetscurrencydeal();
}
inline const ::com::htsc::mdc::insight::model::MDCfetsCurrencyDeal& MarketData::_internal_mdcfetscurrencydeal() const {
  const ::com::htsc::mdc::insight::model::MDCfetsCurrencyDeal* p = _impl_.mdcfetscurrencydeal_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDCfetsCurrencyDeal&>(
      ::com::htsc::mdc::insight::model::_MDCfetsCurrencyDeal_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDCfetsCurrencyDeal& MarketData::mdcfetscurrencydeal() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdCfetsCurrencyDeal)
  return _internal_mdcfetscurrencydeal();
}
inline void MarketData::unsafe_arena_set_allocated_mdcfetscurrencydeal(
    ::com::htsc::mdc::insight::model::MDCfetsCurrencyDeal* mdcfetscurrencydeal) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdcfetscurrencydeal_);
  }
  _impl_.mdcfetscurrencydeal_ = mdcfetscurrencydeal;
  if (mdcfetscurrencydeal) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdCfetsCurrencyDeal)
}
inline ::com::htsc::mdc::insight::model::MDCfetsCurrencyDeal* MarketData::release_mdcfetscurrencydeal() {
  
  ::com::htsc::mdc::insight::model::MDCfetsCurrencyDeal* temp = _impl_.mdcfetscurrencydeal_;
  _impl_.mdcfetscurrencydeal_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDCfetsCurrencyDeal* MarketData::unsafe_arena_release_mdcfetscurrencydeal() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdCfetsCurrencyDeal)
  
  ::com::htsc::mdc::insight::model::MDCfetsCurrencyDeal* temp = _impl_.mdcfetscurrencydeal_;
  _impl_.mdcfetscurrencydeal_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDCfetsCurrencyDeal* MarketData::_internal_mutable_mdcfetscurrencydeal() {
  
  if (_impl_.mdcfetscurrencydeal_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDCfetsCurrencyDeal>(GetArenaForAllocation());
    _impl_.mdcfetscurrencydeal_ = p;
  }
  return _impl_.mdcfetscurrencydeal_;
}
inline ::com::htsc::mdc::insight::model::MDCfetsCurrencyDeal* MarketData::mutable_mdcfetscurrencydeal() {
  ::com::htsc::mdc::insight::model::MDCfetsCurrencyDeal* _msg = _internal_mutable_mdcfetscurrencydeal();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdCfetsCurrencyDeal)
  return _msg;
}
inline void MarketData::set_allocated_mdcfetscurrencydeal(::com::htsc::mdc::insight::model::MDCfetsCurrencyDeal* mdcfetscurrencydeal) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdcfetscurrencydeal_);
  }
  if (mdcfetscurrencydeal) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdcfetscurrencydeal));
    if (message_arena != submessage_arena) {
      mdcfetscurrencydeal = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdcfetscurrencydeal, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdcfetscurrencydeal_ = mdcfetscurrencydeal;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdCfetsCurrencyDeal)
}

// .com.htsc.mdc.insight.model.MDCfetsCurrencySnapshot mdCfetsCurrencySnapshot = 65;
inline bool MarketData::_internal_has_mdcfetscurrencysnapshot() const {
  return this != internal_default_instance() && _impl_.mdcfetscurrencysnapshot_ != nullptr;
}
inline bool MarketData::has_mdcfetscurrencysnapshot() const {
  return _internal_has_mdcfetscurrencysnapshot();
}
inline const ::com::htsc::mdc::insight::model::MDCfetsCurrencySnapshot& MarketData::_internal_mdcfetscurrencysnapshot() const {
  const ::com::htsc::mdc::insight::model::MDCfetsCurrencySnapshot* p = _impl_.mdcfetscurrencysnapshot_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDCfetsCurrencySnapshot&>(
      ::com::htsc::mdc::insight::model::_MDCfetsCurrencySnapshot_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDCfetsCurrencySnapshot& MarketData::mdcfetscurrencysnapshot() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdCfetsCurrencySnapshot)
  return _internal_mdcfetscurrencysnapshot();
}
inline void MarketData::unsafe_arena_set_allocated_mdcfetscurrencysnapshot(
    ::com::htsc::mdc::insight::model::MDCfetsCurrencySnapshot* mdcfetscurrencysnapshot) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdcfetscurrencysnapshot_);
  }
  _impl_.mdcfetscurrencysnapshot_ = mdcfetscurrencysnapshot;
  if (mdcfetscurrencysnapshot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdCfetsCurrencySnapshot)
}
inline ::com::htsc::mdc::insight::model::MDCfetsCurrencySnapshot* MarketData::release_mdcfetscurrencysnapshot() {
  
  ::com::htsc::mdc::insight::model::MDCfetsCurrencySnapshot* temp = _impl_.mdcfetscurrencysnapshot_;
  _impl_.mdcfetscurrencysnapshot_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDCfetsCurrencySnapshot* MarketData::unsafe_arena_release_mdcfetscurrencysnapshot() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdCfetsCurrencySnapshot)
  
  ::com::htsc::mdc::insight::model::MDCfetsCurrencySnapshot* temp = _impl_.mdcfetscurrencysnapshot_;
  _impl_.mdcfetscurrencysnapshot_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDCfetsCurrencySnapshot* MarketData::_internal_mutable_mdcfetscurrencysnapshot() {
  
  if (_impl_.mdcfetscurrencysnapshot_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDCfetsCurrencySnapshot>(GetArenaForAllocation());
    _impl_.mdcfetscurrencysnapshot_ = p;
  }
  return _impl_.mdcfetscurrencysnapshot_;
}
inline ::com::htsc::mdc::insight::model::MDCfetsCurrencySnapshot* MarketData::mutable_mdcfetscurrencysnapshot() {
  ::com::htsc::mdc::insight::model::MDCfetsCurrencySnapshot* _msg = _internal_mutable_mdcfetscurrencysnapshot();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdCfetsCurrencySnapshot)
  return _msg;
}
inline void MarketData::set_allocated_mdcfetscurrencysnapshot(::com::htsc::mdc::insight::model::MDCfetsCurrencySnapshot* mdcfetscurrencysnapshot) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdcfetscurrencysnapshot_);
  }
  if (mdcfetscurrencysnapshot) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdcfetscurrencysnapshot));
    if (message_arena != submessage_arena) {
      mdcfetscurrencysnapshot = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdcfetscurrencysnapshot, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdcfetscurrencysnapshot_ = mdcfetscurrencysnapshot;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdCfetsCurrencySnapshot)
}

// .com.htsc.mdc.insight.model.MDCfetsODMSnapshot mdCfetsODMSnapshot = 66;
inline bool MarketData::_internal_has_mdcfetsodmsnapshot() const {
  return this != internal_default_instance() && _impl_.mdcfetsodmsnapshot_ != nullptr;
}
inline bool MarketData::has_mdcfetsodmsnapshot() const {
  return _internal_has_mdcfetsodmsnapshot();
}
inline const ::com::htsc::mdc::insight::model::MDCfetsODMSnapshot& MarketData::_internal_mdcfetsodmsnapshot() const {
  const ::com::htsc::mdc::insight::model::MDCfetsODMSnapshot* p = _impl_.mdcfetsodmsnapshot_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDCfetsODMSnapshot&>(
      ::com::htsc::mdc::insight::model::_MDCfetsODMSnapshot_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDCfetsODMSnapshot& MarketData::mdcfetsodmsnapshot() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdCfetsODMSnapshot)
  return _internal_mdcfetsodmsnapshot();
}
inline void MarketData::unsafe_arena_set_allocated_mdcfetsodmsnapshot(
    ::com::htsc::mdc::insight::model::MDCfetsODMSnapshot* mdcfetsodmsnapshot) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdcfetsodmsnapshot_);
  }
  _impl_.mdcfetsodmsnapshot_ = mdcfetsodmsnapshot;
  if (mdcfetsodmsnapshot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdCfetsODMSnapshot)
}
inline ::com::htsc::mdc::insight::model::MDCfetsODMSnapshot* MarketData::release_mdcfetsodmsnapshot() {
  
  ::com::htsc::mdc::insight::model::MDCfetsODMSnapshot* temp = _impl_.mdcfetsodmsnapshot_;
  _impl_.mdcfetsodmsnapshot_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDCfetsODMSnapshot* MarketData::unsafe_arena_release_mdcfetsodmsnapshot() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdCfetsODMSnapshot)
  
  ::com::htsc::mdc::insight::model::MDCfetsODMSnapshot* temp = _impl_.mdcfetsodmsnapshot_;
  _impl_.mdcfetsodmsnapshot_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDCfetsODMSnapshot* MarketData::_internal_mutable_mdcfetsodmsnapshot() {
  
  if (_impl_.mdcfetsodmsnapshot_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDCfetsODMSnapshot>(GetArenaForAllocation());
    _impl_.mdcfetsodmsnapshot_ = p;
  }
  return _impl_.mdcfetsodmsnapshot_;
}
inline ::com::htsc::mdc::insight::model::MDCfetsODMSnapshot* MarketData::mutable_mdcfetsodmsnapshot() {
  ::com::htsc::mdc::insight::model::MDCfetsODMSnapshot* _msg = _internal_mutable_mdcfetsodmsnapshot();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdCfetsODMSnapshot)
  return _msg;
}
inline void MarketData::set_allocated_mdcfetsodmsnapshot(::com::htsc::mdc::insight::model::MDCfetsODMSnapshot* mdcfetsodmsnapshot) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdcfetsodmsnapshot_);
  }
  if (mdcfetsodmsnapshot) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdcfetsodmsnapshot));
    if (message_arena != submessage_arena) {
      mdcfetsodmsnapshot = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdcfetsodmsnapshot, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdcfetsodmsnapshot_ = mdcfetsodmsnapshot;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdCfetsODMSnapshot)
}

// .com.htsc.mdc.insight.model.MDCfetsQDMQuote mdCfetsQDMQuote = 67;
inline bool MarketData::_internal_has_mdcfetsqdmquote() const {
  return this != internal_default_instance() && _impl_.mdcfetsqdmquote_ != nullptr;
}
inline bool MarketData::has_mdcfetsqdmquote() const {
  return _internal_has_mdcfetsqdmquote();
}
inline const ::com::htsc::mdc::insight::model::MDCfetsQDMQuote& MarketData::_internal_mdcfetsqdmquote() const {
  const ::com::htsc::mdc::insight::model::MDCfetsQDMQuote* p = _impl_.mdcfetsqdmquote_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDCfetsQDMQuote&>(
      ::com::htsc::mdc::insight::model::_MDCfetsQDMQuote_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDCfetsQDMQuote& MarketData::mdcfetsqdmquote() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdCfetsQDMQuote)
  return _internal_mdcfetsqdmquote();
}
inline void MarketData::unsafe_arena_set_allocated_mdcfetsqdmquote(
    ::com::htsc::mdc::insight::model::MDCfetsQDMQuote* mdcfetsqdmquote) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdcfetsqdmquote_);
  }
  _impl_.mdcfetsqdmquote_ = mdcfetsqdmquote;
  if (mdcfetsqdmquote) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdCfetsQDMQuote)
}
inline ::com::htsc::mdc::insight::model::MDCfetsQDMQuote* MarketData::release_mdcfetsqdmquote() {
  
  ::com::htsc::mdc::insight::model::MDCfetsQDMQuote* temp = _impl_.mdcfetsqdmquote_;
  _impl_.mdcfetsqdmquote_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDCfetsQDMQuote* MarketData::unsafe_arena_release_mdcfetsqdmquote() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdCfetsQDMQuote)
  
  ::com::htsc::mdc::insight::model::MDCfetsQDMQuote* temp = _impl_.mdcfetsqdmquote_;
  _impl_.mdcfetsqdmquote_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDCfetsQDMQuote* MarketData::_internal_mutable_mdcfetsqdmquote() {
  
  if (_impl_.mdcfetsqdmquote_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDCfetsQDMQuote>(GetArenaForAllocation());
    _impl_.mdcfetsqdmquote_ = p;
  }
  return _impl_.mdcfetsqdmquote_;
}
inline ::com::htsc::mdc::insight::model::MDCfetsQDMQuote* MarketData::mutable_mdcfetsqdmquote() {
  ::com::htsc::mdc::insight::model::MDCfetsQDMQuote* _msg = _internal_mutable_mdcfetsqdmquote();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdCfetsQDMQuote)
  return _msg;
}
inline void MarketData::set_allocated_mdcfetsqdmquote(::com::htsc::mdc::insight::model::MDCfetsQDMQuote* mdcfetsqdmquote) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdcfetsqdmquote_);
  }
  if (mdcfetsqdmquote) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdcfetsqdmquote));
    if (message_arena != submessage_arena) {
      mdcfetsqdmquote = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdcfetsqdmquote, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdcfetsqdmquote_ = mdcfetsqdmquote;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdCfetsQDMQuote)
}

// .com.htsc.mdc.insight.model.MDCfetsRateDeal mdCfetsRateDeal = 68;
inline bool MarketData::_internal_has_mdcfetsratedeal() const {
  return this != internal_default_instance() && _impl_.mdcfetsratedeal_ != nullptr;
}
inline bool MarketData::has_mdcfetsratedeal() const {
  return _internal_has_mdcfetsratedeal();
}
inline const ::com::htsc::mdc::insight::model::MDCfetsRateDeal& MarketData::_internal_mdcfetsratedeal() const {
  const ::com::htsc::mdc::insight::model::MDCfetsRateDeal* p = _impl_.mdcfetsratedeal_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDCfetsRateDeal&>(
      ::com::htsc::mdc::insight::model::_MDCfetsRateDeal_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDCfetsRateDeal& MarketData::mdcfetsratedeal() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdCfetsRateDeal)
  return _internal_mdcfetsratedeal();
}
inline void MarketData::unsafe_arena_set_allocated_mdcfetsratedeal(
    ::com::htsc::mdc::insight::model::MDCfetsRateDeal* mdcfetsratedeal) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdcfetsratedeal_);
  }
  _impl_.mdcfetsratedeal_ = mdcfetsratedeal;
  if (mdcfetsratedeal) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdCfetsRateDeal)
}
inline ::com::htsc::mdc::insight::model::MDCfetsRateDeal* MarketData::release_mdcfetsratedeal() {
  
  ::com::htsc::mdc::insight::model::MDCfetsRateDeal* temp = _impl_.mdcfetsratedeal_;
  _impl_.mdcfetsratedeal_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDCfetsRateDeal* MarketData::unsafe_arena_release_mdcfetsratedeal() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdCfetsRateDeal)
  
  ::com::htsc::mdc::insight::model::MDCfetsRateDeal* temp = _impl_.mdcfetsratedeal_;
  _impl_.mdcfetsratedeal_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDCfetsRateDeal* MarketData::_internal_mutable_mdcfetsratedeal() {
  
  if (_impl_.mdcfetsratedeal_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDCfetsRateDeal>(GetArenaForAllocation());
    _impl_.mdcfetsratedeal_ = p;
  }
  return _impl_.mdcfetsratedeal_;
}
inline ::com::htsc::mdc::insight::model::MDCfetsRateDeal* MarketData::mutable_mdcfetsratedeal() {
  ::com::htsc::mdc::insight::model::MDCfetsRateDeal* _msg = _internal_mutable_mdcfetsratedeal();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdCfetsRateDeal)
  return _msg;
}
inline void MarketData::set_allocated_mdcfetsratedeal(::com::htsc::mdc::insight::model::MDCfetsRateDeal* mdcfetsratedeal) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdcfetsratedeal_);
  }
  if (mdcfetsratedeal) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdcfetsratedeal));
    if (message_arena != submessage_arena) {
      mdcfetsratedeal = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdcfetsratedeal, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdcfetsratedeal_ = mdcfetsratedeal;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdCfetsRateDeal)
}

// .com.htsc.mdc.insight.model.MDCfetsRateSnapshot mdCfetsRateSnapshot = 69;
inline bool MarketData::_internal_has_mdcfetsratesnapshot() const {
  return this != internal_default_instance() && _impl_.mdcfetsratesnapshot_ != nullptr;
}
inline bool MarketData::has_mdcfetsratesnapshot() const {
  return _internal_has_mdcfetsratesnapshot();
}
inline const ::com::htsc::mdc::insight::model::MDCfetsRateSnapshot& MarketData::_internal_mdcfetsratesnapshot() const {
  const ::com::htsc::mdc::insight::model::MDCfetsRateSnapshot* p = _impl_.mdcfetsratesnapshot_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDCfetsRateSnapshot&>(
      ::com::htsc::mdc::insight::model::_MDCfetsRateSnapshot_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDCfetsRateSnapshot& MarketData::mdcfetsratesnapshot() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdCfetsRateSnapshot)
  return _internal_mdcfetsratesnapshot();
}
inline void MarketData::unsafe_arena_set_allocated_mdcfetsratesnapshot(
    ::com::htsc::mdc::insight::model::MDCfetsRateSnapshot* mdcfetsratesnapshot) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdcfetsratesnapshot_);
  }
  _impl_.mdcfetsratesnapshot_ = mdcfetsratesnapshot;
  if (mdcfetsratesnapshot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdCfetsRateSnapshot)
}
inline ::com::htsc::mdc::insight::model::MDCfetsRateSnapshot* MarketData::release_mdcfetsratesnapshot() {
  
  ::com::htsc::mdc::insight::model::MDCfetsRateSnapshot* temp = _impl_.mdcfetsratesnapshot_;
  _impl_.mdcfetsratesnapshot_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDCfetsRateSnapshot* MarketData::unsafe_arena_release_mdcfetsratesnapshot() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdCfetsRateSnapshot)
  
  ::com::htsc::mdc::insight::model::MDCfetsRateSnapshot* temp = _impl_.mdcfetsratesnapshot_;
  _impl_.mdcfetsratesnapshot_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDCfetsRateSnapshot* MarketData::_internal_mutable_mdcfetsratesnapshot() {
  
  if (_impl_.mdcfetsratesnapshot_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDCfetsRateSnapshot>(GetArenaForAllocation());
    _impl_.mdcfetsratesnapshot_ = p;
  }
  return _impl_.mdcfetsratesnapshot_;
}
inline ::com::htsc::mdc::insight::model::MDCfetsRateSnapshot* MarketData::mutable_mdcfetsratesnapshot() {
  ::com::htsc::mdc::insight::model::MDCfetsRateSnapshot* _msg = _internal_mutable_mdcfetsratesnapshot();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdCfetsRateSnapshot)
  return _msg;
}
inline void MarketData::set_allocated_mdcfetsratesnapshot(::com::htsc::mdc::insight::model::MDCfetsRateSnapshot* mdcfetsratesnapshot) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdcfetsratesnapshot_);
  }
  if (mdcfetsratesnapshot) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdcfetsratesnapshot));
    if (message_arena != submessage_arena) {
      mdcfetsratesnapshot = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdcfetsratesnapshot, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdcfetsratesnapshot_ = mdcfetsratesnapshot;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdCfetsRateSnapshot)
}

// .com.htsc.mdc.insight.model.MDCfetsFxCnyMiddlePrice mdCfetsFxCnyMiddlePrice = 70;
inline bool MarketData::_internal_has_mdcfetsfxcnymiddleprice() const {
  return this != internal_default_instance() && _impl_.mdcfetsfxcnymiddleprice_ != nullptr;
}
inline bool MarketData::has_mdcfetsfxcnymiddleprice() const {
  return _internal_has_mdcfetsfxcnymiddleprice();
}
inline const ::com::htsc::mdc::insight::model::MDCfetsFxCnyMiddlePrice& MarketData::_internal_mdcfetsfxcnymiddleprice() const {
  const ::com::htsc::mdc::insight::model::MDCfetsFxCnyMiddlePrice* p = _impl_.mdcfetsfxcnymiddleprice_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDCfetsFxCnyMiddlePrice&>(
      ::com::htsc::mdc::insight::model::_MDCfetsFxCnyMiddlePrice_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDCfetsFxCnyMiddlePrice& MarketData::mdcfetsfxcnymiddleprice() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdCfetsFxCnyMiddlePrice)
  return _internal_mdcfetsfxcnymiddleprice();
}
inline void MarketData::unsafe_arena_set_allocated_mdcfetsfxcnymiddleprice(
    ::com::htsc::mdc::insight::model::MDCfetsFxCnyMiddlePrice* mdcfetsfxcnymiddleprice) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdcfetsfxcnymiddleprice_);
  }
  _impl_.mdcfetsfxcnymiddleprice_ = mdcfetsfxcnymiddleprice;
  if (mdcfetsfxcnymiddleprice) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdCfetsFxCnyMiddlePrice)
}
inline ::com::htsc::mdc::insight::model::MDCfetsFxCnyMiddlePrice* MarketData::release_mdcfetsfxcnymiddleprice() {
  
  ::com::htsc::mdc::insight::model::MDCfetsFxCnyMiddlePrice* temp = _impl_.mdcfetsfxcnymiddleprice_;
  _impl_.mdcfetsfxcnymiddleprice_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDCfetsFxCnyMiddlePrice* MarketData::unsafe_arena_release_mdcfetsfxcnymiddleprice() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdCfetsFxCnyMiddlePrice)
  
  ::com::htsc::mdc::insight::model::MDCfetsFxCnyMiddlePrice* temp = _impl_.mdcfetsfxcnymiddleprice_;
  _impl_.mdcfetsfxcnymiddleprice_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDCfetsFxCnyMiddlePrice* MarketData::_internal_mutable_mdcfetsfxcnymiddleprice() {
  
  if (_impl_.mdcfetsfxcnymiddleprice_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDCfetsFxCnyMiddlePrice>(GetArenaForAllocation());
    _impl_.mdcfetsfxcnymiddleprice_ = p;
  }
  return _impl_.mdcfetsfxcnymiddleprice_;
}
inline ::com::htsc::mdc::insight::model::MDCfetsFxCnyMiddlePrice* MarketData::mutable_mdcfetsfxcnymiddleprice() {
  ::com::htsc::mdc::insight::model::MDCfetsFxCnyMiddlePrice* _msg = _internal_mutable_mdcfetsfxcnymiddleprice();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdCfetsFxCnyMiddlePrice)
  return _msg;
}
inline void MarketData::set_allocated_mdcfetsfxcnymiddleprice(::com::htsc::mdc::insight::model::MDCfetsFxCnyMiddlePrice* mdcfetsfxcnymiddleprice) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdcfetsfxcnymiddleprice_);
  }
  if (mdcfetsfxcnymiddleprice) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdcfetsfxcnymiddleprice));
    if (message_arena != submessage_arena) {
      mdcfetsfxcnymiddleprice = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdcfetsfxcnymiddleprice, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdcfetsfxcnymiddleprice_ = mdcfetsfxcnymiddleprice;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdCfetsFxCnyMiddlePrice)
}

// .com.htsc.mdc.insight.model.MDIopvSnapshot mdIopvSnapshot = 71;
inline bool MarketData::_internal_has_mdiopvsnapshot() const {
  return this != internal_default_instance() && _impl_.mdiopvsnapshot_ != nullptr;
}
inline bool MarketData::has_mdiopvsnapshot() const {
  return _internal_has_mdiopvsnapshot();
}
inline const ::com::htsc::mdc::insight::model::MDIopvSnapshot& MarketData::_internal_mdiopvsnapshot() const {
  const ::com::htsc::mdc::insight::model::MDIopvSnapshot* p = _impl_.mdiopvsnapshot_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDIopvSnapshot&>(
      ::com::htsc::mdc::insight::model::_MDIopvSnapshot_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDIopvSnapshot& MarketData::mdiopvsnapshot() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketData.mdIopvSnapshot)
  return _internal_mdiopvsnapshot();
}
inline void MarketData::unsafe_arena_set_allocated_mdiopvsnapshot(
    ::com::htsc::mdc::insight::model::MDIopvSnapshot* mdiopvsnapshot) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdiopvsnapshot_);
  }
  _impl_.mdiopvsnapshot_ = mdiopvsnapshot;
  if (mdiopvsnapshot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketData.mdIopvSnapshot)
}
inline ::com::htsc::mdc::insight::model::MDIopvSnapshot* MarketData::release_mdiopvsnapshot() {
  
  ::com::htsc::mdc::insight::model::MDIopvSnapshot* temp = _impl_.mdiopvsnapshot_;
  _impl_.mdiopvsnapshot_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDIopvSnapshot* MarketData::unsafe_arena_release_mdiopvsnapshot() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketData.mdIopvSnapshot)
  
  ::com::htsc::mdc::insight::model::MDIopvSnapshot* temp = _impl_.mdiopvsnapshot_;
  _impl_.mdiopvsnapshot_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDIopvSnapshot* MarketData::_internal_mutable_mdiopvsnapshot() {
  
  if (_impl_.mdiopvsnapshot_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDIopvSnapshot>(GetArenaForAllocation());
    _impl_.mdiopvsnapshot_ = p;
  }
  return _impl_.mdiopvsnapshot_;
}
inline ::com::htsc::mdc::insight::model::MDIopvSnapshot* MarketData::mutable_mdiopvsnapshot() {
  ::com::htsc::mdc::insight::model::MDIopvSnapshot* _msg = _internal_mutable_mdiopvsnapshot();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketData.mdIopvSnapshot)
  return _msg;
}
inline void MarketData::set_allocated_mdiopvsnapshot(::com::htsc::mdc::insight::model::MDIopvSnapshot* mdiopvsnapshot) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdiopvsnapshot_);
  }
  if (mdiopvsnapshot) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdiopvsnapshot));
    if (message_arena != submessage_arena) {
      mdiopvsnapshot = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdiopvsnapshot, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdiopvsnapshot_ = mdiopvsnapshot;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketData.mdIopvSnapshot)
}

// -------------------------------------------------------------------

// MarketDataStream

// bool isCompressed = 1;
inline void MarketDataStream::clear_iscompressed() {
  _impl_.iscompressed_ = false;
}
inline bool MarketDataStream::_internal_iscompressed() const {
  return _impl_.iscompressed_;
}
inline bool MarketDataStream::iscompressed() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketDataStream.isCompressed)
  return _internal_iscompressed();
}
inline void MarketDataStream::_internal_set_iscompressed(bool value) {
  
  _impl_.iscompressed_ = value;
}
inline void MarketDataStream::set_iscompressed(bool value) {
  _internal_set_iscompressed(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MarketDataStream.isCompressed)
}

// int32 originalLength = 2;
inline void MarketDataStream::clear_originallength() {
  _impl_.originallength_ = 0;
}
inline int32_t MarketDataStream::_internal_originallength() const {
  return _impl_.originallength_;
}
inline int32_t MarketDataStream::originallength() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketDataStream.originalLength)
  return _internal_originallength();
}
inline void MarketDataStream::_internal_set_originallength(int32_t value) {
  
  _impl_.originallength_ = value;
}
inline void MarketDataStream::set_originallength(int32_t value) {
  _internal_set_originallength(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MarketDataStream.originalLength)
}

// bytes compressedData = 3;
inline void MarketDataStream::clear_compresseddata() {
  _impl_.compresseddata_.ClearToEmpty();
}
inline const std::string& MarketDataStream::compresseddata() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketDataStream.compressedData)
  return _internal_compresseddata();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void MarketDataStream::set_compresseddata(ArgT0&& arg0, ArgT... args) {
 
 _impl_.compresseddata_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MarketDataStream.compressedData)
}
inline std::string* MarketDataStream::mutable_compresseddata() {
  std::string* _s = _internal_mutable_compresseddata();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketDataStream.compressedData)
  return _s;
}
inline const std::string& MarketDataStream::_internal_compresseddata() const {
  return _impl_.compresseddata_.Get();
}
inline void MarketDataStream::_internal_set_compresseddata(const std::string& value) {
  
  _impl_.compresseddata_.Set(value, GetArenaForAllocation());
}
inline std::string* MarketDataStream::_internal_mutable_compresseddata() {
  
  return _impl_.compresseddata_.Mutable(GetArenaForAllocation());
}
inline std::string* MarketDataStream::release_compresseddata() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketDataStream.compressedData)
  return _impl_.compresseddata_.Release();
}
inline void MarketDataStream::set_allocated_compresseddata(std::string* compresseddata) {
  if (compresseddata != nullptr) {
    
  } else {
    
  }
  _impl_.compresseddata_.SetAllocated(compresseddata, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.compresseddata_.IsDefault()) {
    _impl_.compresseddata_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketDataStream.compressedData)
}

// .com.htsc.mdc.insight.model.MarketDataList marketDataList = 4;
inline bool MarketDataStream::_internal_has_marketdatalist() const {
  return this != internal_default_instance() && _impl_.marketdatalist_ != nullptr;
}
inline bool MarketDataStream::has_marketdatalist() const {
  return _internal_has_marketdatalist();
}
inline void MarketDataStream::clear_marketdatalist() {
  if (GetArenaForAllocation() == nullptr && _impl_.marketdatalist_ != nullptr) {
    delete _impl_.marketdatalist_;
  }
  _impl_.marketdatalist_ = nullptr;
}
inline const ::com::htsc::mdc::insight::model::MarketDataList& MarketDataStream::_internal_marketdatalist() const {
  const ::com::htsc::mdc::insight::model::MarketDataList* p = _impl_.marketdatalist_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MarketDataList&>(
      ::com::htsc::mdc::insight::model::_MarketDataList_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MarketDataList& MarketDataStream::marketdatalist() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketDataStream.marketDataList)
  return _internal_marketdatalist();
}
inline void MarketDataStream::unsafe_arena_set_allocated_marketdatalist(
    ::com::htsc::mdc::insight::model::MarketDataList* marketdatalist) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.marketdatalist_);
  }
  _impl_.marketdatalist_ = marketdatalist;
  if (marketdatalist) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.MarketDataStream.marketDataList)
}
inline ::com::htsc::mdc::insight::model::MarketDataList* MarketDataStream::release_marketdatalist() {
  
  ::com::htsc::mdc::insight::model::MarketDataList* temp = _impl_.marketdatalist_;
  _impl_.marketdatalist_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MarketDataList* MarketDataStream::unsafe_arena_release_marketdatalist() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MarketDataStream.marketDataList)
  
  ::com::htsc::mdc::insight::model::MarketDataList* temp = _impl_.marketdatalist_;
  _impl_.marketdatalist_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MarketDataList* MarketDataStream::_internal_mutable_marketdatalist() {
  
  if (_impl_.marketdatalist_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MarketDataList>(GetArenaForAllocation());
    _impl_.marketdatalist_ = p;
  }
  return _impl_.marketdatalist_;
}
inline ::com::htsc::mdc::insight::model::MarketDataList* MarketDataStream::mutable_marketdatalist() {
  ::com::htsc::mdc::insight::model::MarketDataList* _msg = _internal_mutable_marketdatalist();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketDataStream.marketDataList)
  return _msg;
}
inline void MarketDataStream::set_allocated_marketdatalist(::com::htsc::mdc::insight::model::MarketDataList* marketdatalist) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.marketdatalist_;
  }
  if (marketdatalist) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(marketdatalist);
    if (message_arena != submessage_arena) {
      marketdatalist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, marketdatalist, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.marketdatalist_ = marketdatalist;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MarketDataStream.marketDataList)
}

// int32 totalNumber = 5;
inline void MarketDataStream::clear_totalnumber() {
  _impl_.totalnumber_ = 0;
}
inline int32_t MarketDataStream::_internal_totalnumber() const {
  return _impl_.totalnumber_;
}
inline int32_t MarketDataStream::totalnumber() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketDataStream.totalNumber)
  return _internal_totalnumber();
}
inline void MarketDataStream::_internal_set_totalnumber(int32_t value) {
  
  _impl_.totalnumber_ = value;
}
inline void MarketDataStream::set_totalnumber(int32_t value) {
  _internal_set_totalnumber(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MarketDataStream.totalNumber)
}

// int32 serial = 6;
inline void MarketDataStream::clear_serial() {
  _impl_.serial_ = 0;
}
inline int32_t MarketDataStream::_internal_serial() const {
  return _impl_.serial_;
}
inline int32_t MarketDataStream::serial() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketDataStream.serial)
  return _internal_serial();
}
inline void MarketDataStream::_internal_set_serial(int32_t value) {
  
  _impl_.serial_ = value;
}
inline void MarketDataStream::set_serial(int32_t value) {
  _internal_set_serial(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MarketDataStream.serial)
}

// bool isFinished = 7;
inline void MarketDataStream::clear_isfinished() {
  _impl_.isfinished_ = false;
}
inline bool MarketDataStream::_internal_isfinished() const {
  return _impl_.isfinished_;
}
inline bool MarketDataStream::isfinished() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketDataStream.isFinished)
  return _internal_isfinished();
}
inline void MarketDataStream::_internal_set_isfinished(bool value) {
  
  _impl_.isfinished_ = value;
}
inline void MarketDataStream::set_isfinished(bool value) {
  _internal_set_isfinished(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MarketDataStream.isFinished)
}

// -------------------------------------------------------------------

// MarketDataList

// repeated .com.htsc.mdc.insight.model.MarketData marketDatas = 1;
inline int MarketDataList::_internal_marketdatas_size() const {
  return _impl_.marketdatas_.size();
}
inline int MarketDataList::marketdatas_size() const {
  return _internal_marketdatas_size();
}
inline void MarketDataList::clear_marketdatas() {
  _impl_.marketdatas_.Clear();
}
inline ::com::htsc::mdc::insight::model::MarketData* MarketDataList::mutable_marketdatas(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MarketDataList.marketDatas)
  return _impl_.marketdatas_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::MarketData >*
MarketDataList::mutable_marketdatas() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.MarketDataList.marketDatas)
  return &_impl_.marketdatas_;
}
inline const ::com::htsc::mdc::insight::model::MarketData& MarketDataList::_internal_marketdatas(int index) const {
  return _impl_.marketdatas_.Get(index);
}
inline const ::com::htsc::mdc::insight::model::MarketData& MarketDataList::marketdatas(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MarketDataList.marketDatas)
  return _internal_marketdatas(index);
}
inline ::com::htsc::mdc::insight::model::MarketData* MarketDataList::_internal_add_marketdatas() {
  return _impl_.marketdatas_.Add();
}
inline ::com::htsc::mdc::insight::model::MarketData* MarketDataList::add_marketdatas() {
  ::com::htsc::mdc::insight::model::MarketData* _add = _internal_add_marketdatas();
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.MarketDataList.marketDatas)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::MarketData >&
MarketDataList::marketdatas() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.MarketDataList.marketDatas)
  return _impl_.marketdatas_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_MarketData_2eproto

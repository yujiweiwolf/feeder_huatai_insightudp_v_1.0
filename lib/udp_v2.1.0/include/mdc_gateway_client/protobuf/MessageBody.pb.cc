// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageBody.proto

#include "MessageBody.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {
PROTOBUF_CONSTEXPR MessageBody::MessageBody(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.generalerrormessage_)*/nullptr
  , /*decltype(_impl_.loginrequest_)*/nullptr
  , /*decltype(_impl_.loginresponse_)*/nullptr
  , /*decltype(_impl_.servicediscoveryrequest_)*/nullptr
  , /*decltype(_impl_.servicediscoveryresponse_)*/nullptr
  , /*decltype(_impl_.mdsubscriberequest_)*/nullptr
  , /*decltype(_impl_.mdsubscriberesponse_)*/nullptr
  , /*decltype(_impl_.pushmarketdata_)*/nullptr
  , /*decltype(_impl_.pushmarketdatastream_)*/nullptr
  , /*decltype(_impl_.mdqueryrequest_)*/nullptr
  , /*decltype(_impl_.mdqueryresponse_)*/nullptr
  , /*decltype(_impl_.playbackrequest_)*/nullptr
  , /*decltype(_impl_.playbackresponse_)*/nullptr
  , /*decltype(_impl_.playbackcontrolrequest_)*/nullptr
  , /*decltype(_impl_.playbackcontrolresponse_)*/nullptr
  , /*decltype(_impl_.playbackstatusrequest_)*/nullptr
  , /*decltype(_impl_.playbackstatus_)*/nullptr
  , /*decltype(_impl_.playbackpayload_)*/nullptr
  , /*decltype(_impl_.interactionid_)*/int64_t{0}
  , /*decltype(_impl_.type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MessageBodyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageBodyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageBodyDefaultTypeInternal() {}
  union {
    MessageBody _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageBodyDefaultTypeInternal _MessageBody_default_instance_;
}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com
static ::_pb::Metadata file_level_metadata_MessageBody_2eproto[1];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_MessageBody_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_MessageBody_2eproto = nullptr;

const uint32_t TableStruct_MessageBody_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MessageBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MessageBody, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MessageBody, _impl_.interactionid_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MessageBody, _impl_.generalerrormessage_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MessageBody, _impl_.loginrequest_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MessageBody, _impl_.loginresponse_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MessageBody, _impl_.servicediscoveryrequest_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MessageBody, _impl_.servicediscoveryresponse_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MessageBody, _impl_.mdsubscriberequest_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MessageBody, _impl_.mdsubscriberesponse_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MessageBody, _impl_.pushmarketdata_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MessageBody, _impl_.pushmarketdatastream_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MessageBody, _impl_.mdqueryrequest_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MessageBody, _impl_.mdqueryresponse_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MessageBody, _impl_.playbackrequest_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MessageBody, _impl_.playbackresponse_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MessageBody, _impl_.playbackcontrolrequest_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MessageBody, _impl_.playbackcontrolresponse_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MessageBody, _impl_.playbackstatusrequest_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MessageBody, _impl_.playbackstatus_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MessageBody, _impl_.playbackpayload_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::com::htsc::mdc::insight::model::MessageBody)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::com::htsc::mdc::insight::model::_MessageBody_default_instance_._instance,
};

const char descriptor_table_protodef_MessageBody_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021MessageBody.proto\022\032com.htsc.mdc.insigh"
  "t.model\032\022EMessageType.proto\032\013Login.proto"
  "\032\026ServiceDiscovery.proto\032\021MDSubscribe.pr"
  "oto\032\020MarketData.proto\032\031InsightErrorConte"
  "xt.proto\032\rMDQuery.proto\032\020MDPlayback.prot"
  "o\"\236\013\n\013MessageBody\0226\n\004type\030\001 \001(\0162(.com.ht"
  "sc.mdc.insight.model.EMessageType\022\025\n\rint"
  "eractionId\030\002 \001(\003\022L\n\023generalErrorMessage\030"
  "\n \001(\0132/.com.htsc.mdc.insight.model.Insig"
  "htErrorContext\022>\n\014loginRequest\030\013 \001(\0132(.c"
  "om.htsc.mdc.insight.model.LoginRequest\022@"
  "\n\rloginResponse\030\014 \001(\0132).com.htsc.mdc.ins"
  "ight.model.LoginResponse\022T\n\027serviceDisco"
  "veryRequest\030\r \001(\01323.com.htsc.mdc.insight"
  ".model.ServiceDiscoveryRequest\022V\n\030servic"
  "eDiscoveryResponse\030\016 \001(\01324.com.htsc.mdc."
  "insight.model.ServiceDiscoveryResponse\022J"
  "\n\022mdSubscribeRequest\030\017 \001(\0132..com.htsc.md"
  "c.insight.model.MDSubscribeRequest\022L\n\023md"
  "SubscribeResponse\030\020 \001(\0132/.com.htsc.mdc.i"
  "nsight.model.MDSubscribeResponse\022>\n\016push"
  "MarketData\030\024 \001(\0132&.com.htsc.mdc.insight."
  "model.MarketData\022J\n\024pushMarketDataStream"
  "\030\025 \001(\0132,.com.htsc.mdc.insight.model.Mark"
  "etDataStream\022B\n\016mdQueryRequest\030\036 \001(\0132*.c"
  "om.htsc.mdc.insight.model.MDQueryRequest"
  "\022D\n\017mdQueryResponse\030\037 \001(\0132+.com.htsc.mdc"
  ".insight.model.MDQueryResponse\022D\n\017playba"
  "ckRequest\030  \001(\0132+.com.htsc.mdc.insight.m"
  "odel.PlaybackRequest\022F\n\020playbackResponse"
  "\030! \001(\0132,.com.htsc.mdc.insight.model.Play"
  "backResponse\022R\n\026playbackControlRequest\030\""
  " \001(\01322.com.htsc.mdc.insight.model.Playba"
  "ckControlRequest\022T\n\027playbackControlRespo"
  "nse\030# \001(\01323.com.htsc.mdc.insight.model.P"
  "laybackControlResponse\022P\n\025playbackStatus"
  "Request\030$ \001(\01321.com.htsc.mdc.insight.mod"
  "el.PlaybackStatusRequest\022B\n\016playbackStat"
  "us\030% \001(\0132*.com.htsc.mdc.insight.model.Pl"
  "aybackStatus\022D\n\017playbackPayload\030& \001(\0132+."
  "com.htsc.mdc.insight.model.PlaybackPaylo"
  "adB3\n\032com.htsc.mdc.insight.modelB\020Messag"
  "eBodyProtoH\001\240\001\001b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_MessageBody_2eproto_deps[8] = {
  &::descriptor_table_EMessageType_2eproto,
  &::descriptor_table_InsightErrorContext_2eproto,
  &::descriptor_table_Login_2eproto,
  &::descriptor_table_MDPlayback_2eproto,
  &::descriptor_table_MDQuery_2eproto,
  &::descriptor_table_MDSubscribe_2eproto,
  &::descriptor_table_MarketData_2eproto,
  &::descriptor_table_ServiceDiscovery_2eproto,
};
static ::_pbi::once_flag descriptor_table_MessageBody_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_MessageBody_2eproto = {
    false, false, 1703, descriptor_table_protodef_MessageBody_2eproto,
    "MessageBody.proto",
    &descriptor_table_MessageBody_2eproto_once, descriptor_table_MessageBody_2eproto_deps, 8, 1,
    schemas, file_default_instances, TableStruct_MessageBody_2eproto::offsets,
    file_level_metadata_MessageBody_2eproto, file_level_enum_descriptors_MessageBody_2eproto,
    file_level_service_descriptors_MessageBody_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_MessageBody_2eproto_getter() {
  return &descriptor_table_MessageBody_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_MessageBody_2eproto(&descriptor_table_MessageBody_2eproto);
namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {

// ===================================================================

class MessageBody::_Internal {
 public:
  static const ::com::htsc::mdc::insight::model::InsightErrorContext& generalerrormessage(const MessageBody* msg);
  static const ::com::htsc::mdc::insight::model::LoginRequest& loginrequest(const MessageBody* msg);
  static const ::com::htsc::mdc::insight::model::LoginResponse& loginresponse(const MessageBody* msg);
  static const ::com::htsc::mdc::insight::model::ServiceDiscoveryRequest& servicediscoveryrequest(const MessageBody* msg);
  static const ::com::htsc::mdc::insight::model::ServiceDiscoveryResponse& servicediscoveryresponse(const MessageBody* msg);
  static const ::com::htsc::mdc::insight::model::MDSubscribeRequest& mdsubscriberequest(const MessageBody* msg);
  static const ::com::htsc::mdc::insight::model::MDSubscribeResponse& mdsubscriberesponse(const MessageBody* msg);
  static const ::com::htsc::mdc::insight::model::MarketData& pushmarketdata(const MessageBody* msg);
  static const ::com::htsc::mdc::insight::model::MarketDataStream& pushmarketdatastream(const MessageBody* msg);
  static const ::com::htsc::mdc::insight::model::MDQueryRequest& mdqueryrequest(const MessageBody* msg);
  static const ::com::htsc::mdc::insight::model::MDQueryResponse& mdqueryresponse(const MessageBody* msg);
  static const ::com::htsc::mdc::insight::model::PlaybackRequest& playbackrequest(const MessageBody* msg);
  static const ::com::htsc::mdc::insight::model::PlaybackResponse& playbackresponse(const MessageBody* msg);
  static const ::com::htsc::mdc::insight::model::PlaybackControlRequest& playbackcontrolrequest(const MessageBody* msg);
  static const ::com::htsc::mdc::insight::model::PlaybackControlResponse& playbackcontrolresponse(const MessageBody* msg);
  static const ::com::htsc::mdc::insight::model::PlaybackStatusRequest& playbackstatusrequest(const MessageBody* msg);
  static const ::com::htsc::mdc::insight::model::PlaybackStatus& playbackstatus(const MessageBody* msg);
  static const ::com::htsc::mdc::insight::model::PlaybackPayload& playbackpayload(const MessageBody* msg);
};

const ::com::htsc::mdc::insight::model::InsightErrorContext&
MessageBody::_Internal::generalerrormessage(const MessageBody* msg) {
  return *msg->_impl_.generalerrormessage_;
}
const ::com::htsc::mdc::insight::model::LoginRequest&
MessageBody::_Internal::loginrequest(const MessageBody* msg) {
  return *msg->_impl_.loginrequest_;
}
const ::com::htsc::mdc::insight::model::LoginResponse&
MessageBody::_Internal::loginresponse(const MessageBody* msg) {
  return *msg->_impl_.loginresponse_;
}
const ::com::htsc::mdc::insight::model::ServiceDiscoveryRequest&
MessageBody::_Internal::servicediscoveryrequest(const MessageBody* msg) {
  return *msg->_impl_.servicediscoveryrequest_;
}
const ::com::htsc::mdc::insight::model::ServiceDiscoveryResponse&
MessageBody::_Internal::servicediscoveryresponse(const MessageBody* msg) {
  return *msg->_impl_.servicediscoveryresponse_;
}
const ::com::htsc::mdc::insight::model::MDSubscribeRequest&
MessageBody::_Internal::mdsubscriberequest(const MessageBody* msg) {
  return *msg->_impl_.mdsubscriberequest_;
}
const ::com::htsc::mdc::insight::model::MDSubscribeResponse&
MessageBody::_Internal::mdsubscriberesponse(const MessageBody* msg) {
  return *msg->_impl_.mdsubscriberesponse_;
}
const ::com::htsc::mdc::insight::model::MarketData&
MessageBody::_Internal::pushmarketdata(const MessageBody* msg) {
  return *msg->_impl_.pushmarketdata_;
}
const ::com::htsc::mdc::insight::model::MarketDataStream&
MessageBody::_Internal::pushmarketdatastream(const MessageBody* msg) {
  return *msg->_impl_.pushmarketdatastream_;
}
const ::com::htsc::mdc::insight::model::MDQueryRequest&
MessageBody::_Internal::mdqueryrequest(const MessageBody* msg) {
  return *msg->_impl_.mdqueryrequest_;
}
const ::com::htsc::mdc::insight::model::MDQueryResponse&
MessageBody::_Internal::mdqueryresponse(const MessageBody* msg) {
  return *msg->_impl_.mdqueryresponse_;
}
const ::com::htsc::mdc::insight::model::PlaybackRequest&
MessageBody::_Internal::playbackrequest(const MessageBody* msg) {
  return *msg->_impl_.playbackrequest_;
}
const ::com::htsc::mdc::insight::model::PlaybackResponse&
MessageBody::_Internal::playbackresponse(const MessageBody* msg) {
  return *msg->_impl_.playbackresponse_;
}
const ::com::htsc::mdc::insight::model::PlaybackControlRequest&
MessageBody::_Internal::playbackcontrolrequest(const MessageBody* msg) {
  return *msg->_impl_.playbackcontrolrequest_;
}
const ::com::htsc::mdc::insight::model::PlaybackControlResponse&
MessageBody::_Internal::playbackcontrolresponse(const MessageBody* msg) {
  return *msg->_impl_.playbackcontrolresponse_;
}
const ::com::htsc::mdc::insight::model::PlaybackStatusRequest&
MessageBody::_Internal::playbackstatusrequest(const MessageBody* msg) {
  return *msg->_impl_.playbackstatusrequest_;
}
const ::com::htsc::mdc::insight::model::PlaybackStatus&
MessageBody::_Internal::playbackstatus(const MessageBody* msg) {
  return *msg->_impl_.playbackstatus_;
}
const ::com::htsc::mdc::insight::model::PlaybackPayload&
MessageBody::_Internal::playbackpayload(const MessageBody* msg) {
  return *msg->_impl_.playbackpayload_;
}
void MessageBody::clear_generalerrormessage() {
  if (GetArenaForAllocation() == nullptr && _impl_.generalerrormessage_ != nullptr) {
    delete _impl_.generalerrormessage_;
  }
  _impl_.generalerrormessage_ = nullptr;
}
void MessageBody::clear_loginrequest() {
  if (GetArenaForAllocation() == nullptr && _impl_.loginrequest_ != nullptr) {
    delete _impl_.loginrequest_;
  }
  _impl_.loginrequest_ = nullptr;
}
void MessageBody::clear_loginresponse() {
  if (GetArenaForAllocation() == nullptr && _impl_.loginresponse_ != nullptr) {
    delete _impl_.loginresponse_;
  }
  _impl_.loginresponse_ = nullptr;
}
void MessageBody::clear_servicediscoveryrequest() {
  if (GetArenaForAllocation() == nullptr && _impl_.servicediscoveryrequest_ != nullptr) {
    delete _impl_.servicediscoveryrequest_;
  }
  _impl_.servicediscoveryrequest_ = nullptr;
}
void MessageBody::clear_servicediscoveryresponse() {
  if (GetArenaForAllocation() == nullptr && _impl_.servicediscoveryresponse_ != nullptr) {
    delete _impl_.servicediscoveryresponse_;
  }
  _impl_.servicediscoveryresponse_ = nullptr;
}
void MessageBody::clear_mdsubscriberequest() {
  if (GetArenaForAllocation() == nullptr && _impl_.mdsubscriberequest_ != nullptr) {
    delete _impl_.mdsubscriberequest_;
  }
  _impl_.mdsubscriberequest_ = nullptr;
}
void MessageBody::clear_mdsubscriberesponse() {
  if (GetArenaForAllocation() == nullptr && _impl_.mdsubscriberesponse_ != nullptr) {
    delete _impl_.mdsubscriberesponse_;
  }
  _impl_.mdsubscriberesponse_ = nullptr;
}
void MessageBody::clear_pushmarketdata() {
  if (GetArenaForAllocation() == nullptr && _impl_.pushmarketdata_ != nullptr) {
    delete _impl_.pushmarketdata_;
  }
  _impl_.pushmarketdata_ = nullptr;
}
void MessageBody::clear_pushmarketdatastream() {
  if (GetArenaForAllocation() == nullptr && _impl_.pushmarketdatastream_ != nullptr) {
    delete _impl_.pushmarketdatastream_;
  }
  _impl_.pushmarketdatastream_ = nullptr;
}
void MessageBody::clear_mdqueryrequest() {
  if (GetArenaForAllocation() == nullptr && _impl_.mdqueryrequest_ != nullptr) {
    delete _impl_.mdqueryrequest_;
  }
  _impl_.mdqueryrequest_ = nullptr;
}
void MessageBody::clear_mdqueryresponse() {
  if (GetArenaForAllocation() == nullptr && _impl_.mdqueryresponse_ != nullptr) {
    delete _impl_.mdqueryresponse_;
  }
  _impl_.mdqueryresponse_ = nullptr;
}
void MessageBody::clear_playbackrequest() {
  if (GetArenaForAllocation() == nullptr && _impl_.playbackrequest_ != nullptr) {
    delete _impl_.playbackrequest_;
  }
  _impl_.playbackrequest_ = nullptr;
}
void MessageBody::clear_playbackresponse() {
  if (GetArenaForAllocation() == nullptr && _impl_.playbackresponse_ != nullptr) {
    delete _impl_.playbackresponse_;
  }
  _impl_.playbackresponse_ = nullptr;
}
void MessageBody::clear_playbackcontrolrequest() {
  if (GetArenaForAllocation() == nullptr && _impl_.playbackcontrolrequest_ != nullptr) {
    delete _impl_.playbackcontrolrequest_;
  }
  _impl_.playbackcontrolrequest_ = nullptr;
}
void MessageBody::clear_playbackcontrolresponse() {
  if (GetArenaForAllocation() == nullptr && _impl_.playbackcontrolresponse_ != nullptr) {
    delete _impl_.playbackcontrolresponse_;
  }
  _impl_.playbackcontrolresponse_ = nullptr;
}
void MessageBody::clear_playbackstatusrequest() {
  if (GetArenaForAllocation() == nullptr && _impl_.playbackstatusrequest_ != nullptr) {
    delete _impl_.playbackstatusrequest_;
  }
  _impl_.playbackstatusrequest_ = nullptr;
}
void MessageBody::clear_playbackstatus() {
  if (GetArenaForAllocation() == nullptr && _impl_.playbackstatus_ != nullptr) {
    delete _impl_.playbackstatus_;
  }
  _impl_.playbackstatus_ = nullptr;
}
void MessageBody::clear_playbackpayload() {
  if (GetArenaForAllocation() == nullptr && _impl_.playbackpayload_ != nullptr) {
    delete _impl_.playbackpayload_;
  }
  _impl_.playbackpayload_ = nullptr;
}
MessageBody::MessageBody(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.htsc.mdc.insight.model.MessageBody)
}
MessageBody::MessageBody(const MessageBody& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MessageBody* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.generalerrormessage_){nullptr}
    , decltype(_impl_.loginrequest_){nullptr}
    , decltype(_impl_.loginresponse_){nullptr}
    , decltype(_impl_.servicediscoveryrequest_){nullptr}
    , decltype(_impl_.servicediscoveryresponse_){nullptr}
    , decltype(_impl_.mdsubscriberequest_){nullptr}
    , decltype(_impl_.mdsubscriberesponse_){nullptr}
    , decltype(_impl_.pushmarketdata_){nullptr}
    , decltype(_impl_.pushmarketdatastream_){nullptr}
    , decltype(_impl_.mdqueryrequest_){nullptr}
    , decltype(_impl_.mdqueryresponse_){nullptr}
    , decltype(_impl_.playbackrequest_){nullptr}
    , decltype(_impl_.playbackresponse_){nullptr}
    , decltype(_impl_.playbackcontrolrequest_){nullptr}
    , decltype(_impl_.playbackcontrolresponse_){nullptr}
    , decltype(_impl_.playbackstatusrequest_){nullptr}
    , decltype(_impl_.playbackstatus_){nullptr}
    , decltype(_impl_.playbackpayload_){nullptr}
    , decltype(_impl_.interactionid_){}
    , decltype(_impl_.type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_generalerrormessage()) {
    _this->_impl_.generalerrormessage_ = new ::com::htsc::mdc::insight::model::InsightErrorContext(*from._impl_.generalerrormessage_);
  }
  if (from._internal_has_loginrequest()) {
    _this->_impl_.loginrequest_ = new ::com::htsc::mdc::insight::model::LoginRequest(*from._impl_.loginrequest_);
  }
  if (from._internal_has_loginresponse()) {
    _this->_impl_.loginresponse_ = new ::com::htsc::mdc::insight::model::LoginResponse(*from._impl_.loginresponse_);
  }
  if (from._internal_has_servicediscoveryrequest()) {
    _this->_impl_.servicediscoveryrequest_ = new ::com::htsc::mdc::insight::model::ServiceDiscoveryRequest(*from._impl_.servicediscoveryrequest_);
  }
  if (from._internal_has_servicediscoveryresponse()) {
    _this->_impl_.servicediscoveryresponse_ = new ::com::htsc::mdc::insight::model::ServiceDiscoveryResponse(*from._impl_.servicediscoveryresponse_);
  }
  if (from._internal_has_mdsubscriberequest()) {
    _this->_impl_.mdsubscriberequest_ = new ::com::htsc::mdc::insight::model::MDSubscribeRequest(*from._impl_.mdsubscriberequest_);
  }
  if (from._internal_has_mdsubscriberesponse()) {
    _this->_impl_.mdsubscriberesponse_ = new ::com::htsc::mdc::insight::model::MDSubscribeResponse(*from._impl_.mdsubscriberesponse_);
  }
  if (from._internal_has_pushmarketdata()) {
    _this->_impl_.pushmarketdata_ = new ::com::htsc::mdc::insight::model::MarketData(*from._impl_.pushmarketdata_);
  }
  if (from._internal_has_pushmarketdatastream()) {
    _this->_impl_.pushmarketdatastream_ = new ::com::htsc::mdc::insight::model::MarketDataStream(*from._impl_.pushmarketdatastream_);
  }
  if (from._internal_has_mdqueryrequest()) {
    _this->_impl_.mdqueryrequest_ = new ::com::htsc::mdc::insight::model::MDQueryRequest(*from._impl_.mdqueryrequest_);
  }
  if (from._internal_has_mdqueryresponse()) {
    _this->_impl_.mdqueryresponse_ = new ::com::htsc::mdc::insight::model::MDQueryResponse(*from._impl_.mdqueryresponse_);
  }
  if (from._internal_has_playbackrequest()) {
    _this->_impl_.playbackrequest_ = new ::com::htsc::mdc::insight::model::PlaybackRequest(*from._impl_.playbackrequest_);
  }
  if (from._internal_has_playbackresponse()) {
    _this->_impl_.playbackresponse_ = new ::com::htsc::mdc::insight::model::PlaybackResponse(*from._impl_.playbackresponse_);
  }
  if (from._internal_has_playbackcontrolrequest()) {
    _this->_impl_.playbackcontrolrequest_ = new ::com::htsc::mdc::insight::model::PlaybackControlRequest(*from._impl_.playbackcontrolrequest_);
  }
  if (from._internal_has_playbackcontrolresponse()) {
    _this->_impl_.playbackcontrolresponse_ = new ::com::htsc::mdc::insight::model::PlaybackControlResponse(*from._impl_.playbackcontrolresponse_);
  }
  if (from._internal_has_playbackstatusrequest()) {
    _this->_impl_.playbackstatusrequest_ = new ::com::htsc::mdc::insight::model::PlaybackStatusRequest(*from._impl_.playbackstatusrequest_);
  }
  if (from._internal_has_playbackstatus()) {
    _this->_impl_.playbackstatus_ = new ::com::htsc::mdc::insight::model::PlaybackStatus(*from._impl_.playbackstatus_);
  }
  if (from._internal_has_playbackpayload()) {
    _this->_impl_.playbackpayload_ = new ::com::htsc::mdc::insight::model::PlaybackPayload(*from._impl_.playbackpayload_);
  }
  ::memcpy(&_impl_.interactionid_, &from._impl_.interactionid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.type_) -
    reinterpret_cast<char*>(&_impl_.interactionid_)) + sizeof(_impl_.type_));
  // @@protoc_insertion_point(copy_constructor:com.htsc.mdc.insight.model.MessageBody)
}

inline void MessageBody::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.generalerrormessage_){nullptr}
    , decltype(_impl_.loginrequest_){nullptr}
    , decltype(_impl_.loginresponse_){nullptr}
    , decltype(_impl_.servicediscoveryrequest_){nullptr}
    , decltype(_impl_.servicediscoveryresponse_){nullptr}
    , decltype(_impl_.mdsubscriberequest_){nullptr}
    , decltype(_impl_.mdsubscriberesponse_){nullptr}
    , decltype(_impl_.pushmarketdata_){nullptr}
    , decltype(_impl_.pushmarketdatastream_){nullptr}
    , decltype(_impl_.mdqueryrequest_){nullptr}
    , decltype(_impl_.mdqueryresponse_){nullptr}
    , decltype(_impl_.playbackrequest_){nullptr}
    , decltype(_impl_.playbackresponse_){nullptr}
    , decltype(_impl_.playbackcontrolrequest_){nullptr}
    , decltype(_impl_.playbackcontrolresponse_){nullptr}
    , decltype(_impl_.playbackstatusrequest_){nullptr}
    , decltype(_impl_.playbackstatus_){nullptr}
    , decltype(_impl_.playbackpayload_){nullptr}
    , decltype(_impl_.interactionid_){int64_t{0}}
    , decltype(_impl_.type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MessageBody::~MessageBody() {
  // @@protoc_insertion_point(destructor:com.htsc.mdc.insight.model.MessageBody)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MessageBody::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.generalerrormessage_;
  if (this != internal_default_instance()) delete _impl_.loginrequest_;
  if (this != internal_default_instance()) delete _impl_.loginresponse_;
  if (this != internal_default_instance()) delete _impl_.servicediscoveryrequest_;
  if (this != internal_default_instance()) delete _impl_.servicediscoveryresponse_;
  if (this != internal_default_instance()) delete _impl_.mdsubscriberequest_;
  if (this != internal_default_instance()) delete _impl_.mdsubscriberesponse_;
  if (this != internal_default_instance()) delete _impl_.pushmarketdata_;
  if (this != internal_default_instance()) delete _impl_.pushmarketdatastream_;
  if (this != internal_default_instance()) delete _impl_.mdqueryrequest_;
  if (this != internal_default_instance()) delete _impl_.mdqueryresponse_;
  if (this != internal_default_instance()) delete _impl_.playbackrequest_;
  if (this != internal_default_instance()) delete _impl_.playbackresponse_;
  if (this != internal_default_instance()) delete _impl_.playbackcontrolrequest_;
  if (this != internal_default_instance()) delete _impl_.playbackcontrolresponse_;
  if (this != internal_default_instance()) delete _impl_.playbackstatusrequest_;
  if (this != internal_default_instance()) delete _impl_.playbackstatus_;
  if (this != internal_default_instance()) delete _impl_.playbackpayload_;
}

void MessageBody::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MessageBody::Clear() {
// @@protoc_insertion_point(message_clear_start:com.htsc.mdc.insight.model.MessageBody)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.generalerrormessage_ != nullptr) {
    delete _impl_.generalerrormessage_;
  }
  _impl_.generalerrormessage_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.loginrequest_ != nullptr) {
    delete _impl_.loginrequest_;
  }
  _impl_.loginrequest_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.loginresponse_ != nullptr) {
    delete _impl_.loginresponse_;
  }
  _impl_.loginresponse_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.servicediscoveryrequest_ != nullptr) {
    delete _impl_.servicediscoveryrequest_;
  }
  _impl_.servicediscoveryrequest_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.servicediscoveryresponse_ != nullptr) {
    delete _impl_.servicediscoveryresponse_;
  }
  _impl_.servicediscoveryresponse_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.mdsubscriberequest_ != nullptr) {
    delete _impl_.mdsubscriberequest_;
  }
  _impl_.mdsubscriberequest_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.mdsubscriberesponse_ != nullptr) {
    delete _impl_.mdsubscriberesponse_;
  }
  _impl_.mdsubscriberesponse_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.pushmarketdata_ != nullptr) {
    delete _impl_.pushmarketdata_;
  }
  _impl_.pushmarketdata_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.pushmarketdatastream_ != nullptr) {
    delete _impl_.pushmarketdatastream_;
  }
  _impl_.pushmarketdatastream_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.mdqueryrequest_ != nullptr) {
    delete _impl_.mdqueryrequest_;
  }
  _impl_.mdqueryrequest_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.mdqueryresponse_ != nullptr) {
    delete _impl_.mdqueryresponse_;
  }
  _impl_.mdqueryresponse_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.playbackrequest_ != nullptr) {
    delete _impl_.playbackrequest_;
  }
  _impl_.playbackrequest_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.playbackresponse_ != nullptr) {
    delete _impl_.playbackresponse_;
  }
  _impl_.playbackresponse_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.playbackcontrolrequest_ != nullptr) {
    delete _impl_.playbackcontrolrequest_;
  }
  _impl_.playbackcontrolrequest_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.playbackcontrolresponse_ != nullptr) {
    delete _impl_.playbackcontrolresponse_;
  }
  _impl_.playbackcontrolresponse_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.playbackstatusrequest_ != nullptr) {
    delete _impl_.playbackstatusrequest_;
  }
  _impl_.playbackstatusrequest_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.playbackstatus_ != nullptr) {
    delete _impl_.playbackstatus_;
  }
  _impl_.playbackstatus_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.playbackpayload_ != nullptr) {
    delete _impl_.playbackpayload_;
  }
  _impl_.playbackpayload_ = nullptr;
  ::memset(&_impl_.interactionid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.interactionid_)) + sizeof(_impl_.type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MessageBody::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .com.htsc.mdc.insight.model.EMessageType type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::com::htsc::mdc::insight::model::EMessageType>(val));
        } else
          goto handle_unusual;
        continue;
      // int64 interactionId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.interactionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .com.htsc.mdc.insight.model.InsightErrorContext generalErrorMessage = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_generalerrormessage(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .com.htsc.mdc.insight.model.LoginRequest loginRequest = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_loginrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .com.htsc.mdc.insight.model.LoginResponse loginResponse = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_loginresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .com.htsc.mdc.insight.model.ServiceDiscoveryRequest serviceDiscoveryRequest = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_servicediscoveryrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .com.htsc.mdc.insight.model.ServiceDiscoveryResponse serviceDiscoveryResponse = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_servicediscoveryresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .com.htsc.mdc.insight.model.MDSubscribeRequest mdSubscribeRequest = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_mdsubscriberequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .com.htsc.mdc.insight.model.MDSubscribeResponse mdSubscribeResponse = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_mdsubscriberesponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .com.htsc.mdc.insight.model.MarketData pushMarketData = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_pushmarketdata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .com.htsc.mdc.insight.model.MarketDataStream pushMarketDataStream = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_pushmarketdatastream(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .com.htsc.mdc.insight.model.MDQueryRequest mdQueryRequest = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 242)) {
          ptr = ctx->ParseMessage(_internal_mutable_mdqueryrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .com.htsc.mdc.insight.model.MDQueryResponse mdQueryResponse = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_mdqueryresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .com.htsc.mdc.insight.model.PlaybackRequest playbackRequest = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 2)) {
          ptr = ctx->ParseMessage(_internal_mutable_playbackrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .com.htsc.mdc.insight.model.PlaybackResponse playbackResponse = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_playbackresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .com.htsc.mdc.insight.model.PlaybackControlRequest playbackControlRequest = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_playbackcontrolrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .com.htsc.mdc.insight.model.PlaybackControlResponse playbackControlResponse = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_playbackcontrolresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .com.htsc.mdc.insight.model.PlaybackStatusRequest playbackStatusRequest = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_playbackstatusrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .com.htsc.mdc.insight.model.PlaybackStatus playbackStatus = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_playbackstatus(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .com.htsc.mdc.insight.model.PlaybackPayload playbackPayload = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_playbackpayload(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MessageBody::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.htsc.mdc.insight.model.MessageBody)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.htsc.mdc.insight.model.EMessageType type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // int64 interactionId = 2;
  if (this->_internal_interactionid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_interactionid(), target);
  }

  // .com.htsc.mdc.insight.model.InsightErrorContext generalErrorMessage = 10;
  if (this->_internal_has_generalerrormessage()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::generalerrormessage(this),
        _Internal::generalerrormessage(this).GetCachedSize(), target, stream);
  }

  // .com.htsc.mdc.insight.model.LoginRequest loginRequest = 11;
  if (this->_internal_has_loginrequest()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::loginrequest(this),
        _Internal::loginrequest(this).GetCachedSize(), target, stream);
  }

  // .com.htsc.mdc.insight.model.LoginResponse loginResponse = 12;
  if (this->_internal_has_loginresponse()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, _Internal::loginresponse(this),
        _Internal::loginresponse(this).GetCachedSize(), target, stream);
  }

  // .com.htsc.mdc.insight.model.ServiceDiscoveryRequest serviceDiscoveryRequest = 13;
  if (this->_internal_has_servicediscoveryrequest()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::servicediscoveryrequest(this),
        _Internal::servicediscoveryrequest(this).GetCachedSize(), target, stream);
  }

  // .com.htsc.mdc.insight.model.ServiceDiscoveryResponse serviceDiscoveryResponse = 14;
  if (this->_internal_has_servicediscoveryresponse()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(14, _Internal::servicediscoveryresponse(this),
        _Internal::servicediscoveryresponse(this).GetCachedSize(), target, stream);
  }

  // .com.htsc.mdc.insight.model.MDSubscribeRequest mdSubscribeRequest = 15;
  if (this->_internal_has_mdsubscriberequest()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(15, _Internal::mdsubscriberequest(this),
        _Internal::mdsubscriberequest(this).GetCachedSize(), target, stream);
  }

  // .com.htsc.mdc.insight.model.MDSubscribeResponse mdSubscribeResponse = 16;
  if (this->_internal_has_mdsubscriberesponse()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(16, _Internal::mdsubscriberesponse(this),
        _Internal::mdsubscriberesponse(this).GetCachedSize(), target, stream);
  }

  // .com.htsc.mdc.insight.model.MarketData pushMarketData = 20;
  if (this->_internal_has_pushmarketdata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(20, _Internal::pushmarketdata(this),
        _Internal::pushmarketdata(this).GetCachedSize(), target, stream);
  }

  // .com.htsc.mdc.insight.model.MarketDataStream pushMarketDataStream = 21;
  if (this->_internal_has_pushmarketdatastream()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(21, _Internal::pushmarketdatastream(this),
        _Internal::pushmarketdatastream(this).GetCachedSize(), target, stream);
  }

  // .com.htsc.mdc.insight.model.MDQueryRequest mdQueryRequest = 30;
  if (this->_internal_has_mdqueryrequest()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(30, _Internal::mdqueryrequest(this),
        _Internal::mdqueryrequest(this).GetCachedSize(), target, stream);
  }

  // .com.htsc.mdc.insight.model.MDQueryResponse mdQueryResponse = 31;
  if (this->_internal_has_mdqueryresponse()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(31, _Internal::mdqueryresponse(this),
        _Internal::mdqueryresponse(this).GetCachedSize(), target, stream);
  }

  // .com.htsc.mdc.insight.model.PlaybackRequest playbackRequest = 32;
  if (this->_internal_has_playbackrequest()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(32, _Internal::playbackrequest(this),
        _Internal::playbackrequest(this).GetCachedSize(), target, stream);
  }

  // .com.htsc.mdc.insight.model.PlaybackResponse playbackResponse = 33;
  if (this->_internal_has_playbackresponse()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(33, _Internal::playbackresponse(this),
        _Internal::playbackresponse(this).GetCachedSize(), target, stream);
  }

  // .com.htsc.mdc.insight.model.PlaybackControlRequest playbackControlRequest = 34;
  if (this->_internal_has_playbackcontrolrequest()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(34, _Internal::playbackcontrolrequest(this),
        _Internal::playbackcontrolrequest(this).GetCachedSize(), target, stream);
  }

  // .com.htsc.mdc.insight.model.PlaybackControlResponse playbackControlResponse = 35;
  if (this->_internal_has_playbackcontrolresponse()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(35, _Internal::playbackcontrolresponse(this),
        _Internal::playbackcontrolresponse(this).GetCachedSize(), target, stream);
  }

  // .com.htsc.mdc.insight.model.PlaybackStatusRequest playbackStatusRequest = 36;
  if (this->_internal_has_playbackstatusrequest()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(36, _Internal::playbackstatusrequest(this),
        _Internal::playbackstatusrequest(this).GetCachedSize(), target, stream);
  }

  // .com.htsc.mdc.insight.model.PlaybackStatus playbackStatus = 37;
  if (this->_internal_has_playbackstatus()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(37, _Internal::playbackstatus(this),
        _Internal::playbackstatus(this).GetCachedSize(), target, stream);
  }

  // .com.htsc.mdc.insight.model.PlaybackPayload playbackPayload = 38;
  if (this->_internal_has_playbackpayload()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(38, _Internal::playbackpayload(this),
        _Internal::playbackpayload(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.htsc.mdc.insight.model.MessageBody)
  return target;
}

size_t MessageBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.htsc.mdc.insight.model.MessageBody)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .com.htsc.mdc.insight.model.InsightErrorContext generalErrorMessage = 10;
  if (this->_internal_has_generalerrormessage()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.generalerrormessage_);
  }

  // .com.htsc.mdc.insight.model.LoginRequest loginRequest = 11;
  if (this->_internal_has_loginrequest()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.loginrequest_);
  }

  // .com.htsc.mdc.insight.model.LoginResponse loginResponse = 12;
  if (this->_internal_has_loginresponse()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.loginresponse_);
  }

  // .com.htsc.mdc.insight.model.ServiceDiscoveryRequest serviceDiscoveryRequest = 13;
  if (this->_internal_has_servicediscoveryrequest()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.servicediscoveryrequest_);
  }

  // .com.htsc.mdc.insight.model.ServiceDiscoveryResponse serviceDiscoveryResponse = 14;
  if (this->_internal_has_servicediscoveryresponse()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.servicediscoveryresponse_);
  }

  // .com.htsc.mdc.insight.model.MDSubscribeRequest mdSubscribeRequest = 15;
  if (this->_internal_has_mdsubscriberequest()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.mdsubscriberequest_);
  }

  // .com.htsc.mdc.insight.model.MDSubscribeResponse mdSubscribeResponse = 16;
  if (this->_internal_has_mdsubscriberesponse()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.mdsubscriberesponse_);
  }

  // .com.htsc.mdc.insight.model.MarketData pushMarketData = 20;
  if (this->_internal_has_pushmarketdata()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pushmarketdata_);
  }

  // .com.htsc.mdc.insight.model.MarketDataStream pushMarketDataStream = 21;
  if (this->_internal_has_pushmarketdatastream()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pushmarketdatastream_);
  }

  // .com.htsc.mdc.insight.model.MDQueryRequest mdQueryRequest = 30;
  if (this->_internal_has_mdqueryrequest()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.mdqueryrequest_);
  }

  // .com.htsc.mdc.insight.model.MDQueryResponse mdQueryResponse = 31;
  if (this->_internal_has_mdqueryresponse()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.mdqueryresponse_);
  }

  // .com.htsc.mdc.insight.model.PlaybackRequest playbackRequest = 32;
  if (this->_internal_has_playbackrequest()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.playbackrequest_);
  }

  // .com.htsc.mdc.insight.model.PlaybackResponse playbackResponse = 33;
  if (this->_internal_has_playbackresponse()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.playbackresponse_);
  }

  // .com.htsc.mdc.insight.model.PlaybackControlRequest playbackControlRequest = 34;
  if (this->_internal_has_playbackcontrolrequest()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.playbackcontrolrequest_);
  }

  // .com.htsc.mdc.insight.model.PlaybackControlResponse playbackControlResponse = 35;
  if (this->_internal_has_playbackcontrolresponse()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.playbackcontrolresponse_);
  }

  // .com.htsc.mdc.insight.model.PlaybackStatusRequest playbackStatusRequest = 36;
  if (this->_internal_has_playbackstatusrequest()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.playbackstatusrequest_);
  }

  // .com.htsc.mdc.insight.model.PlaybackStatus playbackStatus = 37;
  if (this->_internal_has_playbackstatus()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.playbackstatus_);
  }

  // .com.htsc.mdc.insight.model.PlaybackPayload playbackPayload = 38;
  if (this->_internal_has_playbackpayload()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.playbackpayload_);
  }

  // int64 interactionId = 2;
  if (this->_internal_interactionid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_interactionid());
  }

  // .com.htsc.mdc.insight.model.EMessageType type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MessageBody::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MessageBody::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MessageBody::GetClassData() const { return &_class_data_; }


void MessageBody::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MessageBody*>(&to_msg);
  auto& from = static_cast<const MessageBody&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.htsc.mdc.insight.model.MessageBody)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_generalerrormessage()) {
    _this->_internal_mutable_generalerrormessage()->::com::htsc::mdc::insight::model::InsightErrorContext::MergeFrom(
        from._internal_generalerrormessage());
  }
  if (from._internal_has_loginrequest()) {
    _this->_internal_mutable_loginrequest()->::com::htsc::mdc::insight::model::LoginRequest::MergeFrom(
        from._internal_loginrequest());
  }
  if (from._internal_has_loginresponse()) {
    _this->_internal_mutable_loginresponse()->::com::htsc::mdc::insight::model::LoginResponse::MergeFrom(
        from._internal_loginresponse());
  }
  if (from._internal_has_servicediscoveryrequest()) {
    _this->_internal_mutable_servicediscoveryrequest()->::com::htsc::mdc::insight::model::ServiceDiscoveryRequest::MergeFrom(
        from._internal_servicediscoveryrequest());
  }
  if (from._internal_has_servicediscoveryresponse()) {
    _this->_internal_mutable_servicediscoveryresponse()->::com::htsc::mdc::insight::model::ServiceDiscoveryResponse::MergeFrom(
        from._internal_servicediscoveryresponse());
  }
  if (from._internal_has_mdsubscriberequest()) {
    _this->_internal_mutable_mdsubscriberequest()->::com::htsc::mdc::insight::model::MDSubscribeRequest::MergeFrom(
        from._internal_mdsubscriberequest());
  }
  if (from._internal_has_mdsubscriberesponse()) {
    _this->_internal_mutable_mdsubscriberesponse()->::com::htsc::mdc::insight::model::MDSubscribeResponse::MergeFrom(
        from._internal_mdsubscriberesponse());
  }
  if (from._internal_has_pushmarketdata()) {
    _this->_internal_mutable_pushmarketdata()->::com::htsc::mdc::insight::model::MarketData::MergeFrom(
        from._internal_pushmarketdata());
  }
  if (from._internal_has_pushmarketdatastream()) {
    _this->_internal_mutable_pushmarketdatastream()->::com::htsc::mdc::insight::model::MarketDataStream::MergeFrom(
        from._internal_pushmarketdatastream());
  }
  if (from._internal_has_mdqueryrequest()) {
    _this->_internal_mutable_mdqueryrequest()->::com::htsc::mdc::insight::model::MDQueryRequest::MergeFrom(
        from._internal_mdqueryrequest());
  }
  if (from._internal_has_mdqueryresponse()) {
    _this->_internal_mutable_mdqueryresponse()->::com::htsc::mdc::insight::model::MDQueryResponse::MergeFrom(
        from._internal_mdqueryresponse());
  }
  if (from._internal_has_playbackrequest()) {
    _this->_internal_mutable_playbackrequest()->::com::htsc::mdc::insight::model::PlaybackRequest::MergeFrom(
        from._internal_playbackrequest());
  }
  if (from._internal_has_playbackresponse()) {
    _this->_internal_mutable_playbackresponse()->::com::htsc::mdc::insight::model::PlaybackResponse::MergeFrom(
        from._internal_playbackresponse());
  }
  if (from._internal_has_playbackcontrolrequest()) {
    _this->_internal_mutable_playbackcontrolrequest()->::com::htsc::mdc::insight::model::PlaybackControlRequest::MergeFrom(
        from._internal_playbackcontrolrequest());
  }
  if (from._internal_has_playbackcontrolresponse()) {
    _this->_internal_mutable_playbackcontrolresponse()->::com::htsc::mdc::insight::model::PlaybackControlResponse::MergeFrom(
        from._internal_playbackcontrolresponse());
  }
  if (from._internal_has_playbackstatusrequest()) {
    _this->_internal_mutable_playbackstatusrequest()->::com::htsc::mdc::insight::model::PlaybackStatusRequest::MergeFrom(
        from._internal_playbackstatusrequest());
  }
  if (from._internal_has_playbackstatus()) {
    _this->_internal_mutable_playbackstatus()->::com::htsc::mdc::insight::model::PlaybackStatus::MergeFrom(
        from._internal_playbackstatus());
  }
  if (from._internal_has_playbackpayload()) {
    _this->_internal_mutable_playbackpayload()->::com::htsc::mdc::insight::model::PlaybackPayload::MergeFrom(
        from._internal_playbackpayload());
  }
  if (from._internal_interactionid() != 0) {
    _this->_internal_set_interactionid(from._internal_interactionid());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MessageBody::CopyFrom(const MessageBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.htsc.mdc.insight.model.MessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageBody::IsInitialized() const {
  return true;
}

void MessageBody::InternalSwap(MessageBody* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MessageBody, _impl_.type_)
      + sizeof(MessageBody::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(MessageBody, _impl_.generalerrormessage_)>(
          reinterpret_cast<char*>(&_impl_.generalerrormessage_),
          reinterpret_cast<char*>(&other->_impl_.generalerrormessage_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MessageBody::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MessageBody_2eproto_getter, &descriptor_table_MessageBody_2eproto_once,
      file_level_metadata_MessageBody_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::htsc::mdc::insight::model::MessageBody*
Arena::CreateMaybeMessage< ::com::htsc::mdc::insight::model::MessageBody >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::htsc::mdc::insight::model::MessageBody >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

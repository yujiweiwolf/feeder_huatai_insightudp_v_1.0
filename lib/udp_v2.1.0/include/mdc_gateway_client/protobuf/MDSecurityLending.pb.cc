// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MDSecurityLending.proto

#include "MDSecurityLending.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {
PROTOBUF_CONSTEXPR MDSecurityLending::MDSecurityLending(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.validborrows_)*/{}
  , /*decltype(_impl_.validalends_)*/{}
  , /*decltype(_impl_.validblends_)*/{}
  , /*decltype(_impl_.validclends_)*/{}
  , /*decltype(_impl_.alends_)*/{}
  , /*decltype(_impl_.blends_)*/{}
  , /*decltype(_impl_.clends_)*/{}
  , /*decltype(_impl_.validreservationborrows_)*/{}
  , /*decltype(_impl_.validreservationlends_)*/{}
  , /*decltype(_impl_.reservationborrows_)*/{}
  , /*decltype(_impl_.reservationlends_)*/{}
  , /*decltype(_impl_.validotclends_)*/{}
  , /*decltype(_impl_.htscborrows_)*/{}
  , /*decltype(_impl_.loans_)*/{}
  , /*decltype(_impl_.externallends_)*/{}
  , /*decltype(_impl_.marketloans_)*/{}
  , /*decltype(_impl_.marketlends_)*/{}
  , /*decltype(_impl_.marketborrows_)*/{}
  , /*decltype(_impl_.htscsecurityid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.tradingphasecode_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.htscborrowterm_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.validlendterm_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.mddate_)*/0
  , /*decltype(_impl_.mdtime_)*/0
  , /*decltype(_impl_.datatimestamp_)*/int64_t{0}
  , /*decltype(_impl_.securityidsource_)*/0
  , /*decltype(_impl_.securitytype_)*/0
  , /*decltype(_impl_.preweightedrate_)*/int64_t{0}
  , /*decltype(_impl_.prehighrate_)*/int64_t{0}
  , /*decltype(_impl_.prelowrate_)*/int64_t{0}
  , /*decltype(_impl_.prehtscvolume_)*/int64_t{0}
  , /*decltype(_impl_.premarketvolume_)*/int64_t{0}
  , /*decltype(_impl_.weightedrate_)*/int64_t{0}
  , /*decltype(_impl_.highrate_)*/int64_t{0}
  , /*decltype(_impl_.lowrate_)*/int64_t{0}
  , /*decltype(_impl_.htscvolume_)*/int64_t{0}
  , /*decltype(_impl_.marketvolume_)*/int64_t{0}
  , /*decltype(_impl_.bestborrowrate_)*/int64_t{0}
  , /*decltype(_impl_.bestlendrate_)*/int64_t{0}
  , /*decltype(_impl_.bestreservationborrowrate_)*/int64_t{0}
  , /*decltype(_impl_.bestreservationlendrate_)*/int64_t{0}
  , /*decltype(_impl_.validlendamount_)*/int64_t{0}
  , /*decltype(_impl_.validalendamount_)*/int64_t{0}
  , /*decltype(_impl_.validblendamount_)*/int64_t{0}
  , /*decltype(_impl_.htscborrowamount_)*/int64_t{0}
  , /*decltype(_impl_.htscborrowrate_)*/int64_t{0}
  , /*decltype(_impl_.bestloanrate_)*/int64_t{0}
  , /*decltype(_impl_.htscborrowtradevolume_)*/int64_t{0}
  , /*decltype(_impl_.htscborrowweightedrate_)*/int64_t{0}
  , /*decltype(_impl_.prehtscborrowtradevolume_)*/int64_t{0}
  , /*decltype(_impl_.prehtscborrowweightedrate_)*/int64_t{0}
  , /*decltype(_impl_.htscborroworderamount_)*/int64_t{0}
  , /*decltype(_impl_.validlendorderamount_)*/int64_t{0}
  , /*decltype(_impl_.validborrowamount_)*/int64_t{0}
  , /*decltype(_impl_.loanamount_)*/int64_t{0}
  , /*decltype(_impl_.datamultiplepowerof10_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MDSecurityLendingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MDSecurityLendingDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MDSecurityLendingDefaultTypeInternal() {}
  union {
    MDSecurityLending _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MDSecurityLendingDefaultTypeInternal _MDSecurityLending_default_instance_;
PROTOBUF_CONSTEXPR ADValidSecurityLendingEntry::ADValidSecurityLendingEntry(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.rate_)*/int64_t{0}
  , /*decltype(_impl_.level_)*/0
  , /*decltype(_impl_.term_)*/0
  , /*decltype(_impl_.amount_)*/int64_t{0}
  , /*decltype(_impl_.htscprovided_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ADValidSecurityLendingEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ADValidSecurityLendingEntryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ADValidSecurityLendingEntryDefaultTypeInternal() {}
  union {
    ADValidSecurityLendingEntry _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ADValidSecurityLendingEntryDefaultTypeInternal _ADValidSecurityLendingEntry_default_instance_;
PROTOBUF_CONSTEXPR ADSecurityLendingEntry::ADSecurityLendingEntry(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.rate_)*/int64_t{0}
  , /*decltype(_impl_.level_)*/0
  , /*decltype(_impl_.term_)*/0
  , /*decltype(_impl_.totalamount_)*/int64_t{0}
  , /*decltype(_impl_.matchedamount_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ADSecurityLendingEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ADSecurityLendingEntryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ADSecurityLendingEntryDefaultTypeInternal() {}
  union {
    ADSecurityLendingEntry _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ADSecurityLendingEntryDefaultTypeInternal _ADSecurityLendingEntry_default_instance_;
PROTOBUF_CONSTEXPR ADEstimatedSecurityLendingEntry::ADEstimatedSecurityLendingEntry(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.term_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.rate_)*/int64_t{0}
  , /*decltype(_impl_.level_)*/0
  , /*decltype(_impl_.postponeprobability_)*/0
  , /*decltype(_impl_.amount_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ADEstimatedSecurityLendingEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ADEstimatedSecurityLendingEntryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ADEstimatedSecurityLendingEntryDefaultTypeInternal() {}
  union {
    ADEstimatedSecurityLendingEntry _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ADEstimatedSecurityLendingEntryDefaultTypeInternal _ADEstimatedSecurityLendingEntry_default_instance_;
}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com
static ::_pb::Metadata file_level_metadata_MDSecurityLending_2eproto[4];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_MDSecurityLending_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_MDSecurityLending_2eproto = nullptr;

const uint32_t TableStruct_MDSecurityLending_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.htscsecurityid_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.mddate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.mdtime_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.datatimestamp_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.tradingphasecode_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.securityidsource_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.securitytype_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.preweightedrate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.prehighrate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.prelowrate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.prehtscvolume_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.premarketvolume_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.weightedrate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.highrate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.lowrate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.htscvolume_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.marketvolume_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.bestborrowrate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.bestlendrate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.validborrows_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.validalends_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.validblends_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.validclends_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.alends_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.blends_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.clends_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.validreservationborrows_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.validreservationlends_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.reservationborrows_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.reservationlends_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.validotclends_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.bestreservationborrowrate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.bestreservationlendrate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.validlendamount_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.validalendamount_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.validblendamount_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.htscborrowamount_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.htscborrowrate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.bestloanrate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.htscborrowtradevolume_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.htscborrowweightedrate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.prehtscborrowtradevolume_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.prehtscborrowweightedrate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.htscborrows_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.loans_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.datamultiplepowerof10_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.externallends_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.htscborrowterm_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.htscborroworderamount_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.validlendterm_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.validlendorderamount_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.marketloans_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.marketlends_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.validborrowamount_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.loanamount_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _impl_.marketborrows_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry, _impl_.level_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry, _impl_.rate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry, _impl_.term_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry, _impl_.amount_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry, _impl_.htscprovided_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADSecurityLendingEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADSecurityLendingEntry, _impl_.level_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADSecurityLendingEntry, _impl_.rate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADSecurityLendingEntry, _impl_.term_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADSecurityLendingEntry, _impl_.totalamount_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADSecurityLendingEntry, _impl_.matchedamount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADEstimatedSecurityLendingEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADEstimatedSecurityLendingEntry, _impl_.level_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADEstimatedSecurityLendingEntry, _impl_.rate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADEstimatedSecurityLendingEntry, _impl_.term_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADEstimatedSecurityLendingEntry, _impl_.amount_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADEstimatedSecurityLendingEntry, _impl_.postponeprobability_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::com::htsc::mdc::insight::model::MDSecurityLending)},
  { 62, -1, -1, sizeof(::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry)},
  { 73, -1, -1, sizeof(::com::htsc::mdc::insight::model::ADSecurityLendingEntry)},
  { 84, -1, -1, sizeof(::com::htsc::mdc::insight::model::ADEstimatedSecurityLendingEntry)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::com::htsc::mdc::insight::model::_MDSecurityLending_default_instance_._instance,
  &::com::htsc::mdc::insight::model::_ADValidSecurityLendingEntry_default_instance_._instance,
  &::com::htsc::mdc::insight::model::_ADSecurityLendingEntry_default_instance_._instance,
  &::com::htsc::mdc::insight::model::_ADEstimatedSecurityLendingEntry_default_instance_._instance,
};

const char descriptor_table_protodef_MDSecurityLending_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\027MDSecurityLending.proto\022\032com.htsc.mdc."
  "insight.model\032\027ESecurityIDSource.proto\032\023"
  "ESecurityType.proto\"\213\023\n\021MDSecurityLendin"
  "g\022\026\n\016HTSCSecurityID\030\001 \001(\t\022\016\n\006MDDate\030\002 \001("
  "\005\022\016\n\006MDTime\030\003 \001(\005\022\025\n\rDataTimestamp\030\004 \001(\003"
  "\022\030\n\020TradingPhaseCode\030\005 \001(\t\022\?\n\020securityID"
  "Source\030\006 \001(\0162%.com.htsc.mdc.model.ESecur"
  "ityIDSource\0227\n\014securityType\030\007 \001(\0162!.com."
  "htsc.mdc.model.ESecurityType\022\027\n\017PreWeigh"
  "tedRate\030\n \001(\003\022\023\n\013PreHighRate\030\013 \001(\003\022\022\n\nPr"
  "eLowRate\030\014 \001(\003\022\025\n\rPreHtscVolume\030\r \001(\003\022\027\n"
  "\017PreMarketVolume\030\016 \001(\003\022\024\n\014WeightedRate\030\017"
  " \001(\003\022\020\n\010HighRate\030\020 \001(\003\022\017\n\007LowRate\030\021 \001(\003\022"
  "\022\n\nHtscVolume\030\022 \001(\003\022\024\n\014MarketVolume\030\023 \001("
  "\003\022\026\n\016BestBorrowRate\030\024 \001(\003\022\024\n\014BestLendRat"
  "e\030\025 \001(\003\022M\n\014ValidBorrows\030\033 \003(\01327.com.htsc"
  ".mdc.insight.model.ADValidSecurityLendin"
  "gEntry\022L\n\013ValidALends\030\034 \003(\01327.com.htsc.m"
  "dc.insight.model.ADValidSecurityLendingE"
  "ntry\022L\n\013ValidBLends\030\035 \003(\01327.com.htsc.mdc"
  ".insight.model.ADValidSecurityLendingEnt"
  "ry\022L\n\013ValidCLends\030\036 \003(\01327.com.htsc.mdc.i"
  "nsight.model.ADValidSecurityLendingEntry"
  "\022B\n\006ALends\030\037 \003(\01322.com.htsc.mdc.insight."
  "model.ADSecurityLendingEntry\022B\n\006BLends\030 "
  " \003(\01322.com.htsc.mdc.insight.model.ADSecu"
  "rityLendingEntry\022B\n\006CLends\030! \003(\01322.com.h"
  "tsc.mdc.insight.model.ADSecurityLendingE"
  "ntry\022X\n\027ValidReservationBorrows\030\" \003(\01327."
  "com.htsc.mdc.insight.model.ADValidSecuri"
  "tyLendingEntry\022V\n\025ValidReservationLends\030"
  "# \003(\01327.com.htsc.mdc.insight.model.ADVal"
  "idSecurityLendingEntry\022N\n\022ReservationBor"
  "rows\030$ \003(\01322.com.htsc.mdc.insight.model."
  "ADSecurityLendingEntry\022L\n\020ReservationLen"
  "ds\030% \003(\01322.com.htsc.mdc.insight.model.AD"
  "SecurityLendingEntry\022N\n\rValidOtcLends\030& "
  "\003(\01327.com.htsc.mdc.insight.model.ADValid"
  "SecurityLendingEntry\022!\n\031BestReservationB"
  "orrowRate\030\' \001(\003\022\037\n\027BestReservationLendRa"
  "te\030( \001(\003\022\027\n\017ValidLendAmount\030) \001(\003\022\030\n\020Val"
  "idALendAmount\030* \001(\003\022\030\n\020ValidBLendAmount\030"
  "+ \001(\003\022\030\n\020HtscBorrowAmount\030, \001(\003\022\026\n\016HtscB"
  "orrowRate\030- \001(\003\022\024\n\014BestLoanRate\030. \001(\003\022\035\n"
  "\025HtscBorrowTradeVolume\030/ \001(\003\022\036\n\026HtscBorr"
  "owWeightedRate\0300 \001(\003\022 \n\030PreHtscBorrowTra"
  "deVolume\0301 \001(\003\022!\n\031PreHtscBorrowWeightedR"
  "ate\0302 \001(\003\022L\n\013HtscBorrows\0303 \003(\01327.com.hts"
  "c.mdc.insight.model.ADValidSecurityLendi"
  "ngEntry\022F\n\005Loans\0304 \003(\01327.com.htsc.mdc.in"
  "sight.model.ADValidSecurityLendingEntry\022"
  "\035\n\025DataMultiplePowerOf10\0305 \001(\005\022R\n\rExtern"
  "alLends\0306 \003(\0132;.com.htsc.mdc.insight.mod"
  "el.ADEstimatedSecurityLendingEntry\022\026\n\016Ht"
  "scBorrowTerm\0309 \001(\t\022\035\n\025HtscBorrowOrderAmo"
  "unt\030: \001(\003\022\025\n\rValidLendTerm\030; \001(\t\022\034\n\024Vali"
  "dLendOrderAmount\030< \001(\003\022L\n\013MarketLoans\030= "
  "\003(\01327.com.htsc.mdc.insight.model.ADValid"
  "SecurityLendingEntry\022L\n\013MarketLends\030> \003("
  "\01327.com.htsc.mdc.insight.model.ADValidSe"
  "curityLendingEntry\022\031\n\021ValidBorrowAmount\030"
  "\? \001(\003\022\022\n\nLoanAmount\030@ \001(\003\022N\n\rMarketBorro"
  "ws\030A \003(\01327.com.htsc.mdc.insight.model.AD"
  "ValidSecurityLendingEntry\"n\n\033ADValidSecu"
  "rityLendingEntry\022\r\n\005Level\030\001 \001(\005\022\014\n\004Rate\030"
  "\002 \001(\003\022\014\n\004Term\030\003 \001(\005\022\016\n\006Amount\030\004 \001(\003\022\024\n\014H"
  "tscProvided\030\005 \001(\010\"o\n\026ADSecurityLendingEn"
  "try\022\r\n\005Level\030\001 \001(\005\022\014\n\004Rate\030\002 \001(\003\022\014\n\004Term"
  "\030\003 \001(\005\022\023\n\013TotalAmount\030\004 \001(\003\022\025\n\rMatchedAm"
  "ount\030\005 \001(\003\"y\n\037ADEstimatedSecurityLending"
  "Entry\022\r\n\005Level\030\001 \001(\005\022\014\n\004Rate\030\002 \001(\003\022\014\n\004Te"
  "rm\030\003 \001(\t\022\016\n\006Amount\030\004 \001(\003\022\033\n\023PostponeProb"
  "ability\030\005 \001(\005B:\n\032com.htsc.mdc.insight.mo"
  "delB\027MDSecurityLendingProtosH\001\240\001\001b\006proto"
  "3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_MDSecurityLending_2eproto_deps[2] = {
  &::descriptor_table_ESecurityIDSource_2eproto,
  &::descriptor_table_ESecurityType_2eproto,
};
static ::_pbi::once_flag descriptor_table_MDSecurityLending_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_MDSecurityLending_2eproto = {
    false, false, 2961, descriptor_table_protodef_MDSecurityLending_2eproto,
    "MDSecurityLending.proto",
    &descriptor_table_MDSecurityLending_2eproto_once, descriptor_table_MDSecurityLending_2eproto_deps, 2, 4,
    schemas, file_default_instances, TableStruct_MDSecurityLending_2eproto::offsets,
    file_level_metadata_MDSecurityLending_2eproto, file_level_enum_descriptors_MDSecurityLending_2eproto,
    file_level_service_descriptors_MDSecurityLending_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_MDSecurityLending_2eproto_getter() {
  return &descriptor_table_MDSecurityLending_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_MDSecurityLending_2eproto(&descriptor_table_MDSecurityLending_2eproto);
namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {

// ===================================================================

class MDSecurityLending::_Internal {
 public:
};

MDSecurityLending::MDSecurityLending(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.htsc.mdc.insight.model.MDSecurityLending)
}
MDSecurityLending::MDSecurityLending(const MDSecurityLending& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MDSecurityLending* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.validborrows_){from._impl_.validborrows_}
    , decltype(_impl_.validalends_){from._impl_.validalends_}
    , decltype(_impl_.validblends_){from._impl_.validblends_}
    , decltype(_impl_.validclends_){from._impl_.validclends_}
    , decltype(_impl_.alends_){from._impl_.alends_}
    , decltype(_impl_.blends_){from._impl_.blends_}
    , decltype(_impl_.clends_){from._impl_.clends_}
    , decltype(_impl_.validreservationborrows_){from._impl_.validreservationborrows_}
    , decltype(_impl_.validreservationlends_){from._impl_.validreservationlends_}
    , decltype(_impl_.reservationborrows_){from._impl_.reservationborrows_}
    , decltype(_impl_.reservationlends_){from._impl_.reservationlends_}
    , decltype(_impl_.validotclends_){from._impl_.validotclends_}
    , decltype(_impl_.htscborrows_){from._impl_.htscborrows_}
    , decltype(_impl_.loans_){from._impl_.loans_}
    , decltype(_impl_.externallends_){from._impl_.externallends_}
    , decltype(_impl_.marketloans_){from._impl_.marketloans_}
    , decltype(_impl_.marketlends_){from._impl_.marketlends_}
    , decltype(_impl_.marketborrows_){from._impl_.marketborrows_}
    , decltype(_impl_.htscsecurityid_){}
    , decltype(_impl_.tradingphasecode_){}
    , decltype(_impl_.htscborrowterm_){}
    , decltype(_impl_.validlendterm_){}
    , decltype(_impl_.mddate_){}
    , decltype(_impl_.mdtime_){}
    , decltype(_impl_.datatimestamp_){}
    , decltype(_impl_.securityidsource_){}
    , decltype(_impl_.securitytype_){}
    , decltype(_impl_.preweightedrate_){}
    , decltype(_impl_.prehighrate_){}
    , decltype(_impl_.prelowrate_){}
    , decltype(_impl_.prehtscvolume_){}
    , decltype(_impl_.premarketvolume_){}
    , decltype(_impl_.weightedrate_){}
    , decltype(_impl_.highrate_){}
    , decltype(_impl_.lowrate_){}
    , decltype(_impl_.htscvolume_){}
    , decltype(_impl_.marketvolume_){}
    , decltype(_impl_.bestborrowrate_){}
    , decltype(_impl_.bestlendrate_){}
    , decltype(_impl_.bestreservationborrowrate_){}
    , decltype(_impl_.bestreservationlendrate_){}
    , decltype(_impl_.validlendamount_){}
    , decltype(_impl_.validalendamount_){}
    , decltype(_impl_.validblendamount_){}
    , decltype(_impl_.htscborrowamount_){}
    , decltype(_impl_.htscborrowrate_){}
    , decltype(_impl_.bestloanrate_){}
    , decltype(_impl_.htscborrowtradevolume_){}
    , decltype(_impl_.htscborrowweightedrate_){}
    , decltype(_impl_.prehtscborrowtradevolume_){}
    , decltype(_impl_.prehtscborrowweightedrate_){}
    , decltype(_impl_.htscborroworderamount_){}
    , decltype(_impl_.validlendorderamount_){}
    , decltype(_impl_.validborrowamount_){}
    , decltype(_impl_.loanamount_){}
    , decltype(_impl_.datamultiplepowerof10_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.htscsecurityid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.htscsecurityid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_htscsecurityid().empty()) {
    _this->_impl_.htscsecurityid_.Set(from._internal_htscsecurityid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.tradingphasecode_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tradingphasecode_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tradingphasecode().empty()) {
    _this->_impl_.tradingphasecode_.Set(from._internal_tradingphasecode(), 
      _this->GetArenaForAllocation());
  }
  _impl_.htscborrowterm_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.htscborrowterm_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_htscborrowterm().empty()) {
    _this->_impl_.htscborrowterm_.Set(from._internal_htscborrowterm(), 
      _this->GetArenaForAllocation());
  }
  _impl_.validlendterm_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.validlendterm_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_validlendterm().empty()) {
    _this->_impl_.validlendterm_.Set(from._internal_validlendterm(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.mddate_, &from._impl_.mddate_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.datamultiplepowerof10_) -
    reinterpret_cast<char*>(&_impl_.mddate_)) + sizeof(_impl_.datamultiplepowerof10_));
  // @@protoc_insertion_point(copy_constructor:com.htsc.mdc.insight.model.MDSecurityLending)
}

inline void MDSecurityLending::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.validborrows_){arena}
    , decltype(_impl_.validalends_){arena}
    , decltype(_impl_.validblends_){arena}
    , decltype(_impl_.validclends_){arena}
    , decltype(_impl_.alends_){arena}
    , decltype(_impl_.blends_){arena}
    , decltype(_impl_.clends_){arena}
    , decltype(_impl_.validreservationborrows_){arena}
    , decltype(_impl_.validreservationlends_){arena}
    , decltype(_impl_.reservationborrows_){arena}
    , decltype(_impl_.reservationlends_){arena}
    , decltype(_impl_.validotclends_){arena}
    , decltype(_impl_.htscborrows_){arena}
    , decltype(_impl_.loans_){arena}
    , decltype(_impl_.externallends_){arena}
    , decltype(_impl_.marketloans_){arena}
    , decltype(_impl_.marketlends_){arena}
    , decltype(_impl_.marketborrows_){arena}
    , decltype(_impl_.htscsecurityid_){}
    , decltype(_impl_.tradingphasecode_){}
    , decltype(_impl_.htscborrowterm_){}
    , decltype(_impl_.validlendterm_){}
    , decltype(_impl_.mddate_){0}
    , decltype(_impl_.mdtime_){0}
    , decltype(_impl_.datatimestamp_){int64_t{0}}
    , decltype(_impl_.securityidsource_){0}
    , decltype(_impl_.securitytype_){0}
    , decltype(_impl_.preweightedrate_){int64_t{0}}
    , decltype(_impl_.prehighrate_){int64_t{0}}
    , decltype(_impl_.prelowrate_){int64_t{0}}
    , decltype(_impl_.prehtscvolume_){int64_t{0}}
    , decltype(_impl_.premarketvolume_){int64_t{0}}
    , decltype(_impl_.weightedrate_){int64_t{0}}
    , decltype(_impl_.highrate_){int64_t{0}}
    , decltype(_impl_.lowrate_){int64_t{0}}
    , decltype(_impl_.htscvolume_){int64_t{0}}
    , decltype(_impl_.marketvolume_){int64_t{0}}
    , decltype(_impl_.bestborrowrate_){int64_t{0}}
    , decltype(_impl_.bestlendrate_){int64_t{0}}
    , decltype(_impl_.bestreservationborrowrate_){int64_t{0}}
    , decltype(_impl_.bestreservationlendrate_){int64_t{0}}
    , decltype(_impl_.validlendamount_){int64_t{0}}
    , decltype(_impl_.validalendamount_){int64_t{0}}
    , decltype(_impl_.validblendamount_){int64_t{0}}
    , decltype(_impl_.htscborrowamount_){int64_t{0}}
    , decltype(_impl_.htscborrowrate_){int64_t{0}}
    , decltype(_impl_.bestloanrate_){int64_t{0}}
    , decltype(_impl_.htscborrowtradevolume_){int64_t{0}}
    , decltype(_impl_.htscborrowweightedrate_){int64_t{0}}
    , decltype(_impl_.prehtscborrowtradevolume_){int64_t{0}}
    , decltype(_impl_.prehtscborrowweightedrate_){int64_t{0}}
    , decltype(_impl_.htscborroworderamount_){int64_t{0}}
    , decltype(_impl_.validlendorderamount_){int64_t{0}}
    , decltype(_impl_.validborrowamount_){int64_t{0}}
    , decltype(_impl_.loanamount_){int64_t{0}}
    , decltype(_impl_.datamultiplepowerof10_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.htscsecurityid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.htscsecurityid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.tradingphasecode_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tradingphasecode_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.htscborrowterm_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.htscborrowterm_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.validlendterm_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.validlendterm_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MDSecurityLending::~MDSecurityLending() {
  // @@protoc_insertion_point(destructor:com.htsc.mdc.insight.model.MDSecurityLending)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MDSecurityLending::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.validborrows_.~RepeatedPtrField();
  _impl_.validalends_.~RepeatedPtrField();
  _impl_.validblends_.~RepeatedPtrField();
  _impl_.validclends_.~RepeatedPtrField();
  _impl_.alends_.~RepeatedPtrField();
  _impl_.blends_.~RepeatedPtrField();
  _impl_.clends_.~RepeatedPtrField();
  _impl_.validreservationborrows_.~RepeatedPtrField();
  _impl_.validreservationlends_.~RepeatedPtrField();
  _impl_.reservationborrows_.~RepeatedPtrField();
  _impl_.reservationlends_.~RepeatedPtrField();
  _impl_.validotclends_.~RepeatedPtrField();
  _impl_.htscborrows_.~RepeatedPtrField();
  _impl_.loans_.~RepeatedPtrField();
  _impl_.externallends_.~RepeatedPtrField();
  _impl_.marketloans_.~RepeatedPtrField();
  _impl_.marketlends_.~RepeatedPtrField();
  _impl_.marketborrows_.~RepeatedPtrField();
  _impl_.htscsecurityid_.Destroy();
  _impl_.tradingphasecode_.Destroy();
  _impl_.htscborrowterm_.Destroy();
  _impl_.validlendterm_.Destroy();
}

void MDSecurityLending::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MDSecurityLending::Clear() {
// @@protoc_insertion_point(message_clear_start:com.htsc.mdc.insight.model.MDSecurityLending)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.validborrows_.Clear();
  _impl_.validalends_.Clear();
  _impl_.validblends_.Clear();
  _impl_.validclends_.Clear();
  _impl_.alends_.Clear();
  _impl_.blends_.Clear();
  _impl_.clends_.Clear();
  _impl_.validreservationborrows_.Clear();
  _impl_.validreservationlends_.Clear();
  _impl_.reservationborrows_.Clear();
  _impl_.reservationlends_.Clear();
  _impl_.validotclends_.Clear();
  _impl_.htscborrows_.Clear();
  _impl_.loans_.Clear();
  _impl_.externallends_.Clear();
  _impl_.marketloans_.Clear();
  _impl_.marketlends_.Clear();
  _impl_.marketborrows_.Clear();
  _impl_.htscsecurityid_.ClearToEmpty();
  _impl_.tradingphasecode_.ClearToEmpty();
  _impl_.htscborrowterm_.ClearToEmpty();
  _impl_.validlendterm_.ClearToEmpty();
  ::memset(&_impl_.mddate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.datamultiplepowerof10_) -
      reinterpret_cast<char*>(&_impl_.mddate_)) + sizeof(_impl_.datamultiplepowerof10_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MDSecurityLending::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string HTSCSecurityID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_htscsecurityid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.htsc.mdc.insight.model.MDSecurityLending.HTSCSecurityID"));
        } else
          goto handle_unusual;
        continue;
      // int32 MDDate = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.mddate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 MDTime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.mdtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 DataTimestamp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.datatimestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string TradingPhaseCode = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_tradingphasecode();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.htsc.mdc.insight.model.MDSecurityLending.TradingPhaseCode"));
        } else
          goto handle_unusual;
        continue;
      // .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_securityidsource(static_cast<::com::htsc::mdc::model::ESecurityIDSource>(val));
        } else
          goto handle_unusual;
        continue;
      // .com.htsc.mdc.model.ESecurityType securityType = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_securitytype(static_cast<::com::htsc::mdc::model::ESecurityType>(val));
        } else
          goto handle_unusual;
        continue;
      // int64 PreWeightedRate = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _impl_.preweightedrate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 PreHighRate = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          _impl_.prehighrate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 PreLowRate = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _impl_.prelowrate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 PreHtscVolume = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          _impl_.prehtscvolume_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 PreMarketVolume = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _impl_.premarketvolume_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 WeightedRate = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          _impl_.weightedrate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 HighRate = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _impl_.highrate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 LowRate = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 136)) {
          _impl_.lowrate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 HtscVolume = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _impl_.htscvolume_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 MarketVolume = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 152)) {
          _impl_.marketvolume_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 BestBorrowRate = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          _impl_.bestborrowrate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 BestLendRate = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 168)) {
          _impl_.bestlendrate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidBorrows = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_validborrows(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<218>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidALends = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 226)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_validalends(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<226>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidBLends = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_validblends(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<234>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidCLends = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 242)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_validclends(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<242>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry ALends = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_alends(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<250>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry BLends = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 2)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_blends(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<258>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry CLends = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_clends(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<266>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidReservationBorrows = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_validreservationborrows(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<274>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidReservationLends = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_validreservationlends(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<282>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry ReservationBorrows = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_reservationborrows(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<290>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry ReservationLends = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_reservationlends(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<298>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidOtcLends = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_validotclends(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<306>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int64 BestReservationBorrowRate = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.bestreservationborrowrate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 BestReservationLendRate = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.bestreservationlendrate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 ValidLendAmount = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _impl_.validlendamount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 ValidALendAmount = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _impl_.validalendamount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 ValidBLendAmount = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          _impl_.validblendamount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 HtscBorrowAmount = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _impl_.htscborrowamount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 HtscBorrowRate = 45;
      case 45:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          _impl_.htscborrowrate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 BestLoanRate = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _impl_.bestloanrate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 HtscBorrowTradeVolume = 47;
      case 47:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          _impl_.htscborrowtradevolume_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 HtscBorrowWeightedRate = 48;
      case 48:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _impl_.htscborrowweightedrate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 PreHtscBorrowTradeVolume = 49;
      case 49:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 136)) {
          _impl_.prehtscborrowtradevolume_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 PreHtscBorrowWeightedRate = 50;
      case 50:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _impl_.prehtscborrowweightedrate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry HtscBorrows = 51;
      case 51:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_htscborrows(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<410>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry Loans = 52;
      case 52:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_loans(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<418>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int32 DataMultiplePowerOf10 = 53;
      case 53:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 168)) {
          _impl_.datamultiplepowerof10_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry ExternalLends = 54;
      case 54:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 178)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_externallends(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<434>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string HtscBorrowTerm = 57;
      case 57:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          auto str = _internal_mutable_htscborrowterm();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.htsc.mdc.insight.model.MDSecurityLending.HtscBorrowTerm"));
        } else
          goto handle_unusual;
        continue;
      // int64 HtscBorrowOrderAmount = 58;
      case 58:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          _impl_.htscborroworderamount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string ValidLendTerm = 59;
      case 59:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          auto str = _internal_mutable_validlendterm();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.htsc.mdc.insight.model.MDSecurityLending.ValidLendTerm"));
        } else
          goto handle_unusual;
        continue;
      // int64 ValidLendOrderAmount = 60;
      case 60:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          _impl_.validlendorderamount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry MarketLoans = 61;
      case 61:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_marketloans(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<490>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry MarketLends = 62;
      case 62:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 242)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_marketlends(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<498>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int64 ValidBorrowAmount = 63;
      case 63:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 248)) {
          _impl_.validborrowamount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 LoanAmount = 64;
      case 64:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          _impl_.loanamount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry MarketBorrows = 65;
      case 65:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_marketborrows(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<522>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MDSecurityLending::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.htsc.mdc.insight.model.MDSecurityLending)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string HTSCSecurityID = 1;
  if (!this->_internal_htscsecurityid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_htscsecurityid().data(), static_cast<int>(this->_internal_htscsecurityid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDSecurityLending.HTSCSecurityID");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_htscsecurityid(), target);
  }

  // int32 MDDate = 2;
  if (this->_internal_mddate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_mddate(), target);
  }

  // int32 MDTime = 3;
  if (this->_internal_mdtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_mdtime(), target);
  }

  // int64 DataTimestamp = 4;
  if (this->_internal_datatimestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_datatimestamp(), target);
  }

  // string TradingPhaseCode = 5;
  if (!this->_internal_tradingphasecode().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tradingphasecode().data(), static_cast<int>(this->_internal_tradingphasecode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDSecurityLending.TradingPhaseCode");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_tradingphasecode(), target);
  }

  // .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
  if (this->_internal_securityidsource() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      6, this->_internal_securityidsource(), target);
  }

  // .com.htsc.mdc.model.ESecurityType securityType = 7;
  if (this->_internal_securitytype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      7, this->_internal_securitytype(), target);
  }

  // int64 PreWeightedRate = 10;
  if (this->_internal_preweightedrate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(10, this->_internal_preweightedrate(), target);
  }

  // int64 PreHighRate = 11;
  if (this->_internal_prehighrate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(11, this->_internal_prehighrate(), target);
  }

  // int64 PreLowRate = 12;
  if (this->_internal_prelowrate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(12, this->_internal_prelowrate(), target);
  }

  // int64 PreHtscVolume = 13;
  if (this->_internal_prehtscvolume() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(13, this->_internal_prehtscvolume(), target);
  }

  // int64 PreMarketVolume = 14;
  if (this->_internal_premarketvolume() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(14, this->_internal_premarketvolume(), target);
  }

  // int64 WeightedRate = 15;
  if (this->_internal_weightedrate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(15, this->_internal_weightedrate(), target);
  }

  // int64 HighRate = 16;
  if (this->_internal_highrate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(16, this->_internal_highrate(), target);
  }

  // int64 LowRate = 17;
  if (this->_internal_lowrate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(17, this->_internal_lowrate(), target);
  }

  // int64 HtscVolume = 18;
  if (this->_internal_htscvolume() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(18, this->_internal_htscvolume(), target);
  }

  // int64 MarketVolume = 19;
  if (this->_internal_marketvolume() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(19, this->_internal_marketvolume(), target);
  }

  // int64 BestBorrowRate = 20;
  if (this->_internal_bestborrowrate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(20, this->_internal_bestborrowrate(), target);
  }

  // int64 BestLendRate = 21;
  if (this->_internal_bestlendrate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(21, this->_internal_bestlendrate(), target);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidBorrows = 27;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_validborrows_size()); i < n; i++) {
    const auto& repfield = this->_internal_validborrows(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(27, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidALends = 28;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_validalends_size()); i < n; i++) {
    const auto& repfield = this->_internal_validalends(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(28, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidBLends = 29;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_validblends_size()); i < n; i++) {
    const auto& repfield = this->_internal_validblends(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(29, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidCLends = 30;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_validclends_size()); i < n; i++) {
    const auto& repfield = this->_internal_validclends(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(30, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry ALends = 31;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_alends_size()); i < n; i++) {
    const auto& repfield = this->_internal_alends(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(31, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry BLends = 32;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_blends_size()); i < n; i++) {
    const auto& repfield = this->_internal_blends(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(32, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry CLends = 33;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_clends_size()); i < n; i++) {
    const auto& repfield = this->_internal_clends(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(33, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidReservationBorrows = 34;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_validreservationborrows_size()); i < n; i++) {
    const auto& repfield = this->_internal_validreservationborrows(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(34, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidReservationLends = 35;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_validreservationlends_size()); i < n; i++) {
    const auto& repfield = this->_internal_validreservationlends(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(35, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry ReservationBorrows = 36;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_reservationborrows_size()); i < n; i++) {
    const auto& repfield = this->_internal_reservationborrows(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(36, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry ReservationLends = 37;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_reservationlends_size()); i < n; i++) {
    const auto& repfield = this->_internal_reservationlends(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(37, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidOtcLends = 38;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_validotclends_size()); i < n; i++) {
    const auto& repfield = this->_internal_validotclends(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(38, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int64 BestReservationBorrowRate = 39;
  if (this->_internal_bestreservationborrowrate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(39, this->_internal_bestreservationborrowrate(), target);
  }

  // int64 BestReservationLendRate = 40;
  if (this->_internal_bestreservationlendrate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(40, this->_internal_bestreservationlendrate(), target);
  }

  // int64 ValidLendAmount = 41;
  if (this->_internal_validlendamount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(41, this->_internal_validlendamount(), target);
  }

  // int64 ValidALendAmount = 42;
  if (this->_internal_validalendamount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(42, this->_internal_validalendamount(), target);
  }

  // int64 ValidBLendAmount = 43;
  if (this->_internal_validblendamount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(43, this->_internal_validblendamount(), target);
  }

  // int64 HtscBorrowAmount = 44;
  if (this->_internal_htscborrowamount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(44, this->_internal_htscborrowamount(), target);
  }

  // int64 HtscBorrowRate = 45;
  if (this->_internal_htscborrowrate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(45, this->_internal_htscborrowrate(), target);
  }

  // int64 BestLoanRate = 46;
  if (this->_internal_bestloanrate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(46, this->_internal_bestloanrate(), target);
  }

  // int64 HtscBorrowTradeVolume = 47;
  if (this->_internal_htscborrowtradevolume() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(47, this->_internal_htscborrowtradevolume(), target);
  }

  // int64 HtscBorrowWeightedRate = 48;
  if (this->_internal_htscborrowweightedrate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(48, this->_internal_htscborrowweightedrate(), target);
  }

  // int64 PreHtscBorrowTradeVolume = 49;
  if (this->_internal_prehtscborrowtradevolume() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(49, this->_internal_prehtscborrowtradevolume(), target);
  }

  // int64 PreHtscBorrowWeightedRate = 50;
  if (this->_internal_prehtscborrowweightedrate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(50, this->_internal_prehtscborrowweightedrate(), target);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry HtscBorrows = 51;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_htscborrows_size()); i < n; i++) {
    const auto& repfield = this->_internal_htscborrows(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(51, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry Loans = 52;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_loans_size()); i < n; i++) {
    const auto& repfield = this->_internal_loans(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(52, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int32 DataMultiplePowerOf10 = 53;
  if (this->_internal_datamultiplepowerof10() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(53, this->_internal_datamultiplepowerof10(), target);
  }

  // repeated .com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry ExternalLends = 54;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_externallends_size()); i < n; i++) {
    const auto& repfield = this->_internal_externallends(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(54, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string HtscBorrowTerm = 57;
  if (!this->_internal_htscborrowterm().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_htscborrowterm().data(), static_cast<int>(this->_internal_htscborrowterm().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDSecurityLending.HtscBorrowTerm");
    target = stream->WriteStringMaybeAliased(
        57, this->_internal_htscborrowterm(), target);
  }

  // int64 HtscBorrowOrderAmount = 58;
  if (this->_internal_htscborroworderamount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(58, this->_internal_htscborroworderamount(), target);
  }

  // string ValidLendTerm = 59;
  if (!this->_internal_validlendterm().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_validlendterm().data(), static_cast<int>(this->_internal_validlendterm().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDSecurityLending.ValidLendTerm");
    target = stream->WriteStringMaybeAliased(
        59, this->_internal_validlendterm(), target);
  }

  // int64 ValidLendOrderAmount = 60;
  if (this->_internal_validlendorderamount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(60, this->_internal_validlendorderamount(), target);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry MarketLoans = 61;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_marketloans_size()); i < n; i++) {
    const auto& repfield = this->_internal_marketloans(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(61, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry MarketLends = 62;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_marketlends_size()); i < n; i++) {
    const auto& repfield = this->_internal_marketlends(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(62, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int64 ValidBorrowAmount = 63;
  if (this->_internal_validborrowamount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(63, this->_internal_validborrowamount(), target);
  }

  // int64 LoanAmount = 64;
  if (this->_internal_loanamount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(64, this->_internal_loanamount(), target);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry MarketBorrows = 65;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_marketborrows_size()); i < n; i++) {
    const auto& repfield = this->_internal_marketborrows(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(65, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.htsc.mdc.insight.model.MDSecurityLending)
  return target;
}

size_t MDSecurityLending::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.htsc.mdc.insight.model.MDSecurityLending)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidBorrows = 27;
  total_size += 2UL * this->_internal_validborrows_size();
  for (const auto& msg : this->_impl_.validborrows_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidALends = 28;
  total_size += 2UL * this->_internal_validalends_size();
  for (const auto& msg : this->_impl_.validalends_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidBLends = 29;
  total_size += 2UL * this->_internal_validblends_size();
  for (const auto& msg : this->_impl_.validblends_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidCLends = 30;
  total_size += 2UL * this->_internal_validclends_size();
  for (const auto& msg : this->_impl_.validclends_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry ALends = 31;
  total_size += 2UL * this->_internal_alends_size();
  for (const auto& msg : this->_impl_.alends_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry BLends = 32;
  total_size += 2UL * this->_internal_blends_size();
  for (const auto& msg : this->_impl_.blends_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry CLends = 33;
  total_size += 2UL * this->_internal_clends_size();
  for (const auto& msg : this->_impl_.clends_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidReservationBorrows = 34;
  total_size += 2UL * this->_internal_validreservationborrows_size();
  for (const auto& msg : this->_impl_.validreservationborrows_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidReservationLends = 35;
  total_size += 2UL * this->_internal_validreservationlends_size();
  for (const auto& msg : this->_impl_.validreservationlends_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry ReservationBorrows = 36;
  total_size += 2UL * this->_internal_reservationborrows_size();
  for (const auto& msg : this->_impl_.reservationborrows_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry ReservationLends = 37;
  total_size += 2UL * this->_internal_reservationlends_size();
  for (const auto& msg : this->_impl_.reservationlends_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidOtcLends = 38;
  total_size += 2UL * this->_internal_validotclends_size();
  for (const auto& msg : this->_impl_.validotclends_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry HtscBorrows = 51;
  total_size += 2UL * this->_internal_htscborrows_size();
  for (const auto& msg : this->_impl_.htscborrows_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry Loans = 52;
  total_size += 2UL * this->_internal_loans_size();
  for (const auto& msg : this->_impl_.loans_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry ExternalLends = 54;
  total_size += 2UL * this->_internal_externallends_size();
  for (const auto& msg : this->_impl_.externallends_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry MarketLoans = 61;
  total_size += 2UL * this->_internal_marketloans_size();
  for (const auto& msg : this->_impl_.marketloans_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry MarketLends = 62;
  total_size += 2UL * this->_internal_marketlends_size();
  for (const auto& msg : this->_impl_.marketlends_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry MarketBorrows = 65;
  total_size += 2UL * this->_internal_marketborrows_size();
  for (const auto& msg : this->_impl_.marketborrows_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string HTSCSecurityID = 1;
  if (!this->_internal_htscsecurityid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_htscsecurityid());
  }

  // string TradingPhaseCode = 5;
  if (!this->_internal_tradingphasecode().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tradingphasecode());
  }

  // string HtscBorrowTerm = 57;
  if (!this->_internal_htscborrowterm().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_htscborrowterm());
  }

  // string ValidLendTerm = 59;
  if (!this->_internal_validlendterm().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_validlendterm());
  }

  // int32 MDDate = 2;
  if (this->_internal_mddate() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_mddate());
  }

  // int32 MDTime = 3;
  if (this->_internal_mdtime() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_mdtime());
  }

  // int64 DataTimestamp = 4;
  if (this->_internal_datatimestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_datatimestamp());
  }

  // .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
  if (this->_internal_securityidsource() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_securityidsource());
  }

  // .com.htsc.mdc.model.ESecurityType securityType = 7;
  if (this->_internal_securitytype() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_securitytype());
  }

  // int64 PreWeightedRate = 10;
  if (this->_internal_preweightedrate() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_preweightedrate());
  }

  // int64 PreHighRate = 11;
  if (this->_internal_prehighrate() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_prehighrate());
  }

  // int64 PreLowRate = 12;
  if (this->_internal_prelowrate() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_prelowrate());
  }

  // int64 PreHtscVolume = 13;
  if (this->_internal_prehtscvolume() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_prehtscvolume());
  }

  // int64 PreMarketVolume = 14;
  if (this->_internal_premarketvolume() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_premarketvolume());
  }

  // int64 WeightedRate = 15;
  if (this->_internal_weightedrate() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_weightedrate());
  }

  // int64 HighRate = 16;
  if (this->_internal_highrate() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_highrate());
  }

  // int64 LowRate = 17;
  if (this->_internal_lowrate() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_lowrate());
  }

  // int64 HtscVolume = 18;
  if (this->_internal_htscvolume() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_htscvolume());
  }

  // int64 MarketVolume = 19;
  if (this->_internal_marketvolume() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_marketvolume());
  }

  // int64 BestBorrowRate = 20;
  if (this->_internal_bestborrowrate() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_bestborrowrate());
  }

  // int64 BestLendRate = 21;
  if (this->_internal_bestlendrate() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_bestlendrate());
  }

  // int64 BestReservationBorrowRate = 39;
  if (this->_internal_bestreservationborrowrate() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_bestreservationborrowrate());
  }

  // int64 BestReservationLendRate = 40;
  if (this->_internal_bestreservationlendrate() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_bestreservationlendrate());
  }

  // int64 ValidLendAmount = 41;
  if (this->_internal_validlendamount() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_validlendamount());
  }

  // int64 ValidALendAmount = 42;
  if (this->_internal_validalendamount() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_validalendamount());
  }

  // int64 ValidBLendAmount = 43;
  if (this->_internal_validblendamount() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_validblendamount());
  }

  // int64 HtscBorrowAmount = 44;
  if (this->_internal_htscborrowamount() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_htscborrowamount());
  }

  // int64 HtscBorrowRate = 45;
  if (this->_internal_htscborrowrate() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_htscborrowrate());
  }

  // int64 BestLoanRate = 46;
  if (this->_internal_bestloanrate() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_bestloanrate());
  }

  // int64 HtscBorrowTradeVolume = 47;
  if (this->_internal_htscborrowtradevolume() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_htscborrowtradevolume());
  }

  // int64 HtscBorrowWeightedRate = 48;
  if (this->_internal_htscborrowweightedrate() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_htscborrowweightedrate());
  }

  // int64 PreHtscBorrowTradeVolume = 49;
  if (this->_internal_prehtscborrowtradevolume() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_prehtscborrowtradevolume());
  }

  // int64 PreHtscBorrowWeightedRate = 50;
  if (this->_internal_prehtscborrowweightedrate() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_prehtscborrowweightedrate());
  }

  // int64 HtscBorrowOrderAmount = 58;
  if (this->_internal_htscborroworderamount() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_htscborroworderamount());
  }

  // int64 ValidLendOrderAmount = 60;
  if (this->_internal_validlendorderamount() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_validlendorderamount());
  }

  // int64 ValidBorrowAmount = 63;
  if (this->_internal_validborrowamount() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_validborrowamount());
  }

  // int64 LoanAmount = 64;
  if (this->_internal_loanamount() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_loanamount());
  }

  // int32 DataMultiplePowerOf10 = 53;
  if (this->_internal_datamultiplepowerof10() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int32Size(
        this->_internal_datamultiplepowerof10());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MDSecurityLending::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MDSecurityLending::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MDSecurityLending::GetClassData() const { return &_class_data_; }


void MDSecurityLending::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MDSecurityLending*>(&to_msg);
  auto& from = static_cast<const MDSecurityLending&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.htsc.mdc.insight.model.MDSecurityLending)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.validborrows_.MergeFrom(from._impl_.validborrows_);
  _this->_impl_.validalends_.MergeFrom(from._impl_.validalends_);
  _this->_impl_.validblends_.MergeFrom(from._impl_.validblends_);
  _this->_impl_.validclends_.MergeFrom(from._impl_.validclends_);
  _this->_impl_.alends_.MergeFrom(from._impl_.alends_);
  _this->_impl_.blends_.MergeFrom(from._impl_.blends_);
  _this->_impl_.clends_.MergeFrom(from._impl_.clends_);
  _this->_impl_.validreservationborrows_.MergeFrom(from._impl_.validreservationborrows_);
  _this->_impl_.validreservationlends_.MergeFrom(from._impl_.validreservationlends_);
  _this->_impl_.reservationborrows_.MergeFrom(from._impl_.reservationborrows_);
  _this->_impl_.reservationlends_.MergeFrom(from._impl_.reservationlends_);
  _this->_impl_.validotclends_.MergeFrom(from._impl_.validotclends_);
  _this->_impl_.htscborrows_.MergeFrom(from._impl_.htscborrows_);
  _this->_impl_.loans_.MergeFrom(from._impl_.loans_);
  _this->_impl_.externallends_.MergeFrom(from._impl_.externallends_);
  _this->_impl_.marketloans_.MergeFrom(from._impl_.marketloans_);
  _this->_impl_.marketlends_.MergeFrom(from._impl_.marketlends_);
  _this->_impl_.marketborrows_.MergeFrom(from._impl_.marketborrows_);
  if (!from._internal_htscsecurityid().empty()) {
    _this->_internal_set_htscsecurityid(from._internal_htscsecurityid());
  }
  if (!from._internal_tradingphasecode().empty()) {
    _this->_internal_set_tradingphasecode(from._internal_tradingphasecode());
  }
  if (!from._internal_htscborrowterm().empty()) {
    _this->_internal_set_htscborrowterm(from._internal_htscborrowterm());
  }
  if (!from._internal_validlendterm().empty()) {
    _this->_internal_set_validlendterm(from._internal_validlendterm());
  }
  if (from._internal_mddate() != 0) {
    _this->_internal_set_mddate(from._internal_mddate());
  }
  if (from._internal_mdtime() != 0) {
    _this->_internal_set_mdtime(from._internal_mdtime());
  }
  if (from._internal_datatimestamp() != 0) {
    _this->_internal_set_datatimestamp(from._internal_datatimestamp());
  }
  if (from._internal_securityidsource() != 0) {
    _this->_internal_set_securityidsource(from._internal_securityidsource());
  }
  if (from._internal_securitytype() != 0) {
    _this->_internal_set_securitytype(from._internal_securitytype());
  }
  if (from._internal_preweightedrate() != 0) {
    _this->_internal_set_preweightedrate(from._internal_preweightedrate());
  }
  if (from._internal_prehighrate() != 0) {
    _this->_internal_set_prehighrate(from._internal_prehighrate());
  }
  if (from._internal_prelowrate() != 0) {
    _this->_internal_set_prelowrate(from._internal_prelowrate());
  }
  if (from._internal_prehtscvolume() != 0) {
    _this->_internal_set_prehtscvolume(from._internal_prehtscvolume());
  }
  if (from._internal_premarketvolume() != 0) {
    _this->_internal_set_premarketvolume(from._internal_premarketvolume());
  }
  if (from._internal_weightedrate() != 0) {
    _this->_internal_set_weightedrate(from._internal_weightedrate());
  }
  if (from._internal_highrate() != 0) {
    _this->_internal_set_highrate(from._internal_highrate());
  }
  if (from._internal_lowrate() != 0) {
    _this->_internal_set_lowrate(from._internal_lowrate());
  }
  if (from._internal_htscvolume() != 0) {
    _this->_internal_set_htscvolume(from._internal_htscvolume());
  }
  if (from._internal_marketvolume() != 0) {
    _this->_internal_set_marketvolume(from._internal_marketvolume());
  }
  if (from._internal_bestborrowrate() != 0) {
    _this->_internal_set_bestborrowrate(from._internal_bestborrowrate());
  }
  if (from._internal_bestlendrate() != 0) {
    _this->_internal_set_bestlendrate(from._internal_bestlendrate());
  }
  if (from._internal_bestreservationborrowrate() != 0) {
    _this->_internal_set_bestreservationborrowrate(from._internal_bestreservationborrowrate());
  }
  if (from._internal_bestreservationlendrate() != 0) {
    _this->_internal_set_bestreservationlendrate(from._internal_bestreservationlendrate());
  }
  if (from._internal_validlendamount() != 0) {
    _this->_internal_set_validlendamount(from._internal_validlendamount());
  }
  if (from._internal_validalendamount() != 0) {
    _this->_internal_set_validalendamount(from._internal_validalendamount());
  }
  if (from._internal_validblendamount() != 0) {
    _this->_internal_set_validblendamount(from._internal_validblendamount());
  }
  if (from._internal_htscborrowamount() != 0) {
    _this->_internal_set_htscborrowamount(from._internal_htscborrowamount());
  }
  if (from._internal_htscborrowrate() != 0) {
    _this->_internal_set_htscborrowrate(from._internal_htscborrowrate());
  }
  if (from._internal_bestloanrate() != 0) {
    _this->_internal_set_bestloanrate(from._internal_bestloanrate());
  }
  if (from._internal_htscborrowtradevolume() != 0) {
    _this->_internal_set_htscborrowtradevolume(from._internal_htscborrowtradevolume());
  }
  if (from._internal_htscborrowweightedrate() != 0) {
    _this->_internal_set_htscborrowweightedrate(from._internal_htscborrowweightedrate());
  }
  if (from._internal_prehtscborrowtradevolume() != 0) {
    _this->_internal_set_prehtscborrowtradevolume(from._internal_prehtscborrowtradevolume());
  }
  if (from._internal_prehtscborrowweightedrate() != 0) {
    _this->_internal_set_prehtscborrowweightedrate(from._internal_prehtscborrowweightedrate());
  }
  if (from._internal_htscborroworderamount() != 0) {
    _this->_internal_set_htscborroworderamount(from._internal_htscborroworderamount());
  }
  if (from._internal_validlendorderamount() != 0) {
    _this->_internal_set_validlendorderamount(from._internal_validlendorderamount());
  }
  if (from._internal_validborrowamount() != 0) {
    _this->_internal_set_validborrowamount(from._internal_validborrowamount());
  }
  if (from._internal_loanamount() != 0) {
    _this->_internal_set_loanamount(from._internal_loanamount());
  }
  if (from._internal_datamultiplepowerof10() != 0) {
    _this->_internal_set_datamultiplepowerof10(from._internal_datamultiplepowerof10());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MDSecurityLending::CopyFrom(const MDSecurityLending& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.htsc.mdc.insight.model.MDSecurityLending)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MDSecurityLending::IsInitialized() const {
  return true;
}

void MDSecurityLending::InternalSwap(MDSecurityLending* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.validborrows_.InternalSwap(&other->_impl_.validborrows_);
  _impl_.validalends_.InternalSwap(&other->_impl_.validalends_);
  _impl_.validblends_.InternalSwap(&other->_impl_.validblends_);
  _impl_.validclends_.InternalSwap(&other->_impl_.validclends_);
  _impl_.alends_.InternalSwap(&other->_impl_.alends_);
  _impl_.blends_.InternalSwap(&other->_impl_.blends_);
  _impl_.clends_.InternalSwap(&other->_impl_.clends_);
  _impl_.validreservationborrows_.InternalSwap(&other->_impl_.validreservationborrows_);
  _impl_.validreservationlends_.InternalSwap(&other->_impl_.validreservationlends_);
  _impl_.reservationborrows_.InternalSwap(&other->_impl_.reservationborrows_);
  _impl_.reservationlends_.InternalSwap(&other->_impl_.reservationlends_);
  _impl_.validotclends_.InternalSwap(&other->_impl_.validotclends_);
  _impl_.htscborrows_.InternalSwap(&other->_impl_.htscborrows_);
  _impl_.loans_.InternalSwap(&other->_impl_.loans_);
  _impl_.externallends_.InternalSwap(&other->_impl_.externallends_);
  _impl_.marketloans_.InternalSwap(&other->_impl_.marketloans_);
  _impl_.marketlends_.InternalSwap(&other->_impl_.marketlends_);
  _impl_.marketborrows_.InternalSwap(&other->_impl_.marketborrows_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.htscsecurityid_, lhs_arena,
      &other->_impl_.htscsecurityid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.tradingphasecode_, lhs_arena,
      &other->_impl_.tradingphasecode_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.htscborrowterm_, lhs_arena,
      &other->_impl_.htscborrowterm_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.validlendterm_, lhs_arena,
      &other->_impl_.validlendterm_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MDSecurityLending, _impl_.datamultiplepowerof10_)
      + sizeof(MDSecurityLending::_impl_.datamultiplepowerof10_)
      - PROTOBUF_FIELD_OFFSET(MDSecurityLending, _impl_.mddate_)>(
          reinterpret_cast<char*>(&_impl_.mddate_),
          reinterpret_cast<char*>(&other->_impl_.mddate_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MDSecurityLending::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MDSecurityLending_2eproto_getter, &descriptor_table_MDSecurityLending_2eproto_once,
      file_level_metadata_MDSecurityLending_2eproto[0]);
}

// ===================================================================

class ADValidSecurityLendingEntry::_Internal {
 public:
};

ADValidSecurityLendingEntry::ADValidSecurityLendingEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.htsc.mdc.insight.model.ADValidSecurityLendingEntry)
}
ADValidSecurityLendingEntry::ADValidSecurityLendingEntry(const ADValidSecurityLendingEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ADValidSecurityLendingEntry* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.rate_){}
    , decltype(_impl_.level_){}
    , decltype(_impl_.term_){}
    , decltype(_impl_.amount_){}
    , decltype(_impl_.htscprovided_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.rate_, &from._impl_.rate_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.htscprovided_) -
    reinterpret_cast<char*>(&_impl_.rate_)) + sizeof(_impl_.htscprovided_));
  // @@protoc_insertion_point(copy_constructor:com.htsc.mdc.insight.model.ADValidSecurityLendingEntry)
}

inline void ADValidSecurityLendingEntry::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.rate_){int64_t{0}}
    , decltype(_impl_.level_){0}
    , decltype(_impl_.term_){0}
    , decltype(_impl_.amount_){int64_t{0}}
    , decltype(_impl_.htscprovided_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ADValidSecurityLendingEntry::~ADValidSecurityLendingEntry() {
  // @@protoc_insertion_point(destructor:com.htsc.mdc.insight.model.ADValidSecurityLendingEntry)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ADValidSecurityLendingEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ADValidSecurityLendingEntry::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ADValidSecurityLendingEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:com.htsc.mdc.insight.model.ADValidSecurityLendingEntry)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.rate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.htscprovided_) -
      reinterpret_cast<char*>(&_impl_.rate_)) + sizeof(_impl_.htscprovided_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ADValidSecurityLendingEntry::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Level = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 Rate = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.rate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 Term = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.term_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 Amount = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.amount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool HtscProvided = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.htscprovided_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ADValidSecurityLendingEntry::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.htsc.mdc.insight.model.ADValidSecurityLendingEntry)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Level = 1;
  if (this->_internal_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_level(), target);
  }

  // int64 Rate = 2;
  if (this->_internal_rate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_rate(), target);
  }

  // int32 Term = 3;
  if (this->_internal_term() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_term(), target);
  }

  // int64 Amount = 4;
  if (this->_internal_amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_amount(), target);
  }

  // bool HtscProvided = 5;
  if (this->_internal_htscprovided() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_htscprovided(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.htsc.mdc.insight.model.ADValidSecurityLendingEntry)
  return target;
}

size_t ADValidSecurityLendingEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.htsc.mdc.insight.model.ADValidSecurityLendingEntry)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Rate = 2;
  if (this->_internal_rate() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_rate());
  }

  // int32 Level = 1;
  if (this->_internal_level() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_level());
  }

  // int32 Term = 3;
  if (this->_internal_term() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_term());
  }

  // int64 Amount = 4;
  if (this->_internal_amount() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_amount());
  }

  // bool HtscProvided = 5;
  if (this->_internal_htscprovided() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ADValidSecurityLendingEntry::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ADValidSecurityLendingEntry::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ADValidSecurityLendingEntry::GetClassData() const { return &_class_data_; }


void ADValidSecurityLendingEntry::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ADValidSecurityLendingEntry*>(&to_msg);
  auto& from = static_cast<const ADValidSecurityLendingEntry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.htsc.mdc.insight.model.ADValidSecurityLendingEntry)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_rate() != 0) {
    _this->_internal_set_rate(from._internal_rate());
  }
  if (from._internal_level() != 0) {
    _this->_internal_set_level(from._internal_level());
  }
  if (from._internal_term() != 0) {
    _this->_internal_set_term(from._internal_term());
  }
  if (from._internal_amount() != 0) {
    _this->_internal_set_amount(from._internal_amount());
  }
  if (from._internal_htscprovided() != 0) {
    _this->_internal_set_htscprovided(from._internal_htscprovided());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ADValidSecurityLendingEntry::CopyFrom(const ADValidSecurityLendingEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.htsc.mdc.insight.model.ADValidSecurityLendingEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ADValidSecurityLendingEntry::IsInitialized() const {
  return true;
}

void ADValidSecurityLendingEntry::InternalSwap(ADValidSecurityLendingEntry* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ADValidSecurityLendingEntry, _impl_.htscprovided_)
      + sizeof(ADValidSecurityLendingEntry::_impl_.htscprovided_)
      - PROTOBUF_FIELD_OFFSET(ADValidSecurityLendingEntry, _impl_.rate_)>(
          reinterpret_cast<char*>(&_impl_.rate_),
          reinterpret_cast<char*>(&other->_impl_.rate_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ADValidSecurityLendingEntry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MDSecurityLending_2eproto_getter, &descriptor_table_MDSecurityLending_2eproto_once,
      file_level_metadata_MDSecurityLending_2eproto[1]);
}

// ===================================================================

class ADSecurityLendingEntry::_Internal {
 public:
};

ADSecurityLendingEntry::ADSecurityLendingEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.htsc.mdc.insight.model.ADSecurityLendingEntry)
}
ADSecurityLendingEntry::ADSecurityLendingEntry(const ADSecurityLendingEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ADSecurityLendingEntry* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.rate_){}
    , decltype(_impl_.level_){}
    , decltype(_impl_.term_){}
    , decltype(_impl_.totalamount_){}
    , decltype(_impl_.matchedamount_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.rate_, &from._impl_.rate_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.matchedamount_) -
    reinterpret_cast<char*>(&_impl_.rate_)) + sizeof(_impl_.matchedamount_));
  // @@protoc_insertion_point(copy_constructor:com.htsc.mdc.insight.model.ADSecurityLendingEntry)
}

inline void ADSecurityLendingEntry::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.rate_){int64_t{0}}
    , decltype(_impl_.level_){0}
    , decltype(_impl_.term_){0}
    , decltype(_impl_.totalamount_){int64_t{0}}
    , decltype(_impl_.matchedamount_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ADSecurityLendingEntry::~ADSecurityLendingEntry() {
  // @@protoc_insertion_point(destructor:com.htsc.mdc.insight.model.ADSecurityLendingEntry)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ADSecurityLendingEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ADSecurityLendingEntry::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ADSecurityLendingEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:com.htsc.mdc.insight.model.ADSecurityLendingEntry)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.rate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.matchedamount_) -
      reinterpret_cast<char*>(&_impl_.rate_)) + sizeof(_impl_.matchedamount_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ADSecurityLendingEntry::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Level = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 Rate = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.rate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 Term = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.term_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 TotalAmount = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.totalamount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 MatchedAmount = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.matchedamount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ADSecurityLendingEntry::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.htsc.mdc.insight.model.ADSecurityLendingEntry)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Level = 1;
  if (this->_internal_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_level(), target);
  }

  // int64 Rate = 2;
  if (this->_internal_rate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_rate(), target);
  }

  // int32 Term = 3;
  if (this->_internal_term() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_term(), target);
  }

  // int64 TotalAmount = 4;
  if (this->_internal_totalamount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_totalamount(), target);
  }

  // int64 MatchedAmount = 5;
  if (this->_internal_matchedamount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(5, this->_internal_matchedamount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.htsc.mdc.insight.model.ADSecurityLendingEntry)
  return target;
}

size_t ADSecurityLendingEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.htsc.mdc.insight.model.ADSecurityLendingEntry)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Rate = 2;
  if (this->_internal_rate() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_rate());
  }

  // int32 Level = 1;
  if (this->_internal_level() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_level());
  }

  // int32 Term = 3;
  if (this->_internal_term() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_term());
  }

  // int64 TotalAmount = 4;
  if (this->_internal_totalamount() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_totalamount());
  }

  // int64 MatchedAmount = 5;
  if (this->_internal_matchedamount() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_matchedamount());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ADSecurityLendingEntry::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ADSecurityLendingEntry::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ADSecurityLendingEntry::GetClassData() const { return &_class_data_; }


void ADSecurityLendingEntry::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ADSecurityLendingEntry*>(&to_msg);
  auto& from = static_cast<const ADSecurityLendingEntry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.htsc.mdc.insight.model.ADSecurityLendingEntry)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_rate() != 0) {
    _this->_internal_set_rate(from._internal_rate());
  }
  if (from._internal_level() != 0) {
    _this->_internal_set_level(from._internal_level());
  }
  if (from._internal_term() != 0) {
    _this->_internal_set_term(from._internal_term());
  }
  if (from._internal_totalamount() != 0) {
    _this->_internal_set_totalamount(from._internal_totalamount());
  }
  if (from._internal_matchedamount() != 0) {
    _this->_internal_set_matchedamount(from._internal_matchedamount());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ADSecurityLendingEntry::CopyFrom(const ADSecurityLendingEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.htsc.mdc.insight.model.ADSecurityLendingEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ADSecurityLendingEntry::IsInitialized() const {
  return true;
}

void ADSecurityLendingEntry::InternalSwap(ADSecurityLendingEntry* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ADSecurityLendingEntry, _impl_.matchedamount_)
      + sizeof(ADSecurityLendingEntry::_impl_.matchedamount_)
      - PROTOBUF_FIELD_OFFSET(ADSecurityLendingEntry, _impl_.rate_)>(
          reinterpret_cast<char*>(&_impl_.rate_),
          reinterpret_cast<char*>(&other->_impl_.rate_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ADSecurityLendingEntry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MDSecurityLending_2eproto_getter, &descriptor_table_MDSecurityLending_2eproto_once,
      file_level_metadata_MDSecurityLending_2eproto[2]);
}

// ===================================================================

class ADEstimatedSecurityLendingEntry::_Internal {
 public:
};

ADEstimatedSecurityLendingEntry::ADEstimatedSecurityLendingEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry)
}
ADEstimatedSecurityLendingEntry::ADEstimatedSecurityLendingEntry(const ADEstimatedSecurityLendingEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ADEstimatedSecurityLendingEntry* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.term_){}
    , decltype(_impl_.rate_){}
    , decltype(_impl_.level_){}
    , decltype(_impl_.postponeprobability_){}
    , decltype(_impl_.amount_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.term_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.term_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_term().empty()) {
    _this->_impl_.term_.Set(from._internal_term(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.rate_, &from._impl_.rate_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.amount_) -
    reinterpret_cast<char*>(&_impl_.rate_)) + sizeof(_impl_.amount_));
  // @@protoc_insertion_point(copy_constructor:com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry)
}

inline void ADEstimatedSecurityLendingEntry::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.term_){}
    , decltype(_impl_.rate_){int64_t{0}}
    , decltype(_impl_.level_){0}
    , decltype(_impl_.postponeprobability_){0}
    , decltype(_impl_.amount_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.term_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.term_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ADEstimatedSecurityLendingEntry::~ADEstimatedSecurityLendingEntry() {
  // @@protoc_insertion_point(destructor:com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ADEstimatedSecurityLendingEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.term_.Destroy();
}

void ADEstimatedSecurityLendingEntry::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ADEstimatedSecurityLendingEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.term_.ClearToEmpty();
  ::memset(&_impl_.rate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.amount_) -
      reinterpret_cast<char*>(&_impl_.rate_)) + sizeof(_impl_.amount_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ADEstimatedSecurityLendingEntry::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Level = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 Rate = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.rate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Term = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_term();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry.Term"));
        } else
          goto handle_unusual;
        continue;
      // int64 Amount = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.amount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 PostponeProbability = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.postponeprobability_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ADEstimatedSecurityLendingEntry::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Level = 1;
  if (this->_internal_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_level(), target);
  }

  // int64 Rate = 2;
  if (this->_internal_rate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_rate(), target);
  }

  // string Term = 3;
  if (!this->_internal_term().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_term().data(), static_cast<int>(this->_internal_term().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry.Term");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_term(), target);
  }

  // int64 Amount = 4;
  if (this->_internal_amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_amount(), target);
  }

  // int32 PostponeProbability = 5;
  if (this->_internal_postponeprobability() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_postponeprobability(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry)
  return target;
}

size_t ADEstimatedSecurityLendingEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Term = 3;
  if (!this->_internal_term().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_term());
  }

  // int64 Rate = 2;
  if (this->_internal_rate() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_rate());
  }

  // int32 Level = 1;
  if (this->_internal_level() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_level());
  }

  // int32 PostponeProbability = 5;
  if (this->_internal_postponeprobability() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_postponeprobability());
  }

  // int64 Amount = 4;
  if (this->_internal_amount() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_amount());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ADEstimatedSecurityLendingEntry::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ADEstimatedSecurityLendingEntry::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ADEstimatedSecurityLendingEntry::GetClassData() const { return &_class_data_; }


void ADEstimatedSecurityLendingEntry::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ADEstimatedSecurityLendingEntry*>(&to_msg);
  auto& from = static_cast<const ADEstimatedSecurityLendingEntry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_term().empty()) {
    _this->_internal_set_term(from._internal_term());
  }
  if (from._internal_rate() != 0) {
    _this->_internal_set_rate(from._internal_rate());
  }
  if (from._internal_level() != 0) {
    _this->_internal_set_level(from._internal_level());
  }
  if (from._internal_postponeprobability() != 0) {
    _this->_internal_set_postponeprobability(from._internal_postponeprobability());
  }
  if (from._internal_amount() != 0) {
    _this->_internal_set_amount(from._internal_amount());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ADEstimatedSecurityLendingEntry::CopyFrom(const ADEstimatedSecurityLendingEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ADEstimatedSecurityLendingEntry::IsInitialized() const {
  return true;
}

void ADEstimatedSecurityLendingEntry::InternalSwap(ADEstimatedSecurityLendingEntry* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.term_, lhs_arena,
      &other->_impl_.term_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ADEstimatedSecurityLendingEntry, _impl_.amount_)
      + sizeof(ADEstimatedSecurityLendingEntry::_impl_.amount_)
      - PROTOBUF_FIELD_OFFSET(ADEstimatedSecurityLendingEntry, _impl_.rate_)>(
          reinterpret_cast<char*>(&_impl_.rate_),
          reinterpret_cast<char*>(&other->_impl_.rate_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ADEstimatedSecurityLendingEntry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MDSecurityLending_2eproto_getter, &descriptor_table_MDSecurityLending_2eproto_once,
      file_level_metadata_MDSecurityLending_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::htsc::mdc::insight::model::MDSecurityLending*
Arena::CreateMaybeMessage< ::com::htsc::mdc::insight::model::MDSecurityLending >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::htsc::mdc::insight::model::MDSecurityLending >(arena);
}
template<> PROTOBUF_NOINLINE ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry*
Arena::CreateMaybeMessage< ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::com::htsc::mdc::insight::model::ADSecurityLendingEntry*
Arena::CreateMaybeMessage< ::com::htsc::mdc::insight::model::ADSecurityLendingEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::htsc::mdc::insight::model::ADSecurityLendingEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::com::htsc::mdc::insight::model::ADEstimatedSecurityLendingEntry*
Arena::CreateMaybeMessage< ::com::htsc::mdc::insight::model::ADEstimatedSecurityLendingEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::htsc::mdc::insight::model::ADEstimatedSecurityLendingEntry >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

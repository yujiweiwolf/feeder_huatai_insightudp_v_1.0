// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MDSLEstimation.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_MDSLEstimation_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_MDSLEstimation_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "ESecurityIDSource.pb.h"
#include "ESecurityType.pb.h"
#include "MDSecurityLending.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_MDSLEstimation_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_MDSLEstimation_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_MDSLEstimation_2eproto;
namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {
class ADSLEstimationEntry;
struct ADSLEstimationEntryDefaultTypeInternal;
extern ADSLEstimationEntryDefaultTypeInternal _ADSLEstimationEntry_default_instance_;
class MDSLEstimation;
struct MDSLEstimationDefaultTypeInternal;
extern MDSLEstimationDefaultTypeInternal _MDSLEstimation_default_instance_;
}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> ::com::htsc::mdc::insight::model::ADSLEstimationEntry* Arena::CreateMaybeMessage<::com::htsc::mdc::insight::model::ADSLEstimationEntry>(Arena*);
template<> ::com::htsc::mdc::insight::model::MDSLEstimation* Arena::CreateMaybeMessage<::com::htsc::mdc::insight::model::MDSLEstimation>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {

// ===================================================================

class MDSLEstimation final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.htsc.mdc.insight.model.MDSLEstimation) */ {
 public:
  inline MDSLEstimation() : MDSLEstimation(nullptr) {}
  ~MDSLEstimation() override;
  explicit PROTOBUF_CONSTEXPR MDSLEstimation(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MDSLEstimation(const MDSLEstimation& from);
  MDSLEstimation(MDSLEstimation&& from) noexcept
    : MDSLEstimation() {
    *this = ::std::move(from);
  }

  inline MDSLEstimation& operator=(const MDSLEstimation& from) {
    CopyFrom(from);
    return *this;
  }
  inline MDSLEstimation& operator=(MDSLEstimation&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MDSLEstimation& default_instance() {
    return *internal_default_instance();
  }
  static inline const MDSLEstimation* internal_default_instance() {
    return reinterpret_cast<const MDSLEstimation*>(
               &_MDSLEstimation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MDSLEstimation& a, MDSLEstimation& b) {
    a.Swap(&b);
  }
  inline void Swap(MDSLEstimation* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MDSLEstimation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MDSLEstimation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MDSLEstimation>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MDSLEstimation& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MDSLEstimation& from) {
    MDSLEstimation::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MDSLEstimation* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.htsc.mdc.insight.model.MDSLEstimation";
  }
  protected:
  explicit MDSLEstimation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLongTermLendsFieldNumber = 9,
    kValidBorrowsFieldNumber = 20,
    kValidALendsFieldNumber = 21,
    kValidBLendsFieldNumber = 22,
    kBorrowsFieldNumber = 23,
    kALendsFieldNumber = 24,
    kBLendsFieldNumber = 25,
    kHTSCSecurityIDFieldNumber = 1,
    kTradingPhaseCodeFieldNumber = 5,
    kMDDateFieldNumber = 2,
    kMDTimeFieldNumber = 3,
    kDataTimestampFieldNumber = 4,
    kSecurityIDSourceFieldNumber = 6,
    kSecurityTypeFieldNumber = 7,
    kLastPxFieldNumber = 10,
    kPreClosePxFieldNumber = 11,
    kHighRateFieldNumber = 12,
    kLowRateFieldNumber = 13,
    kHtscVolumeFieldNumber = 14,
    kPreHtscVolumeFieldNumber = 15,
    kWeightedRateFieldNumber = 16,
    kPreWeightedRateFieldNumber = 17,
    kBestBorrowRateFieldNumber = 18,
    kBestLendRateFieldNumber = 19,
    kDataMultiplePowerOf10FieldNumber = 8,
  };
  // repeated .com.htsc.mdc.insight.model.ADSLEstimationEntry LongTermLends = 9;
  int longtermlends_size() const;
  private:
  int _internal_longtermlends_size() const;
  public:
  void clear_longtermlends();
  ::com::htsc::mdc::insight::model::ADSLEstimationEntry* mutable_longtermlends(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADSLEstimationEntry >*
      mutable_longtermlends();
  private:
  const ::com::htsc::mdc::insight::model::ADSLEstimationEntry& _internal_longtermlends(int index) const;
  ::com::htsc::mdc::insight::model::ADSLEstimationEntry* _internal_add_longtermlends();
  public:
  const ::com::htsc::mdc::insight::model::ADSLEstimationEntry& longtermlends(int index) const;
  ::com::htsc::mdc::insight::model::ADSLEstimationEntry* add_longtermlends();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADSLEstimationEntry >&
      longtermlends() const;

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidBorrows = 20;
  int validborrows_size() const;
  private:
  int _internal_validborrows_size() const;
  public:
  void clear_validborrows();
  ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry* mutable_validborrows(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry >*
      mutable_validborrows();
  private:
  const ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry& _internal_validborrows(int index) const;
  ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry* _internal_add_validborrows();
  public:
  const ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry& validborrows(int index) const;
  ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry* add_validborrows();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry >&
      validborrows() const;

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidALends = 21;
  int validalends_size() const;
  private:
  int _internal_validalends_size() const;
  public:
  void clear_validalends();
  ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry* mutable_validalends(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry >*
      mutable_validalends();
  private:
  const ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry& _internal_validalends(int index) const;
  ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry* _internal_add_validalends();
  public:
  const ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry& validalends(int index) const;
  ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry* add_validalends();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry >&
      validalends() const;

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidBLends = 22;
  int validblends_size() const;
  private:
  int _internal_validblends_size() const;
  public:
  void clear_validblends();
  ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry* mutable_validblends(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry >*
      mutable_validblends();
  private:
  const ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry& _internal_validblends(int index) const;
  ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry* _internal_add_validblends();
  public:
  const ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry& validblends(int index) const;
  ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry* add_validblends();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry >&
      validblends() const;

  // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry Borrows = 23;
  int borrows_size() const;
  private:
  int _internal_borrows_size() const;
  public:
  void clear_borrows();
  ::com::htsc::mdc::insight::model::ADSecurityLendingEntry* mutable_borrows(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADSecurityLendingEntry >*
      mutable_borrows();
  private:
  const ::com::htsc::mdc::insight::model::ADSecurityLendingEntry& _internal_borrows(int index) const;
  ::com::htsc::mdc::insight::model::ADSecurityLendingEntry* _internal_add_borrows();
  public:
  const ::com::htsc::mdc::insight::model::ADSecurityLendingEntry& borrows(int index) const;
  ::com::htsc::mdc::insight::model::ADSecurityLendingEntry* add_borrows();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADSecurityLendingEntry >&
      borrows() const;

  // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry ALends = 24;
  int alends_size() const;
  private:
  int _internal_alends_size() const;
  public:
  void clear_alends();
  ::com::htsc::mdc::insight::model::ADSecurityLendingEntry* mutable_alends(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADSecurityLendingEntry >*
      mutable_alends();
  private:
  const ::com::htsc::mdc::insight::model::ADSecurityLendingEntry& _internal_alends(int index) const;
  ::com::htsc::mdc::insight::model::ADSecurityLendingEntry* _internal_add_alends();
  public:
  const ::com::htsc::mdc::insight::model::ADSecurityLendingEntry& alends(int index) const;
  ::com::htsc::mdc::insight::model::ADSecurityLendingEntry* add_alends();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADSecurityLendingEntry >&
      alends() const;

  // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry BLends = 25;
  int blends_size() const;
  private:
  int _internal_blends_size() const;
  public:
  void clear_blends();
  ::com::htsc::mdc::insight::model::ADSecurityLendingEntry* mutable_blends(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADSecurityLendingEntry >*
      mutable_blends();
  private:
  const ::com::htsc::mdc::insight::model::ADSecurityLendingEntry& _internal_blends(int index) const;
  ::com::htsc::mdc::insight::model::ADSecurityLendingEntry* _internal_add_blends();
  public:
  const ::com::htsc::mdc::insight::model::ADSecurityLendingEntry& blends(int index) const;
  ::com::htsc::mdc::insight::model::ADSecurityLendingEntry* add_blends();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADSecurityLendingEntry >&
      blends() const;

  // string HTSCSecurityID = 1;
  void clear_htscsecurityid();
  const std::string& htscsecurityid() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_htscsecurityid(ArgT0&& arg0, ArgT... args);
  std::string* mutable_htscsecurityid();
  PROTOBUF_NODISCARD std::string* release_htscsecurityid();
  void set_allocated_htscsecurityid(std::string* htscsecurityid);
  private:
  const std::string& _internal_htscsecurityid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_htscsecurityid(const std::string& value);
  std::string* _internal_mutable_htscsecurityid();
  public:

  // string TradingPhaseCode = 5;
  void clear_tradingphasecode();
  const std::string& tradingphasecode() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_tradingphasecode(ArgT0&& arg0, ArgT... args);
  std::string* mutable_tradingphasecode();
  PROTOBUF_NODISCARD std::string* release_tradingphasecode();
  void set_allocated_tradingphasecode(std::string* tradingphasecode);
  private:
  const std::string& _internal_tradingphasecode() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tradingphasecode(const std::string& value);
  std::string* _internal_mutable_tradingphasecode();
  public:

  // int32 MDDate = 2;
  void clear_mddate();
  int32_t mddate() const;
  void set_mddate(int32_t value);
  private:
  int32_t _internal_mddate() const;
  void _internal_set_mddate(int32_t value);
  public:

  // int32 MDTime = 3;
  void clear_mdtime();
  int32_t mdtime() const;
  void set_mdtime(int32_t value);
  private:
  int32_t _internal_mdtime() const;
  void _internal_set_mdtime(int32_t value);
  public:

  // int64 DataTimestamp = 4;
  void clear_datatimestamp();
  int64_t datatimestamp() const;
  void set_datatimestamp(int64_t value);
  private:
  int64_t _internal_datatimestamp() const;
  void _internal_set_datatimestamp(int64_t value);
  public:

  // .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
  void clear_securityidsource();
  ::com::htsc::mdc::model::ESecurityIDSource securityidsource() const;
  void set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value);
  private:
  ::com::htsc::mdc::model::ESecurityIDSource _internal_securityidsource() const;
  void _internal_set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value);
  public:

  // .com.htsc.mdc.model.ESecurityType securityType = 7;
  void clear_securitytype();
  ::com::htsc::mdc::model::ESecurityType securitytype() const;
  void set_securitytype(::com::htsc::mdc::model::ESecurityType value);
  private:
  ::com::htsc::mdc::model::ESecurityType _internal_securitytype() const;
  void _internal_set_securitytype(::com::htsc::mdc::model::ESecurityType value);
  public:

  // int64 LastPx = 10;
  void clear_lastpx();
  int64_t lastpx() const;
  void set_lastpx(int64_t value);
  private:
  int64_t _internal_lastpx() const;
  void _internal_set_lastpx(int64_t value);
  public:

  // int64 PreClosePx = 11;
  void clear_preclosepx();
  int64_t preclosepx() const;
  void set_preclosepx(int64_t value);
  private:
  int64_t _internal_preclosepx() const;
  void _internal_set_preclosepx(int64_t value);
  public:

  // int64 HighRate = 12;
  void clear_highrate();
  int64_t highrate() const;
  void set_highrate(int64_t value);
  private:
  int64_t _internal_highrate() const;
  void _internal_set_highrate(int64_t value);
  public:

  // int64 LowRate = 13;
  void clear_lowrate();
  int64_t lowrate() const;
  void set_lowrate(int64_t value);
  private:
  int64_t _internal_lowrate() const;
  void _internal_set_lowrate(int64_t value);
  public:

  // int64 HtscVolume = 14;
  void clear_htscvolume();
  int64_t htscvolume() const;
  void set_htscvolume(int64_t value);
  private:
  int64_t _internal_htscvolume() const;
  void _internal_set_htscvolume(int64_t value);
  public:

  // int64 PreHtscVolume = 15;
  void clear_prehtscvolume();
  int64_t prehtscvolume() const;
  void set_prehtscvolume(int64_t value);
  private:
  int64_t _internal_prehtscvolume() const;
  void _internal_set_prehtscvolume(int64_t value);
  public:

  // int64 WeightedRate = 16;
  void clear_weightedrate();
  int64_t weightedrate() const;
  void set_weightedrate(int64_t value);
  private:
  int64_t _internal_weightedrate() const;
  void _internal_set_weightedrate(int64_t value);
  public:

  // int64 PreWeightedRate = 17;
  void clear_preweightedrate();
  int64_t preweightedrate() const;
  void set_preweightedrate(int64_t value);
  private:
  int64_t _internal_preweightedrate() const;
  void _internal_set_preweightedrate(int64_t value);
  public:

  // int64 BestBorrowRate = 18;
  void clear_bestborrowrate();
  int64_t bestborrowrate() const;
  void set_bestborrowrate(int64_t value);
  private:
  int64_t _internal_bestborrowrate() const;
  void _internal_set_bestborrowrate(int64_t value);
  public:

  // int64 BestLendRate = 19;
  void clear_bestlendrate();
  int64_t bestlendrate() const;
  void set_bestlendrate(int64_t value);
  private:
  int64_t _internal_bestlendrate() const;
  void _internal_set_bestlendrate(int64_t value);
  public:

  // int32 DataMultiplePowerOf10 = 8;
  void clear_datamultiplepowerof10();
  int32_t datamultiplepowerof10() const;
  void set_datamultiplepowerof10(int32_t value);
  private:
  int32_t _internal_datamultiplepowerof10() const;
  void _internal_set_datamultiplepowerof10(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:com.htsc.mdc.insight.model.MDSLEstimation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADSLEstimationEntry > longtermlends_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry > validborrows_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry > validalends_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry > validblends_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADSecurityLendingEntry > borrows_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADSecurityLendingEntry > alends_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADSecurityLendingEntry > blends_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr htscsecurityid_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tradingphasecode_;
    int32_t mddate_;
    int32_t mdtime_;
    int64_t datatimestamp_;
    int securityidsource_;
    int securitytype_;
    int64_t lastpx_;
    int64_t preclosepx_;
    int64_t highrate_;
    int64_t lowrate_;
    int64_t htscvolume_;
    int64_t prehtscvolume_;
    int64_t weightedrate_;
    int64_t preweightedrate_;
    int64_t bestborrowrate_;
    int64_t bestlendrate_;
    int32_t datamultiplepowerof10_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MDSLEstimation_2eproto;
};
// -------------------------------------------------------------------

class ADSLEstimationEntry final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.htsc.mdc.insight.model.ADSLEstimationEntry) */ {
 public:
  inline ADSLEstimationEntry() : ADSLEstimationEntry(nullptr) {}
  ~ADSLEstimationEntry() override;
  explicit PROTOBUF_CONSTEXPR ADSLEstimationEntry(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ADSLEstimationEntry(const ADSLEstimationEntry& from);
  ADSLEstimationEntry(ADSLEstimationEntry&& from) noexcept
    : ADSLEstimationEntry() {
    *this = ::std::move(from);
  }

  inline ADSLEstimationEntry& operator=(const ADSLEstimationEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline ADSLEstimationEntry& operator=(ADSLEstimationEntry&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ADSLEstimationEntry& default_instance() {
    return *internal_default_instance();
  }
  static inline const ADSLEstimationEntry* internal_default_instance() {
    return reinterpret_cast<const ADSLEstimationEntry*>(
               &_ADSLEstimationEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ADSLEstimationEntry& a, ADSLEstimationEntry& b) {
    a.Swap(&b);
  }
  inline void Swap(ADSLEstimationEntry* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ADSLEstimationEntry* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ADSLEstimationEntry* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ADSLEstimationEntry>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ADSLEstimationEntry& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ADSLEstimationEntry& from) {
    ADSLEstimationEntry::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ADSLEstimationEntry* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.htsc.mdc.insight.model.ADSLEstimationEntry";
  }
  protected:
  explicit ADSLEstimationEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTermFieldNumber = 3,
    kRateFieldNumber = 2,
    kLevelFieldNumber = 1,
    kPostponeProbabilityFieldNumber = 5,
    kAmountFieldNumber = 4,
  };
  // string Term = 3;
  void clear_term();
  const std::string& term() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_term(ArgT0&& arg0, ArgT... args);
  std::string* mutable_term();
  PROTOBUF_NODISCARD std::string* release_term();
  void set_allocated_term(std::string* term);
  private:
  const std::string& _internal_term() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_term(const std::string& value);
  std::string* _internal_mutable_term();
  public:

  // int64 Rate = 2;
  void clear_rate();
  int64_t rate() const;
  void set_rate(int64_t value);
  private:
  int64_t _internal_rate() const;
  void _internal_set_rate(int64_t value);
  public:

  // int32 Level = 1;
  void clear_level();
  int32_t level() const;
  void set_level(int32_t value);
  private:
  int32_t _internal_level() const;
  void _internal_set_level(int32_t value);
  public:

  // int32 PostponeProbability = 5;
  void clear_postponeprobability();
  int32_t postponeprobability() const;
  void set_postponeprobability(int32_t value);
  private:
  int32_t _internal_postponeprobability() const;
  void _internal_set_postponeprobability(int32_t value);
  public:

  // int64 Amount = 4;
  void clear_amount();
  int64_t amount() const;
  void set_amount(int64_t value);
  private:
  int64_t _internal_amount() const;
  void _internal_set_amount(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:com.htsc.mdc.insight.model.ADSLEstimationEntry)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr term_;
    int64_t rate_;
    int32_t level_;
    int32_t postponeprobability_;
    int64_t amount_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MDSLEstimation_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MDSLEstimation

// string HTSCSecurityID = 1;
inline void MDSLEstimation::clear_htscsecurityid() {
  _impl_.htscsecurityid_.ClearToEmpty();
}
inline const std::string& MDSLEstimation::htscsecurityid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSLEstimation.HTSCSecurityID)
  return _internal_htscsecurityid();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void MDSLEstimation::set_htscsecurityid(ArgT0&& arg0, ArgT... args) {
 
 _impl_.htscsecurityid_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSLEstimation.HTSCSecurityID)
}
inline std::string* MDSLEstimation::mutable_htscsecurityid() {
  std::string* _s = _internal_mutable_htscsecurityid();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDSLEstimation.HTSCSecurityID)
  return _s;
}
inline const std::string& MDSLEstimation::_internal_htscsecurityid() const {
  return _impl_.htscsecurityid_.Get();
}
inline void MDSLEstimation::_internal_set_htscsecurityid(const std::string& value) {
  
  _impl_.htscsecurityid_.Set(value, GetArenaForAllocation());
}
inline std::string* MDSLEstimation::_internal_mutable_htscsecurityid() {
  
  return _impl_.htscsecurityid_.Mutable(GetArenaForAllocation());
}
inline std::string* MDSLEstimation::release_htscsecurityid() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDSLEstimation.HTSCSecurityID)
  return _impl_.htscsecurityid_.Release();
}
inline void MDSLEstimation::set_allocated_htscsecurityid(std::string* htscsecurityid) {
  if (htscsecurityid != nullptr) {
    
  } else {
    
  }
  _impl_.htscsecurityid_.SetAllocated(htscsecurityid, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.htscsecurityid_.IsDefault()) {
    _impl_.htscsecurityid_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDSLEstimation.HTSCSecurityID)
}

// int32 MDDate = 2;
inline void MDSLEstimation::clear_mddate() {
  _impl_.mddate_ = 0;
}
inline int32_t MDSLEstimation::_internal_mddate() const {
  return _impl_.mddate_;
}
inline int32_t MDSLEstimation::mddate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSLEstimation.MDDate)
  return _internal_mddate();
}
inline void MDSLEstimation::_internal_set_mddate(int32_t value) {
  
  _impl_.mddate_ = value;
}
inline void MDSLEstimation::set_mddate(int32_t value) {
  _internal_set_mddate(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSLEstimation.MDDate)
}

// int32 MDTime = 3;
inline void MDSLEstimation::clear_mdtime() {
  _impl_.mdtime_ = 0;
}
inline int32_t MDSLEstimation::_internal_mdtime() const {
  return _impl_.mdtime_;
}
inline int32_t MDSLEstimation::mdtime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSLEstimation.MDTime)
  return _internal_mdtime();
}
inline void MDSLEstimation::_internal_set_mdtime(int32_t value) {
  
  _impl_.mdtime_ = value;
}
inline void MDSLEstimation::set_mdtime(int32_t value) {
  _internal_set_mdtime(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSLEstimation.MDTime)
}

// int64 DataTimestamp = 4;
inline void MDSLEstimation::clear_datatimestamp() {
  _impl_.datatimestamp_ = int64_t{0};
}
inline int64_t MDSLEstimation::_internal_datatimestamp() const {
  return _impl_.datatimestamp_;
}
inline int64_t MDSLEstimation::datatimestamp() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSLEstimation.DataTimestamp)
  return _internal_datatimestamp();
}
inline void MDSLEstimation::_internal_set_datatimestamp(int64_t value) {
  
  _impl_.datatimestamp_ = value;
}
inline void MDSLEstimation::set_datatimestamp(int64_t value) {
  _internal_set_datatimestamp(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSLEstimation.DataTimestamp)
}

// string TradingPhaseCode = 5;
inline void MDSLEstimation::clear_tradingphasecode() {
  _impl_.tradingphasecode_.ClearToEmpty();
}
inline const std::string& MDSLEstimation::tradingphasecode() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSLEstimation.TradingPhaseCode)
  return _internal_tradingphasecode();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void MDSLEstimation::set_tradingphasecode(ArgT0&& arg0, ArgT... args) {
 
 _impl_.tradingphasecode_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSLEstimation.TradingPhaseCode)
}
inline std::string* MDSLEstimation::mutable_tradingphasecode() {
  std::string* _s = _internal_mutable_tradingphasecode();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDSLEstimation.TradingPhaseCode)
  return _s;
}
inline const std::string& MDSLEstimation::_internal_tradingphasecode() const {
  return _impl_.tradingphasecode_.Get();
}
inline void MDSLEstimation::_internal_set_tradingphasecode(const std::string& value) {
  
  _impl_.tradingphasecode_.Set(value, GetArenaForAllocation());
}
inline std::string* MDSLEstimation::_internal_mutable_tradingphasecode() {
  
  return _impl_.tradingphasecode_.Mutable(GetArenaForAllocation());
}
inline std::string* MDSLEstimation::release_tradingphasecode() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDSLEstimation.TradingPhaseCode)
  return _impl_.tradingphasecode_.Release();
}
inline void MDSLEstimation::set_allocated_tradingphasecode(std::string* tradingphasecode) {
  if (tradingphasecode != nullptr) {
    
  } else {
    
  }
  _impl_.tradingphasecode_.SetAllocated(tradingphasecode, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.tradingphasecode_.IsDefault()) {
    _impl_.tradingphasecode_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDSLEstimation.TradingPhaseCode)
}

// .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
inline void MDSLEstimation::clear_securityidsource() {
  _impl_.securityidsource_ = 0;
}
inline ::com::htsc::mdc::model::ESecurityIDSource MDSLEstimation::_internal_securityidsource() const {
  return static_cast< ::com::htsc::mdc::model::ESecurityIDSource >(_impl_.securityidsource_);
}
inline ::com::htsc::mdc::model::ESecurityIDSource MDSLEstimation::securityidsource() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSLEstimation.securityIDSource)
  return _internal_securityidsource();
}
inline void MDSLEstimation::_internal_set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value) {
  
  _impl_.securityidsource_ = value;
}
inline void MDSLEstimation::set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value) {
  _internal_set_securityidsource(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSLEstimation.securityIDSource)
}

// .com.htsc.mdc.model.ESecurityType securityType = 7;
inline void MDSLEstimation::clear_securitytype() {
  _impl_.securitytype_ = 0;
}
inline ::com::htsc::mdc::model::ESecurityType MDSLEstimation::_internal_securitytype() const {
  return static_cast< ::com::htsc::mdc::model::ESecurityType >(_impl_.securitytype_);
}
inline ::com::htsc::mdc::model::ESecurityType MDSLEstimation::securitytype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSLEstimation.securityType)
  return _internal_securitytype();
}
inline void MDSLEstimation::_internal_set_securitytype(::com::htsc::mdc::model::ESecurityType value) {
  
  _impl_.securitytype_ = value;
}
inline void MDSLEstimation::set_securitytype(::com::htsc::mdc::model::ESecurityType value) {
  _internal_set_securitytype(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSLEstimation.securityType)
}

// int32 DataMultiplePowerOf10 = 8;
inline void MDSLEstimation::clear_datamultiplepowerof10() {
  _impl_.datamultiplepowerof10_ = 0;
}
inline int32_t MDSLEstimation::_internal_datamultiplepowerof10() const {
  return _impl_.datamultiplepowerof10_;
}
inline int32_t MDSLEstimation::datamultiplepowerof10() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSLEstimation.DataMultiplePowerOf10)
  return _internal_datamultiplepowerof10();
}
inline void MDSLEstimation::_internal_set_datamultiplepowerof10(int32_t value) {
  
  _impl_.datamultiplepowerof10_ = value;
}
inline void MDSLEstimation::set_datamultiplepowerof10(int32_t value) {
  _internal_set_datamultiplepowerof10(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSLEstimation.DataMultiplePowerOf10)
}

// repeated .com.htsc.mdc.insight.model.ADSLEstimationEntry LongTermLends = 9;
inline int MDSLEstimation::_internal_longtermlends_size() const {
  return _impl_.longtermlends_.size();
}
inline int MDSLEstimation::longtermlends_size() const {
  return _internal_longtermlends_size();
}
inline void MDSLEstimation::clear_longtermlends() {
  _impl_.longtermlends_.Clear();
}
inline ::com::htsc::mdc::insight::model::ADSLEstimationEntry* MDSLEstimation::mutable_longtermlends(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDSLEstimation.LongTermLends)
  return _impl_.longtermlends_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADSLEstimationEntry >*
MDSLEstimation::mutable_longtermlends() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.MDSLEstimation.LongTermLends)
  return &_impl_.longtermlends_;
}
inline const ::com::htsc::mdc::insight::model::ADSLEstimationEntry& MDSLEstimation::_internal_longtermlends(int index) const {
  return _impl_.longtermlends_.Get(index);
}
inline const ::com::htsc::mdc::insight::model::ADSLEstimationEntry& MDSLEstimation::longtermlends(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSLEstimation.LongTermLends)
  return _internal_longtermlends(index);
}
inline ::com::htsc::mdc::insight::model::ADSLEstimationEntry* MDSLEstimation::_internal_add_longtermlends() {
  return _impl_.longtermlends_.Add();
}
inline ::com::htsc::mdc::insight::model::ADSLEstimationEntry* MDSLEstimation::add_longtermlends() {
  ::com::htsc::mdc::insight::model::ADSLEstimationEntry* _add = _internal_add_longtermlends();
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.MDSLEstimation.LongTermLends)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADSLEstimationEntry >&
MDSLEstimation::longtermlends() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.MDSLEstimation.LongTermLends)
  return _impl_.longtermlends_;
}

// int64 LastPx = 10;
inline void MDSLEstimation::clear_lastpx() {
  _impl_.lastpx_ = int64_t{0};
}
inline int64_t MDSLEstimation::_internal_lastpx() const {
  return _impl_.lastpx_;
}
inline int64_t MDSLEstimation::lastpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSLEstimation.LastPx)
  return _internal_lastpx();
}
inline void MDSLEstimation::_internal_set_lastpx(int64_t value) {
  
  _impl_.lastpx_ = value;
}
inline void MDSLEstimation::set_lastpx(int64_t value) {
  _internal_set_lastpx(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSLEstimation.LastPx)
}

// int64 PreClosePx = 11;
inline void MDSLEstimation::clear_preclosepx() {
  _impl_.preclosepx_ = int64_t{0};
}
inline int64_t MDSLEstimation::_internal_preclosepx() const {
  return _impl_.preclosepx_;
}
inline int64_t MDSLEstimation::preclosepx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSLEstimation.PreClosePx)
  return _internal_preclosepx();
}
inline void MDSLEstimation::_internal_set_preclosepx(int64_t value) {
  
  _impl_.preclosepx_ = value;
}
inline void MDSLEstimation::set_preclosepx(int64_t value) {
  _internal_set_preclosepx(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSLEstimation.PreClosePx)
}

// int64 HighRate = 12;
inline void MDSLEstimation::clear_highrate() {
  _impl_.highrate_ = int64_t{0};
}
inline int64_t MDSLEstimation::_internal_highrate() const {
  return _impl_.highrate_;
}
inline int64_t MDSLEstimation::highrate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSLEstimation.HighRate)
  return _internal_highrate();
}
inline void MDSLEstimation::_internal_set_highrate(int64_t value) {
  
  _impl_.highrate_ = value;
}
inline void MDSLEstimation::set_highrate(int64_t value) {
  _internal_set_highrate(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSLEstimation.HighRate)
}

// int64 LowRate = 13;
inline void MDSLEstimation::clear_lowrate() {
  _impl_.lowrate_ = int64_t{0};
}
inline int64_t MDSLEstimation::_internal_lowrate() const {
  return _impl_.lowrate_;
}
inline int64_t MDSLEstimation::lowrate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSLEstimation.LowRate)
  return _internal_lowrate();
}
inline void MDSLEstimation::_internal_set_lowrate(int64_t value) {
  
  _impl_.lowrate_ = value;
}
inline void MDSLEstimation::set_lowrate(int64_t value) {
  _internal_set_lowrate(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSLEstimation.LowRate)
}

// int64 HtscVolume = 14;
inline void MDSLEstimation::clear_htscvolume() {
  _impl_.htscvolume_ = int64_t{0};
}
inline int64_t MDSLEstimation::_internal_htscvolume() const {
  return _impl_.htscvolume_;
}
inline int64_t MDSLEstimation::htscvolume() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSLEstimation.HtscVolume)
  return _internal_htscvolume();
}
inline void MDSLEstimation::_internal_set_htscvolume(int64_t value) {
  
  _impl_.htscvolume_ = value;
}
inline void MDSLEstimation::set_htscvolume(int64_t value) {
  _internal_set_htscvolume(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSLEstimation.HtscVolume)
}

// int64 PreHtscVolume = 15;
inline void MDSLEstimation::clear_prehtscvolume() {
  _impl_.prehtscvolume_ = int64_t{0};
}
inline int64_t MDSLEstimation::_internal_prehtscvolume() const {
  return _impl_.prehtscvolume_;
}
inline int64_t MDSLEstimation::prehtscvolume() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSLEstimation.PreHtscVolume)
  return _internal_prehtscvolume();
}
inline void MDSLEstimation::_internal_set_prehtscvolume(int64_t value) {
  
  _impl_.prehtscvolume_ = value;
}
inline void MDSLEstimation::set_prehtscvolume(int64_t value) {
  _internal_set_prehtscvolume(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSLEstimation.PreHtscVolume)
}

// int64 WeightedRate = 16;
inline void MDSLEstimation::clear_weightedrate() {
  _impl_.weightedrate_ = int64_t{0};
}
inline int64_t MDSLEstimation::_internal_weightedrate() const {
  return _impl_.weightedrate_;
}
inline int64_t MDSLEstimation::weightedrate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSLEstimation.WeightedRate)
  return _internal_weightedrate();
}
inline void MDSLEstimation::_internal_set_weightedrate(int64_t value) {
  
  _impl_.weightedrate_ = value;
}
inline void MDSLEstimation::set_weightedrate(int64_t value) {
  _internal_set_weightedrate(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSLEstimation.WeightedRate)
}

// int64 PreWeightedRate = 17;
inline void MDSLEstimation::clear_preweightedrate() {
  _impl_.preweightedrate_ = int64_t{0};
}
inline int64_t MDSLEstimation::_internal_preweightedrate() const {
  return _impl_.preweightedrate_;
}
inline int64_t MDSLEstimation::preweightedrate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSLEstimation.PreWeightedRate)
  return _internal_preweightedrate();
}
inline void MDSLEstimation::_internal_set_preweightedrate(int64_t value) {
  
  _impl_.preweightedrate_ = value;
}
inline void MDSLEstimation::set_preweightedrate(int64_t value) {
  _internal_set_preweightedrate(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSLEstimation.PreWeightedRate)
}

// int64 BestBorrowRate = 18;
inline void MDSLEstimation::clear_bestborrowrate() {
  _impl_.bestborrowrate_ = int64_t{0};
}
inline int64_t MDSLEstimation::_internal_bestborrowrate() const {
  return _impl_.bestborrowrate_;
}
inline int64_t MDSLEstimation::bestborrowrate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSLEstimation.BestBorrowRate)
  return _internal_bestborrowrate();
}
inline void MDSLEstimation::_internal_set_bestborrowrate(int64_t value) {
  
  _impl_.bestborrowrate_ = value;
}
inline void MDSLEstimation::set_bestborrowrate(int64_t value) {
  _internal_set_bestborrowrate(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSLEstimation.BestBorrowRate)
}

// int64 BestLendRate = 19;
inline void MDSLEstimation::clear_bestlendrate() {
  _impl_.bestlendrate_ = int64_t{0};
}
inline int64_t MDSLEstimation::_internal_bestlendrate() const {
  return _impl_.bestlendrate_;
}
inline int64_t MDSLEstimation::bestlendrate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSLEstimation.BestLendRate)
  return _internal_bestlendrate();
}
inline void MDSLEstimation::_internal_set_bestlendrate(int64_t value) {
  
  _impl_.bestlendrate_ = value;
}
inline void MDSLEstimation::set_bestlendrate(int64_t value) {
  _internal_set_bestlendrate(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSLEstimation.BestLendRate)
}

// repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidBorrows = 20;
inline int MDSLEstimation::_internal_validborrows_size() const {
  return _impl_.validborrows_.size();
}
inline int MDSLEstimation::validborrows_size() const {
  return _internal_validborrows_size();
}
inline ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry* MDSLEstimation::mutable_validborrows(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDSLEstimation.ValidBorrows)
  return _impl_.validborrows_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry >*
MDSLEstimation::mutable_validborrows() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.MDSLEstimation.ValidBorrows)
  return &_impl_.validborrows_;
}
inline const ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry& MDSLEstimation::_internal_validborrows(int index) const {
  return _impl_.validborrows_.Get(index);
}
inline const ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry& MDSLEstimation::validborrows(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSLEstimation.ValidBorrows)
  return _internal_validborrows(index);
}
inline ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry* MDSLEstimation::_internal_add_validborrows() {
  return _impl_.validborrows_.Add();
}
inline ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry* MDSLEstimation::add_validborrows() {
  ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry* _add = _internal_add_validborrows();
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.MDSLEstimation.ValidBorrows)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry >&
MDSLEstimation::validborrows() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.MDSLEstimation.ValidBorrows)
  return _impl_.validborrows_;
}

// repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidALends = 21;
inline int MDSLEstimation::_internal_validalends_size() const {
  return _impl_.validalends_.size();
}
inline int MDSLEstimation::validalends_size() const {
  return _internal_validalends_size();
}
inline ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry* MDSLEstimation::mutable_validalends(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDSLEstimation.ValidALends)
  return _impl_.validalends_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry >*
MDSLEstimation::mutable_validalends() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.MDSLEstimation.ValidALends)
  return &_impl_.validalends_;
}
inline const ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry& MDSLEstimation::_internal_validalends(int index) const {
  return _impl_.validalends_.Get(index);
}
inline const ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry& MDSLEstimation::validalends(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSLEstimation.ValidALends)
  return _internal_validalends(index);
}
inline ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry* MDSLEstimation::_internal_add_validalends() {
  return _impl_.validalends_.Add();
}
inline ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry* MDSLEstimation::add_validalends() {
  ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry* _add = _internal_add_validalends();
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.MDSLEstimation.ValidALends)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry >&
MDSLEstimation::validalends() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.MDSLEstimation.ValidALends)
  return _impl_.validalends_;
}

// repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidBLends = 22;
inline int MDSLEstimation::_internal_validblends_size() const {
  return _impl_.validblends_.size();
}
inline int MDSLEstimation::validblends_size() const {
  return _internal_validblends_size();
}
inline ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry* MDSLEstimation::mutable_validblends(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDSLEstimation.ValidBLends)
  return _impl_.validblends_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry >*
MDSLEstimation::mutable_validblends() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.MDSLEstimation.ValidBLends)
  return &_impl_.validblends_;
}
inline const ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry& MDSLEstimation::_internal_validblends(int index) const {
  return _impl_.validblends_.Get(index);
}
inline const ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry& MDSLEstimation::validblends(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSLEstimation.ValidBLends)
  return _internal_validblends(index);
}
inline ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry* MDSLEstimation::_internal_add_validblends() {
  return _impl_.validblends_.Add();
}
inline ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry* MDSLEstimation::add_validblends() {
  ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry* _add = _internal_add_validblends();
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.MDSLEstimation.ValidBLends)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry >&
MDSLEstimation::validblends() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.MDSLEstimation.ValidBLends)
  return _impl_.validblends_;
}

// repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry Borrows = 23;
inline int MDSLEstimation::_internal_borrows_size() const {
  return _impl_.borrows_.size();
}
inline int MDSLEstimation::borrows_size() const {
  return _internal_borrows_size();
}
inline ::com::htsc::mdc::insight::model::ADSecurityLendingEntry* MDSLEstimation::mutable_borrows(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDSLEstimation.Borrows)
  return _impl_.borrows_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADSecurityLendingEntry >*
MDSLEstimation::mutable_borrows() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.MDSLEstimation.Borrows)
  return &_impl_.borrows_;
}
inline const ::com::htsc::mdc::insight::model::ADSecurityLendingEntry& MDSLEstimation::_internal_borrows(int index) const {
  return _impl_.borrows_.Get(index);
}
inline const ::com::htsc::mdc::insight::model::ADSecurityLendingEntry& MDSLEstimation::borrows(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSLEstimation.Borrows)
  return _internal_borrows(index);
}
inline ::com::htsc::mdc::insight::model::ADSecurityLendingEntry* MDSLEstimation::_internal_add_borrows() {
  return _impl_.borrows_.Add();
}
inline ::com::htsc::mdc::insight::model::ADSecurityLendingEntry* MDSLEstimation::add_borrows() {
  ::com::htsc::mdc::insight::model::ADSecurityLendingEntry* _add = _internal_add_borrows();
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.MDSLEstimation.Borrows)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADSecurityLendingEntry >&
MDSLEstimation::borrows() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.MDSLEstimation.Borrows)
  return _impl_.borrows_;
}

// repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry ALends = 24;
inline int MDSLEstimation::_internal_alends_size() const {
  return _impl_.alends_.size();
}
inline int MDSLEstimation::alends_size() const {
  return _internal_alends_size();
}
inline ::com::htsc::mdc::insight::model::ADSecurityLendingEntry* MDSLEstimation::mutable_alends(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDSLEstimation.ALends)
  return _impl_.alends_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADSecurityLendingEntry >*
MDSLEstimation::mutable_alends() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.MDSLEstimation.ALends)
  return &_impl_.alends_;
}
inline const ::com::htsc::mdc::insight::model::ADSecurityLendingEntry& MDSLEstimation::_internal_alends(int index) const {
  return _impl_.alends_.Get(index);
}
inline const ::com::htsc::mdc::insight::model::ADSecurityLendingEntry& MDSLEstimation::alends(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSLEstimation.ALends)
  return _internal_alends(index);
}
inline ::com::htsc::mdc::insight::model::ADSecurityLendingEntry* MDSLEstimation::_internal_add_alends() {
  return _impl_.alends_.Add();
}
inline ::com::htsc::mdc::insight::model::ADSecurityLendingEntry* MDSLEstimation::add_alends() {
  ::com::htsc::mdc::insight::model::ADSecurityLendingEntry* _add = _internal_add_alends();
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.MDSLEstimation.ALends)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADSecurityLendingEntry >&
MDSLEstimation::alends() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.MDSLEstimation.ALends)
  return _impl_.alends_;
}

// repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry BLends = 25;
inline int MDSLEstimation::_internal_blends_size() const {
  return _impl_.blends_.size();
}
inline int MDSLEstimation::blends_size() const {
  return _internal_blends_size();
}
inline ::com::htsc::mdc::insight::model::ADSecurityLendingEntry* MDSLEstimation::mutable_blends(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDSLEstimation.BLends)
  return _impl_.blends_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADSecurityLendingEntry >*
MDSLEstimation::mutable_blends() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.MDSLEstimation.BLends)
  return &_impl_.blends_;
}
inline const ::com::htsc::mdc::insight::model::ADSecurityLendingEntry& MDSLEstimation::_internal_blends(int index) const {
  return _impl_.blends_.Get(index);
}
inline const ::com::htsc::mdc::insight::model::ADSecurityLendingEntry& MDSLEstimation::blends(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSLEstimation.BLends)
  return _internal_blends(index);
}
inline ::com::htsc::mdc::insight::model::ADSecurityLendingEntry* MDSLEstimation::_internal_add_blends() {
  return _impl_.blends_.Add();
}
inline ::com::htsc::mdc::insight::model::ADSecurityLendingEntry* MDSLEstimation::add_blends() {
  ::com::htsc::mdc::insight::model::ADSecurityLendingEntry* _add = _internal_add_blends();
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.MDSLEstimation.BLends)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADSecurityLendingEntry >&
MDSLEstimation::blends() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.MDSLEstimation.BLends)
  return _impl_.blends_;
}

// -------------------------------------------------------------------

// ADSLEstimationEntry

// int32 Level = 1;
inline void ADSLEstimationEntry::clear_level() {
  _impl_.level_ = 0;
}
inline int32_t ADSLEstimationEntry::_internal_level() const {
  return _impl_.level_;
}
inline int32_t ADSLEstimationEntry::level() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADSLEstimationEntry.Level)
  return _internal_level();
}
inline void ADSLEstimationEntry::_internal_set_level(int32_t value) {
  
  _impl_.level_ = value;
}
inline void ADSLEstimationEntry::set_level(int32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADSLEstimationEntry.Level)
}

// int64 Rate = 2;
inline void ADSLEstimationEntry::clear_rate() {
  _impl_.rate_ = int64_t{0};
}
inline int64_t ADSLEstimationEntry::_internal_rate() const {
  return _impl_.rate_;
}
inline int64_t ADSLEstimationEntry::rate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADSLEstimationEntry.Rate)
  return _internal_rate();
}
inline void ADSLEstimationEntry::_internal_set_rate(int64_t value) {
  
  _impl_.rate_ = value;
}
inline void ADSLEstimationEntry::set_rate(int64_t value) {
  _internal_set_rate(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADSLEstimationEntry.Rate)
}

// string Term = 3;
inline void ADSLEstimationEntry::clear_term() {
  _impl_.term_.ClearToEmpty();
}
inline const std::string& ADSLEstimationEntry::term() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADSLEstimationEntry.Term)
  return _internal_term();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ADSLEstimationEntry::set_term(ArgT0&& arg0, ArgT... args) {
 
 _impl_.term_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADSLEstimationEntry.Term)
}
inline std::string* ADSLEstimationEntry::mutable_term() {
  std::string* _s = _internal_mutable_term();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADSLEstimationEntry.Term)
  return _s;
}
inline const std::string& ADSLEstimationEntry::_internal_term() const {
  return _impl_.term_.Get();
}
inline void ADSLEstimationEntry::_internal_set_term(const std::string& value) {
  
  _impl_.term_.Set(value, GetArenaForAllocation());
}
inline std::string* ADSLEstimationEntry::_internal_mutable_term() {
  
  return _impl_.term_.Mutable(GetArenaForAllocation());
}
inline std::string* ADSLEstimationEntry::release_term() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.ADSLEstimationEntry.Term)
  return _impl_.term_.Release();
}
inline void ADSLEstimationEntry::set_allocated_term(std::string* term) {
  if (term != nullptr) {
    
  } else {
    
  }
  _impl_.term_.SetAllocated(term, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.term_.IsDefault()) {
    _impl_.term_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.ADSLEstimationEntry.Term)
}

// int64 Amount = 4;
inline void ADSLEstimationEntry::clear_amount() {
  _impl_.amount_ = int64_t{0};
}
inline int64_t ADSLEstimationEntry::_internal_amount() const {
  return _impl_.amount_;
}
inline int64_t ADSLEstimationEntry::amount() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADSLEstimationEntry.Amount)
  return _internal_amount();
}
inline void ADSLEstimationEntry::_internal_set_amount(int64_t value) {
  
  _impl_.amount_ = value;
}
inline void ADSLEstimationEntry::set_amount(int64_t value) {
  _internal_set_amount(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADSLEstimationEntry.Amount)
}

// int32 PostponeProbability = 5;
inline void ADSLEstimationEntry::clear_postponeprobability() {
  _impl_.postponeprobability_ = 0;
}
inline int32_t ADSLEstimationEntry::_internal_postponeprobability() const {
  return _impl_.postponeprobability_;
}
inline int32_t ADSLEstimationEntry::postponeprobability() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADSLEstimationEntry.PostponeProbability)
  return _internal_postponeprobability();
}
inline void ADSLEstimationEntry::_internal_set_postponeprobability(int32_t value) {
  
  _impl_.postponeprobability_ = value;
}
inline void ADSLEstimationEntry::set_postponeprobability(int32_t value) {
  _internal_set_postponeprobability(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADSLEstimationEntry.PostponeProbability)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_MDSLEstimation_2eproto

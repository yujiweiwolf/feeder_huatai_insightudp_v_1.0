// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ADDerivedAnalysis.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ADDerivedAnalysis_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ADDerivedAnalysis_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "ESecurityType.pb.h"
#include "ESecurityIDSource.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ADDerivedAnalysis_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ADDerivedAnalysis_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ADDerivedAnalysis_2eproto;
namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {
class ADAmv;
struct ADAmvDefaultTypeInternal;
extern ADAmvDefaultTypeInternal _ADAmv_default_instance_;
class ADArBr;
struct ADArBrDefaultTypeInternal;
extern ADArBrDefaultTypeInternal _ADArBr_default_instance_;
class ADBias;
struct ADBiasDefaultTypeInternal;
extern ADBiasDefaultTypeInternal _ADBias_default_instance_;
class ADBoll;
struct ADBollDefaultTypeInternal;
extern ADBollDefaultTypeInternal _ADBoll_default_instance_;
class ADCr;
struct ADCrDefaultTypeInternal;
extern ADCrDefaultTypeInternal _ADCr_default_instance_;
class ADDerivedAnalysis;
struct ADDerivedAnalysisDefaultTypeInternal;
extern ADDerivedAnalysisDefaultTypeInternal _ADDerivedAnalysis_default_instance_;
class ADVmaMa;
struct ADVmaMaDefaultTypeInternal;
extern ADVmaMaDefaultTypeInternal _ADVmaMa_default_instance_;
class ADVr;
struct ADVrDefaultTypeInternal;
extern ADVrDefaultTypeInternal _ADVr_default_instance_;
class ADWr;
struct ADWrDefaultTypeInternal;
extern ADWrDefaultTypeInternal _ADWr_default_instance_;
}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> ::com::htsc::mdc::insight::model::ADAmv* Arena::CreateMaybeMessage<::com::htsc::mdc::insight::model::ADAmv>(Arena*);
template<> ::com::htsc::mdc::insight::model::ADArBr* Arena::CreateMaybeMessage<::com::htsc::mdc::insight::model::ADArBr>(Arena*);
template<> ::com::htsc::mdc::insight::model::ADBias* Arena::CreateMaybeMessage<::com::htsc::mdc::insight::model::ADBias>(Arena*);
template<> ::com::htsc::mdc::insight::model::ADBoll* Arena::CreateMaybeMessage<::com::htsc::mdc::insight::model::ADBoll>(Arena*);
template<> ::com::htsc::mdc::insight::model::ADCr* Arena::CreateMaybeMessage<::com::htsc::mdc::insight::model::ADCr>(Arena*);
template<> ::com::htsc::mdc::insight::model::ADDerivedAnalysis* Arena::CreateMaybeMessage<::com::htsc::mdc::insight::model::ADDerivedAnalysis>(Arena*);
template<> ::com::htsc::mdc::insight::model::ADVmaMa* Arena::CreateMaybeMessage<::com::htsc::mdc::insight::model::ADVmaMa>(Arena*);
template<> ::com::htsc::mdc::insight::model::ADVr* Arena::CreateMaybeMessage<::com::htsc::mdc::insight::model::ADVr>(Arena*);
template<> ::com::htsc::mdc::insight::model::ADWr* Arena::CreateMaybeMessage<::com::htsc::mdc::insight::model::ADWr>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {

// ===================================================================

class ADDerivedAnalysis final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.htsc.mdc.insight.model.ADDerivedAnalysis) */ {
 public:
  inline ADDerivedAnalysis() : ADDerivedAnalysis(nullptr) {}
  ~ADDerivedAnalysis() override;
  explicit PROTOBUF_CONSTEXPR ADDerivedAnalysis(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ADDerivedAnalysis(const ADDerivedAnalysis& from);
  ADDerivedAnalysis(ADDerivedAnalysis&& from) noexcept
    : ADDerivedAnalysis() {
    *this = ::std::move(from);
  }

  inline ADDerivedAnalysis& operator=(const ADDerivedAnalysis& from) {
    CopyFrom(from);
    return *this;
  }
  inline ADDerivedAnalysis& operator=(ADDerivedAnalysis&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ADDerivedAnalysis& default_instance() {
    return *internal_default_instance();
  }
  static inline const ADDerivedAnalysis* internal_default_instance() {
    return reinterpret_cast<const ADDerivedAnalysis*>(
               &_ADDerivedAnalysis_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ADDerivedAnalysis& a, ADDerivedAnalysis& b) {
    a.Swap(&b);
  }
  inline void Swap(ADDerivedAnalysis* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ADDerivedAnalysis* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ADDerivedAnalysis* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ADDerivedAnalysis>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ADDerivedAnalysis& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ADDerivedAnalysis& from) {
    ADDerivedAnalysis::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ADDerivedAnalysis* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.htsc.mdc.insight.model.ADDerivedAnalysis";
  }
  protected:
  explicit ADDerivedAnalysis(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAmvFieldNumber = 41,
    kArBrFieldNumber = 42,
    kBiasFieldNumber = 43,
    kBollFieldNumber = 44,
    kCrFieldNumber = 45,
    kVmaMaFieldNumber = 46,
    kVrFieldNumber = 47,
    kWrFieldNumber = 48,
    kHTSCSecurityIDFieldNumber = 1,
    kTradingPhaseCodeFieldNumber = 5,
    kMDDateFieldNumber = 2,
    kMDTimeFieldNumber = 3,
    kDataTimestampFieldNumber = 4,
    kSecurityIDSourceFieldNumber = 6,
    kSecurityTypeFieldNumber = 7,
    kNumTradesFieldNumber = 8,
    kTotalVolumeTradeFieldNumber = 9,
    kTotalValueTradeFieldNumber = 10,
    kPreClosePxFieldNumber = 11,
    kLastPxFieldNumber = 12,
    kOpenPxFieldNumber = 13,
    kClosePxFieldNumber = 14,
    kHighPxFieldNumber = 15,
    kLowPxFieldNumber = 16,
    kIOPVFieldNumber = 17,
    kPreIOPVFieldNumber = 18,
    kOpenInterestFieldNumber = 19,
    kPreOpenInterestFieldNumber = 20,
    kSettlePriceFieldNumber = 21,
    kPreSettlePriceFieldNumber = 22,
    kExchangeDateFieldNumber = 23,
    kExchangeTimeFieldNumber = 24,
    kBBIFieldNumber = 40,
    kDataMultiplePowerOf10FieldNumber = 49,
  };
  // repeated .com.htsc.mdc.insight.model.ADAmv Amv = 41;
  int amv_size() const;
  private:
  int _internal_amv_size() const;
  public:
  void clear_amv();
  ::com::htsc::mdc::insight::model::ADAmv* mutable_amv(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADAmv >*
      mutable_amv();
  private:
  const ::com::htsc::mdc::insight::model::ADAmv& _internal_amv(int index) const;
  ::com::htsc::mdc::insight::model::ADAmv* _internal_add_amv();
  public:
  const ::com::htsc::mdc::insight::model::ADAmv& amv(int index) const;
  ::com::htsc::mdc::insight::model::ADAmv* add_amv();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADAmv >&
      amv() const;

  // repeated .com.htsc.mdc.insight.model.ADArBr ArBr = 42;
  int arbr_size() const;
  private:
  int _internal_arbr_size() const;
  public:
  void clear_arbr();
  ::com::htsc::mdc::insight::model::ADArBr* mutable_arbr(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADArBr >*
      mutable_arbr();
  private:
  const ::com::htsc::mdc::insight::model::ADArBr& _internal_arbr(int index) const;
  ::com::htsc::mdc::insight::model::ADArBr* _internal_add_arbr();
  public:
  const ::com::htsc::mdc::insight::model::ADArBr& arbr(int index) const;
  ::com::htsc::mdc::insight::model::ADArBr* add_arbr();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADArBr >&
      arbr() const;

  // repeated .com.htsc.mdc.insight.model.ADBias Bias = 43;
  int bias_size() const;
  private:
  int _internal_bias_size() const;
  public:
  void clear_bias();
  ::com::htsc::mdc::insight::model::ADBias* mutable_bias(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADBias >*
      mutable_bias();
  private:
  const ::com::htsc::mdc::insight::model::ADBias& _internal_bias(int index) const;
  ::com::htsc::mdc::insight::model::ADBias* _internal_add_bias();
  public:
  const ::com::htsc::mdc::insight::model::ADBias& bias(int index) const;
  ::com::htsc::mdc::insight::model::ADBias* add_bias();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADBias >&
      bias() const;

  // repeated .com.htsc.mdc.insight.model.ADBoll Boll = 44;
  int boll_size() const;
  private:
  int _internal_boll_size() const;
  public:
  void clear_boll();
  ::com::htsc::mdc::insight::model::ADBoll* mutable_boll(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADBoll >*
      mutable_boll();
  private:
  const ::com::htsc::mdc::insight::model::ADBoll& _internal_boll(int index) const;
  ::com::htsc::mdc::insight::model::ADBoll* _internal_add_boll();
  public:
  const ::com::htsc::mdc::insight::model::ADBoll& boll(int index) const;
  ::com::htsc::mdc::insight::model::ADBoll* add_boll();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADBoll >&
      boll() const;

  // repeated .com.htsc.mdc.insight.model.ADCr Cr = 45;
  int cr_size() const;
  private:
  int _internal_cr_size() const;
  public:
  void clear_cr();
  ::com::htsc::mdc::insight::model::ADCr* mutable_cr(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADCr >*
      mutable_cr();
  private:
  const ::com::htsc::mdc::insight::model::ADCr& _internal_cr(int index) const;
  ::com::htsc::mdc::insight::model::ADCr* _internal_add_cr();
  public:
  const ::com::htsc::mdc::insight::model::ADCr& cr(int index) const;
  ::com::htsc::mdc::insight::model::ADCr* add_cr();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADCr >&
      cr() const;

  // repeated .com.htsc.mdc.insight.model.ADVmaMa VmaMa = 46;
  int vmama_size() const;
  private:
  int _internal_vmama_size() const;
  public:
  void clear_vmama();
  ::com::htsc::mdc::insight::model::ADVmaMa* mutable_vmama(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADVmaMa >*
      mutable_vmama();
  private:
  const ::com::htsc::mdc::insight::model::ADVmaMa& _internal_vmama(int index) const;
  ::com::htsc::mdc::insight::model::ADVmaMa* _internal_add_vmama();
  public:
  const ::com::htsc::mdc::insight::model::ADVmaMa& vmama(int index) const;
  ::com::htsc::mdc::insight::model::ADVmaMa* add_vmama();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADVmaMa >&
      vmama() const;

  // repeated .com.htsc.mdc.insight.model.ADVr Vr = 47;
  int vr_size() const;
  private:
  int _internal_vr_size() const;
  public:
  void clear_vr();
  ::com::htsc::mdc::insight::model::ADVr* mutable_vr(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADVr >*
      mutable_vr();
  private:
  const ::com::htsc::mdc::insight::model::ADVr& _internal_vr(int index) const;
  ::com::htsc::mdc::insight::model::ADVr* _internal_add_vr();
  public:
  const ::com::htsc::mdc::insight::model::ADVr& vr(int index) const;
  ::com::htsc::mdc::insight::model::ADVr* add_vr();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADVr >&
      vr() const;

  // repeated .com.htsc.mdc.insight.model.ADWr Wr = 48;
  int wr_size() const;
  private:
  int _internal_wr_size() const;
  public:
  void clear_wr();
  ::com::htsc::mdc::insight::model::ADWr* mutable_wr(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADWr >*
      mutable_wr();
  private:
  const ::com::htsc::mdc::insight::model::ADWr& _internal_wr(int index) const;
  ::com::htsc::mdc::insight::model::ADWr* _internal_add_wr();
  public:
  const ::com::htsc::mdc::insight::model::ADWr& wr(int index) const;
  ::com::htsc::mdc::insight::model::ADWr* add_wr();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADWr >&
      wr() const;

  // string HTSCSecurityID = 1;
  void clear_htscsecurityid();
  const std::string& htscsecurityid() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_htscsecurityid(ArgT0&& arg0, ArgT... args);
  std::string* mutable_htscsecurityid();
  PROTOBUF_NODISCARD std::string* release_htscsecurityid();
  void set_allocated_htscsecurityid(std::string* htscsecurityid);
  private:
  const std::string& _internal_htscsecurityid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_htscsecurityid(const std::string& value);
  std::string* _internal_mutable_htscsecurityid();
  public:

  // string TradingPhaseCode = 5;
  void clear_tradingphasecode();
  const std::string& tradingphasecode() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_tradingphasecode(ArgT0&& arg0, ArgT... args);
  std::string* mutable_tradingphasecode();
  PROTOBUF_NODISCARD std::string* release_tradingphasecode();
  void set_allocated_tradingphasecode(std::string* tradingphasecode);
  private:
  const std::string& _internal_tradingphasecode() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tradingphasecode(const std::string& value);
  std::string* _internal_mutable_tradingphasecode();
  public:

  // int32 MDDate = 2;
  void clear_mddate();
  int32_t mddate() const;
  void set_mddate(int32_t value);
  private:
  int32_t _internal_mddate() const;
  void _internal_set_mddate(int32_t value);
  public:

  // int32 MDTime = 3;
  void clear_mdtime();
  int32_t mdtime() const;
  void set_mdtime(int32_t value);
  private:
  int32_t _internal_mdtime() const;
  void _internal_set_mdtime(int32_t value);
  public:

  // int64 DataTimestamp = 4;
  void clear_datatimestamp();
  int64_t datatimestamp() const;
  void set_datatimestamp(int64_t value);
  private:
  int64_t _internal_datatimestamp() const;
  void _internal_set_datatimestamp(int64_t value);
  public:

  // .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
  void clear_securityidsource();
  ::com::htsc::mdc::model::ESecurityIDSource securityidsource() const;
  void set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value);
  private:
  ::com::htsc::mdc::model::ESecurityIDSource _internal_securityidsource() const;
  void _internal_set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value);
  public:

  // .com.htsc.mdc.model.ESecurityType securityType = 7;
  void clear_securitytype();
  ::com::htsc::mdc::model::ESecurityType securitytype() const;
  void set_securitytype(::com::htsc::mdc::model::ESecurityType value);
  private:
  ::com::htsc::mdc::model::ESecurityType _internal_securitytype() const;
  void _internal_set_securitytype(::com::htsc::mdc::model::ESecurityType value);
  public:

  // int64 NumTrades = 8;
  void clear_numtrades();
  int64_t numtrades() const;
  void set_numtrades(int64_t value);
  private:
  int64_t _internal_numtrades() const;
  void _internal_set_numtrades(int64_t value);
  public:

  // int64 TotalVolumeTrade = 9;
  void clear_totalvolumetrade();
  int64_t totalvolumetrade() const;
  void set_totalvolumetrade(int64_t value);
  private:
  int64_t _internal_totalvolumetrade() const;
  void _internal_set_totalvolumetrade(int64_t value);
  public:

  // int64 TotalValueTrade = 10;
  void clear_totalvaluetrade();
  int64_t totalvaluetrade() const;
  void set_totalvaluetrade(int64_t value);
  private:
  int64_t _internal_totalvaluetrade() const;
  void _internal_set_totalvaluetrade(int64_t value);
  public:

  // int64 PreClosePx = 11;
  void clear_preclosepx();
  int64_t preclosepx() const;
  void set_preclosepx(int64_t value);
  private:
  int64_t _internal_preclosepx() const;
  void _internal_set_preclosepx(int64_t value);
  public:

  // int64 LastPx = 12;
  void clear_lastpx();
  int64_t lastpx() const;
  void set_lastpx(int64_t value);
  private:
  int64_t _internal_lastpx() const;
  void _internal_set_lastpx(int64_t value);
  public:

  // int64 OpenPx = 13;
  void clear_openpx();
  int64_t openpx() const;
  void set_openpx(int64_t value);
  private:
  int64_t _internal_openpx() const;
  void _internal_set_openpx(int64_t value);
  public:

  // int64 ClosePx = 14;
  void clear_closepx();
  int64_t closepx() const;
  void set_closepx(int64_t value);
  private:
  int64_t _internal_closepx() const;
  void _internal_set_closepx(int64_t value);
  public:

  // int64 HighPx = 15;
  void clear_highpx();
  int64_t highpx() const;
  void set_highpx(int64_t value);
  private:
  int64_t _internal_highpx() const;
  void _internal_set_highpx(int64_t value);
  public:

  // int64 LowPx = 16;
  void clear_lowpx();
  int64_t lowpx() const;
  void set_lowpx(int64_t value);
  private:
  int64_t _internal_lowpx() const;
  void _internal_set_lowpx(int64_t value);
  public:

  // int64 IOPV = 17;
  void clear_iopv();
  int64_t iopv() const;
  void set_iopv(int64_t value);
  private:
  int64_t _internal_iopv() const;
  void _internal_set_iopv(int64_t value);
  public:

  // int64 PreIOPV = 18;
  void clear_preiopv();
  int64_t preiopv() const;
  void set_preiopv(int64_t value);
  private:
  int64_t _internal_preiopv() const;
  void _internal_set_preiopv(int64_t value);
  public:

  // int64 OpenInterest = 19;
  void clear_openinterest();
  int64_t openinterest() const;
  void set_openinterest(int64_t value);
  private:
  int64_t _internal_openinterest() const;
  void _internal_set_openinterest(int64_t value);
  public:

  // int64 PreOpenInterest = 20;
  void clear_preopeninterest();
  int64_t preopeninterest() const;
  void set_preopeninterest(int64_t value);
  private:
  int64_t _internal_preopeninterest() const;
  void _internal_set_preopeninterest(int64_t value);
  public:

  // int64 SettlePrice = 21;
  void clear_settleprice();
  int64_t settleprice() const;
  void set_settleprice(int64_t value);
  private:
  int64_t _internal_settleprice() const;
  void _internal_set_settleprice(int64_t value);
  public:

  // int64 PreSettlePrice = 22;
  void clear_presettleprice();
  int64_t presettleprice() const;
  void set_presettleprice(int64_t value);
  private:
  int64_t _internal_presettleprice() const;
  void _internal_set_presettleprice(int64_t value);
  public:

  // int32 ExchangeDate = 23;
  void clear_exchangedate();
  int32_t exchangedate() const;
  void set_exchangedate(int32_t value);
  private:
  int32_t _internal_exchangedate() const;
  void _internal_set_exchangedate(int32_t value);
  public:

  // int32 ExchangeTime = 24;
  void clear_exchangetime();
  int32_t exchangetime() const;
  void set_exchangetime(int32_t value);
  private:
  int32_t _internal_exchangetime() const;
  void _internal_set_exchangetime(int32_t value);
  public:

  // int64 BBI = 40;
  void clear_bbi();
  int64_t bbi() const;
  void set_bbi(int64_t value);
  private:
  int64_t _internal_bbi() const;
  void _internal_set_bbi(int64_t value);
  public:

  // int32 DataMultiplePowerOf10 = 49;
  void clear_datamultiplepowerof10();
  int32_t datamultiplepowerof10() const;
  void set_datamultiplepowerof10(int32_t value);
  private:
  int32_t _internal_datamultiplepowerof10() const;
  void _internal_set_datamultiplepowerof10(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:com.htsc.mdc.insight.model.ADDerivedAnalysis)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADAmv > amv_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADArBr > arbr_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADBias > bias_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADBoll > boll_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADCr > cr_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADVmaMa > vmama_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADVr > vr_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADWr > wr_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr htscsecurityid_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tradingphasecode_;
    int32_t mddate_;
    int32_t mdtime_;
    int64_t datatimestamp_;
    int securityidsource_;
    int securitytype_;
    int64_t numtrades_;
    int64_t totalvolumetrade_;
    int64_t totalvaluetrade_;
    int64_t preclosepx_;
    int64_t lastpx_;
    int64_t openpx_;
    int64_t closepx_;
    int64_t highpx_;
    int64_t lowpx_;
    int64_t iopv_;
    int64_t preiopv_;
    int64_t openinterest_;
    int64_t preopeninterest_;
    int64_t settleprice_;
    int64_t presettleprice_;
    int32_t exchangedate_;
    int32_t exchangetime_;
    int64_t bbi_;
    int32_t datamultiplepowerof10_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ADDerivedAnalysis_2eproto;
};
// -------------------------------------------------------------------

class ADAmv final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.htsc.mdc.insight.model.ADAmv) */ {
 public:
  inline ADAmv() : ADAmv(nullptr) {}
  ~ADAmv() override;
  explicit PROTOBUF_CONSTEXPR ADAmv(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ADAmv(const ADAmv& from);
  ADAmv(ADAmv&& from) noexcept
    : ADAmv() {
    *this = ::std::move(from);
  }

  inline ADAmv& operator=(const ADAmv& from) {
    CopyFrom(from);
    return *this;
  }
  inline ADAmv& operator=(ADAmv&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ADAmv& default_instance() {
    return *internal_default_instance();
  }
  static inline const ADAmv* internal_default_instance() {
    return reinterpret_cast<const ADAmv*>(
               &_ADAmv_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ADAmv& a, ADAmv& b) {
    a.Swap(&b);
  }
  inline void Swap(ADAmv* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ADAmv* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ADAmv* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ADAmv>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ADAmv& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ADAmv& from) {
    ADAmv::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ADAmv* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.htsc.mdc.insight.model.ADAmv";
  }
  protected:
  explicit ADAmv(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAmvFieldNumber = 2,
    kNValueFieldNumber = 1,
  };
  // int64 Amv = 2;
  void clear_amv();
  int64_t amv() const;
  void set_amv(int64_t value);
  private:
  int64_t _internal_amv() const;
  void _internal_set_amv(int64_t value);
  public:

  // int32 NValue = 1;
  void clear_nvalue();
  int32_t nvalue() const;
  void set_nvalue(int32_t value);
  private:
  int32_t _internal_nvalue() const;
  void _internal_set_nvalue(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:com.htsc.mdc.insight.model.ADAmv)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t amv_;
    int32_t nvalue_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ADDerivedAnalysis_2eproto;
};
// -------------------------------------------------------------------

class ADArBr final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.htsc.mdc.insight.model.ADArBr) */ {
 public:
  inline ADArBr() : ADArBr(nullptr) {}
  ~ADArBr() override;
  explicit PROTOBUF_CONSTEXPR ADArBr(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ADArBr(const ADArBr& from);
  ADArBr(ADArBr&& from) noexcept
    : ADArBr() {
    *this = ::std::move(from);
  }

  inline ADArBr& operator=(const ADArBr& from) {
    CopyFrom(from);
    return *this;
  }
  inline ADArBr& operator=(ADArBr&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ADArBr& default_instance() {
    return *internal_default_instance();
  }
  static inline const ADArBr* internal_default_instance() {
    return reinterpret_cast<const ADArBr*>(
               &_ADArBr_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ADArBr& a, ADArBr& b) {
    a.Swap(&b);
  }
  inline void Swap(ADArBr* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ADArBr* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ADArBr* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ADArBr>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ADArBr& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ADArBr& from) {
    ADArBr::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ADArBr* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.htsc.mdc.insight.model.ADArBr";
  }
  protected:
  explicit ADArBr(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArFieldNumber = 2,
    kBrFieldNumber = 3,
    kNValueFieldNumber = 1,
  };
  // int64 Ar = 2;
  void clear_ar();
  int64_t ar() const;
  void set_ar(int64_t value);
  private:
  int64_t _internal_ar() const;
  void _internal_set_ar(int64_t value);
  public:

  // int64 Br = 3;
  void clear_br();
  int64_t br() const;
  void set_br(int64_t value);
  private:
  int64_t _internal_br() const;
  void _internal_set_br(int64_t value);
  public:

  // int32 NValue = 1;
  void clear_nvalue();
  int32_t nvalue() const;
  void set_nvalue(int32_t value);
  private:
  int32_t _internal_nvalue() const;
  void _internal_set_nvalue(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:com.htsc.mdc.insight.model.ADArBr)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t ar_;
    int64_t br_;
    int32_t nvalue_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ADDerivedAnalysis_2eproto;
};
// -------------------------------------------------------------------

class ADBias final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.htsc.mdc.insight.model.ADBias) */ {
 public:
  inline ADBias() : ADBias(nullptr) {}
  ~ADBias() override;
  explicit PROTOBUF_CONSTEXPR ADBias(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ADBias(const ADBias& from);
  ADBias(ADBias&& from) noexcept
    : ADBias() {
    *this = ::std::move(from);
  }

  inline ADBias& operator=(const ADBias& from) {
    CopyFrom(from);
    return *this;
  }
  inline ADBias& operator=(ADBias&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ADBias& default_instance() {
    return *internal_default_instance();
  }
  static inline const ADBias* internal_default_instance() {
    return reinterpret_cast<const ADBias*>(
               &_ADBias_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ADBias& a, ADBias& b) {
    a.Swap(&b);
  }
  inline void Swap(ADBias* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ADBias* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ADBias* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ADBias>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ADBias& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ADBias& from) {
    ADBias::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ADBias* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.htsc.mdc.insight.model.ADBias";
  }
  protected:
  explicit ADBias(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBiasFieldNumber = 2,
    kClosePxFieldNumber = 3,
    kNValueFieldNumber = 1,
  };
  // int64 Bias = 2;
  void clear_bias();
  int64_t bias() const;
  void set_bias(int64_t value);
  private:
  int64_t _internal_bias() const;
  void _internal_set_bias(int64_t value);
  public:

  // int64 ClosePx = 3;
  void clear_closepx();
  int64_t closepx() const;
  void set_closepx(int64_t value);
  private:
  int64_t _internal_closepx() const;
  void _internal_set_closepx(int64_t value);
  public:

  // int32 NValue = 1;
  void clear_nvalue();
  int32_t nvalue() const;
  void set_nvalue(int32_t value);
  private:
  int32_t _internal_nvalue() const;
  void _internal_set_nvalue(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:com.htsc.mdc.insight.model.ADBias)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t bias_;
    int64_t closepx_;
    int32_t nvalue_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ADDerivedAnalysis_2eproto;
};
// -------------------------------------------------------------------

class ADBoll final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.htsc.mdc.insight.model.ADBoll) */ {
 public:
  inline ADBoll() : ADBoll(nullptr) {}
  ~ADBoll() override;
  explicit PROTOBUF_CONSTEXPR ADBoll(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ADBoll(const ADBoll& from);
  ADBoll(ADBoll&& from) noexcept
    : ADBoll() {
    *this = ::std::move(from);
  }

  inline ADBoll& operator=(const ADBoll& from) {
    CopyFrom(from);
    return *this;
  }
  inline ADBoll& operator=(ADBoll&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ADBoll& default_instance() {
    return *internal_default_instance();
  }
  static inline const ADBoll* internal_default_instance() {
    return reinterpret_cast<const ADBoll*>(
               &_ADBoll_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ADBoll& a, ADBoll& b) {
    a.Swap(&b);
  }
  inline void Swap(ADBoll* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ADBoll* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ADBoll* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ADBoll>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ADBoll& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ADBoll& from) {
    ADBoll::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ADBoll* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.htsc.mdc.insight.model.ADBoll";
  }
  protected:
  explicit ADBoll(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNValueFieldNumber = 1,
    kPValueFieldNumber = 2,
    kMidFieldNumber = 3,
    kUpperFieldNumber = 4,
    kLowerFieldNumber = 5,
  };
  // int32 NValue = 1;
  void clear_nvalue();
  int32_t nvalue() const;
  void set_nvalue(int32_t value);
  private:
  int32_t _internal_nvalue() const;
  void _internal_set_nvalue(int32_t value);
  public:

  // int32 PValue = 2;
  void clear_pvalue();
  int32_t pvalue() const;
  void set_pvalue(int32_t value);
  private:
  int32_t _internal_pvalue() const;
  void _internal_set_pvalue(int32_t value);
  public:

  // int64 Mid = 3;
  void clear_mid();
  int64_t mid() const;
  void set_mid(int64_t value);
  private:
  int64_t _internal_mid() const;
  void _internal_set_mid(int64_t value);
  public:

  // int64 Upper = 4;
  void clear_upper();
  int64_t upper() const;
  void set_upper(int64_t value);
  private:
  int64_t _internal_upper() const;
  void _internal_set_upper(int64_t value);
  public:

  // int64 Lower = 5;
  void clear_lower();
  int64_t lower() const;
  void set_lower(int64_t value);
  private:
  int64_t _internal_lower() const;
  void _internal_set_lower(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:com.htsc.mdc.insight.model.ADBoll)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t nvalue_;
    int32_t pvalue_;
    int64_t mid_;
    int64_t upper_;
    int64_t lower_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ADDerivedAnalysis_2eproto;
};
// -------------------------------------------------------------------

class ADCr final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.htsc.mdc.insight.model.ADCr) */ {
 public:
  inline ADCr() : ADCr(nullptr) {}
  ~ADCr() override;
  explicit PROTOBUF_CONSTEXPR ADCr(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ADCr(const ADCr& from);
  ADCr(ADCr&& from) noexcept
    : ADCr() {
    *this = ::std::move(from);
  }

  inline ADCr& operator=(const ADCr& from) {
    CopyFrom(from);
    return *this;
  }
  inline ADCr& operator=(ADCr&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ADCr& default_instance() {
    return *internal_default_instance();
  }
  static inline const ADCr* internal_default_instance() {
    return reinterpret_cast<const ADCr*>(
               &_ADCr_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ADCr& a, ADCr& b) {
    a.Swap(&b);
  }
  inline void Swap(ADCr* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ADCr* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ADCr* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ADCr>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ADCr& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ADCr& from) {
    ADCr::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ADCr* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.htsc.mdc.insight.model.ADCr";
  }
  protected:
  explicit ADCr(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCrFieldNumber = 2,
    kP1FieldNumber = 3,
    kP2FieldNumber = 4,
    kYMFieldNumber = 5,
    kNValueFieldNumber = 1,
  };
  // int64 Cr = 2;
  void clear_cr();
  int64_t cr() const;
  void set_cr(int64_t value);
  private:
  int64_t _internal_cr() const;
  void _internal_set_cr(int64_t value);
  public:

  // int64 P1 = 3;
  void clear_p1();
  int64_t p1() const;
  void set_p1(int64_t value);
  private:
  int64_t _internal_p1() const;
  void _internal_set_p1(int64_t value);
  public:

  // int64 P2 = 4;
  void clear_p2();
  int64_t p2() const;
  void set_p2(int64_t value);
  private:
  int64_t _internal_p2() const;
  void _internal_set_p2(int64_t value);
  public:

  // int64 YM = 5;
  void clear_ym();
  int64_t ym() const;
  void set_ym(int64_t value);
  private:
  int64_t _internal_ym() const;
  void _internal_set_ym(int64_t value);
  public:

  // int32 NValue = 1;
  void clear_nvalue();
  int32_t nvalue() const;
  void set_nvalue(int32_t value);
  private:
  int32_t _internal_nvalue() const;
  void _internal_set_nvalue(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:com.htsc.mdc.insight.model.ADCr)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t cr_;
    int64_t p1_;
    int64_t p2_;
    int64_t ym_;
    int32_t nvalue_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ADDerivedAnalysis_2eproto;
};
// -------------------------------------------------------------------

class ADVmaMa final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.htsc.mdc.insight.model.ADVmaMa) */ {
 public:
  inline ADVmaMa() : ADVmaMa(nullptr) {}
  ~ADVmaMa() override;
  explicit PROTOBUF_CONSTEXPR ADVmaMa(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ADVmaMa(const ADVmaMa& from);
  ADVmaMa(ADVmaMa&& from) noexcept
    : ADVmaMa() {
    *this = ::std::move(from);
  }

  inline ADVmaMa& operator=(const ADVmaMa& from) {
    CopyFrom(from);
    return *this;
  }
  inline ADVmaMa& operator=(ADVmaMa&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ADVmaMa& default_instance() {
    return *internal_default_instance();
  }
  static inline const ADVmaMa* internal_default_instance() {
    return reinterpret_cast<const ADVmaMa*>(
               &_ADVmaMa_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ADVmaMa& a, ADVmaMa& b) {
    a.Swap(&b);
  }
  inline void Swap(ADVmaMa* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ADVmaMa* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ADVmaMa* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ADVmaMa>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ADVmaMa& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ADVmaMa& from) {
    ADVmaMa::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ADVmaMa* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.htsc.mdc.insight.model.ADVmaMa";
  }
  protected:
  explicit ADVmaMa(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNValueFieldNumber = 1,
    kVmaFieldNumber = 2,
    kMaFieldNumber = 3,
    kPeriodTypeFieldNumber = 4,
  };
  // int64 NValue = 1;
  void clear_nvalue();
  int64_t nvalue() const;
  void set_nvalue(int64_t value);
  private:
  int64_t _internal_nvalue() const;
  void _internal_set_nvalue(int64_t value);
  public:

  // int64 Vma = 2;
  void clear_vma();
  int64_t vma() const;
  void set_vma(int64_t value);
  private:
  int64_t _internal_vma() const;
  void _internal_set_vma(int64_t value);
  public:

  // int64 Ma = 3;
  void clear_ma();
  int64_t ma() const;
  void set_ma(int64_t value);
  private:
  int64_t _internal_ma() const;
  void _internal_set_ma(int64_t value);
  public:

  // int32 PeriodType = 4;
  void clear_periodtype();
  int32_t periodtype() const;
  void set_periodtype(int32_t value);
  private:
  int32_t _internal_periodtype() const;
  void _internal_set_periodtype(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:com.htsc.mdc.insight.model.ADVmaMa)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t nvalue_;
    int64_t vma_;
    int64_t ma_;
    int32_t periodtype_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ADDerivedAnalysis_2eproto;
};
// -------------------------------------------------------------------

class ADVr final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.htsc.mdc.insight.model.ADVr) */ {
 public:
  inline ADVr() : ADVr(nullptr) {}
  ~ADVr() override;
  explicit PROTOBUF_CONSTEXPR ADVr(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ADVr(const ADVr& from);
  ADVr(ADVr&& from) noexcept
    : ADVr() {
    *this = ::std::move(from);
  }

  inline ADVr& operator=(const ADVr& from) {
    CopyFrom(from);
    return *this;
  }
  inline ADVr& operator=(ADVr&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ADVr& default_instance() {
    return *internal_default_instance();
  }
  static inline const ADVr* internal_default_instance() {
    return reinterpret_cast<const ADVr*>(
               &_ADVr_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(ADVr& a, ADVr& b) {
    a.Swap(&b);
  }
  inline void Swap(ADVr* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ADVr* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ADVr* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ADVr>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ADVr& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ADVr& from) {
    ADVr::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ADVr* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.htsc.mdc.insight.model.ADVr";
  }
  protected:
  explicit ADVr(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVRFieldNumber = 2,
    kAVSFieldNumber = 3,
    kBVSFieldNumber = 4,
    kCVSFieldNumber = 5,
    kNValueFieldNumber = 1,
  };
  // int64 VR = 2;
  void clear_vr();
  int64_t vr() const;
  void set_vr(int64_t value);
  private:
  int64_t _internal_vr() const;
  void _internal_set_vr(int64_t value);
  public:

  // int64 AVS = 3;
  void clear_avs();
  int64_t avs() const;
  void set_avs(int64_t value);
  private:
  int64_t _internal_avs() const;
  void _internal_set_avs(int64_t value);
  public:

  // int64 BVS = 4;
  void clear_bvs();
  int64_t bvs() const;
  void set_bvs(int64_t value);
  private:
  int64_t _internal_bvs() const;
  void _internal_set_bvs(int64_t value);
  public:

  // int64 CVS = 5;
  void clear_cvs();
  int64_t cvs() const;
  void set_cvs(int64_t value);
  private:
  int64_t _internal_cvs() const;
  void _internal_set_cvs(int64_t value);
  public:

  // int32 NValue = 1;
  void clear_nvalue();
  int32_t nvalue() const;
  void set_nvalue(int32_t value);
  private:
  int32_t _internal_nvalue() const;
  void _internal_set_nvalue(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:com.htsc.mdc.insight.model.ADVr)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t vr_;
    int64_t avs_;
    int64_t bvs_;
    int64_t cvs_;
    int32_t nvalue_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ADDerivedAnalysis_2eproto;
};
// -------------------------------------------------------------------

class ADWr final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.htsc.mdc.insight.model.ADWr) */ {
 public:
  inline ADWr() : ADWr(nullptr) {}
  ~ADWr() override;
  explicit PROTOBUF_CONSTEXPR ADWr(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ADWr(const ADWr& from);
  ADWr(ADWr&& from) noexcept
    : ADWr() {
    *this = ::std::move(from);
  }

  inline ADWr& operator=(const ADWr& from) {
    CopyFrom(from);
    return *this;
  }
  inline ADWr& operator=(ADWr&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ADWr& default_instance() {
    return *internal_default_instance();
  }
  static inline const ADWr* internal_default_instance() {
    return reinterpret_cast<const ADWr*>(
               &_ADWr_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(ADWr& a, ADWr& b) {
    a.Swap(&b);
  }
  inline void Swap(ADWr* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ADWr* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ADWr* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ADWr>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ADWr& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ADWr& from) {
    ADWr::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ADWr* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.htsc.mdc.insight.model.ADWr";
  }
  protected:
  explicit ADWr(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWrFieldNumber = 2,
    kClosePxFieldNumber = 3,
    kNHighPxFieldNumber = 4,
    kNLowPxFieldNumber = 5,
    kNValueFieldNumber = 1,
  };
  // int64 Wr = 2;
  void clear_wr();
  int64_t wr() const;
  void set_wr(int64_t value);
  private:
  int64_t _internal_wr() const;
  void _internal_set_wr(int64_t value);
  public:

  // int64 ClosePx = 3;
  void clear_closepx();
  int64_t closepx() const;
  void set_closepx(int64_t value);
  private:
  int64_t _internal_closepx() const;
  void _internal_set_closepx(int64_t value);
  public:

  // int64 NHighPx = 4;
  void clear_nhighpx();
  int64_t nhighpx() const;
  void set_nhighpx(int64_t value);
  private:
  int64_t _internal_nhighpx() const;
  void _internal_set_nhighpx(int64_t value);
  public:

  // int64 NLowPx = 5;
  void clear_nlowpx();
  int64_t nlowpx() const;
  void set_nlowpx(int64_t value);
  private:
  int64_t _internal_nlowpx() const;
  void _internal_set_nlowpx(int64_t value);
  public:

  // int32 NValue = 1;
  void clear_nvalue();
  int32_t nvalue() const;
  void set_nvalue(int32_t value);
  private:
  int32_t _internal_nvalue() const;
  void _internal_set_nvalue(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:com.htsc.mdc.insight.model.ADWr)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t wr_;
    int64_t closepx_;
    int64_t nhighpx_;
    int64_t nlowpx_;
    int32_t nvalue_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ADDerivedAnalysis_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ADDerivedAnalysis

// string HTSCSecurityID = 1;
inline void ADDerivedAnalysis::clear_htscsecurityid() {
  _impl_.htscsecurityid_.ClearToEmpty();
}
inline const std::string& ADDerivedAnalysis::htscsecurityid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.HTSCSecurityID)
  return _internal_htscsecurityid();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ADDerivedAnalysis::set_htscsecurityid(ArgT0&& arg0, ArgT... args) {
 
 _impl_.htscsecurityid_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.HTSCSecurityID)
}
inline std::string* ADDerivedAnalysis::mutable_htscsecurityid() {
  std::string* _s = _internal_mutable_htscsecurityid();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADDerivedAnalysis.HTSCSecurityID)
  return _s;
}
inline const std::string& ADDerivedAnalysis::_internal_htscsecurityid() const {
  return _impl_.htscsecurityid_.Get();
}
inline void ADDerivedAnalysis::_internal_set_htscsecurityid(const std::string& value) {
  
  _impl_.htscsecurityid_.Set(value, GetArenaForAllocation());
}
inline std::string* ADDerivedAnalysis::_internal_mutable_htscsecurityid() {
  
  return _impl_.htscsecurityid_.Mutable(GetArenaForAllocation());
}
inline std::string* ADDerivedAnalysis::release_htscsecurityid() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.ADDerivedAnalysis.HTSCSecurityID)
  return _impl_.htscsecurityid_.Release();
}
inline void ADDerivedAnalysis::set_allocated_htscsecurityid(std::string* htscsecurityid) {
  if (htscsecurityid != nullptr) {
    
  } else {
    
  }
  _impl_.htscsecurityid_.SetAllocated(htscsecurityid, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.htscsecurityid_.IsDefault()) {
    _impl_.htscsecurityid_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.ADDerivedAnalysis.HTSCSecurityID)
}

// int32 MDDate = 2;
inline void ADDerivedAnalysis::clear_mddate() {
  _impl_.mddate_ = 0;
}
inline int32_t ADDerivedAnalysis::_internal_mddate() const {
  return _impl_.mddate_;
}
inline int32_t ADDerivedAnalysis::mddate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.MDDate)
  return _internal_mddate();
}
inline void ADDerivedAnalysis::_internal_set_mddate(int32_t value) {
  
  _impl_.mddate_ = value;
}
inline void ADDerivedAnalysis::set_mddate(int32_t value) {
  _internal_set_mddate(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.MDDate)
}

// int32 MDTime = 3;
inline void ADDerivedAnalysis::clear_mdtime() {
  _impl_.mdtime_ = 0;
}
inline int32_t ADDerivedAnalysis::_internal_mdtime() const {
  return _impl_.mdtime_;
}
inline int32_t ADDerivedAnalysis::mdtime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.MDTime)
  return _internal_mdtime();
}
inline void ADDerivedAnalysis::_internal_set_mdtime(int32_t value) {
  
  _impl_.mdtime_ = value;
}
inline void ADDerivedAnalysis::set_mdtime(int32_t value) {
  _internal_set_mdtime(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.MDTime)
}

// int64 DataTimestamp = 4;
inline void ADDerivedAnalysis::clear_datatimestamp() {
  _impl_.datatimestamp_ = int64_t{0};
}
inline int64_t ADDerivedAnalysis::_internal_datatimestamp() const {
  return _impl_.datatimestamp_;
}
inline int64_t ADDerivedAnalysis::datatimestamp() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.DataTimestamp)
  return _internal_datatimestamp();
}
inline void ADDerivedAnalysis::_internal_set_datatimestamp(int64_t value) {
  
  _impl_.datatimestamp_ = value;
}
inline void ADDerivedAnalysis::set_datatimestamp(int64_t value) {
  _internal_set_datatimestamp(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.DataTimestamp)
}

// string TradingPhaseCode = 5;
inline void ADDerivedAnalysis::clear_tradingphasecode() {
  _impl_.tradingphasecode_.ClearToEmpty();
}
inline const std::string& ADDerivedAnalysis::tradingphasecode() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.TradingPhaseCode)
  return _internal_tradingphasecode();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ADDerivedAnalysis::set_tradingphasecode(ArgT0&& arg0, ArgT... args) {
 
 _impl_.tradingphasecode_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.TradingPhaseCode)
}
inline std::string* ADDerivedAnalysis::mutable_tradingphasecode() {
  std::string* _s = _internal_mutable_tradingphasecode();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADDerivedAnalysis.TradingPhaseCode)
  return _s;
}
inline const std::string& ADDerivedAnalysis::_internal_tradingphasecode() const {
  return _impl_.tradingphasecode_.Get();
}
inline void ADDerivedAnalysis::_internal_set_tradingphasecode(const std::string& value) {
  
  _impl_.tradingphasecode_.Set(value, GetArenaForAllocation());
}
inline std::string* ADDerivedAnalysis::_internal_mutable_tradingphasecode() {
  
  return _impl_.tradingphasecode_.Mutable(GetArenaForAllocation());
}
inline std::string* ADDerivedAnalysis::release_tradingphasecode() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.ADDerivedAnalysis.TradingPhaseCode)
  return _impl_.tradingphasecode_.Release();
}
inline void ADDerivedAnalysis::set_allocated_tradingphasecode(std::string* tradingphasecode) {
  if (tradingphasecode != nullptr) {
    
  } else {
    
  }
  _impl_.tradingphasecode_.SetAllocated(tradingphasecode, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.tradingphasecode_.IsDefault()) {
    _impl_.tradingphasecode_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.ADDerivedAnalysis.TradingPhaseCode)
}

// .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
inline void ADDerivedAnalysis::clear_securityidsource() {
  _impl_.securityidsource_ = 0;
}
inline ::com::htsc::mdc::model::ESecurityIDSource ADDerivedAnalysis::_internal_securityidsource() const {
  return static_cast< ::com::htsc::mdc::model::ESecurityIDSource >(_impl_.securityidsource_);
}
inline ::com::htsc::mdc::model::ESecurityIDSource ADDerivedAnalysis::securityidsource() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.securityIDSource)
  return _internal_securityidsource();
}
inline void ADDerivedAnalysis::_internal_set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value) {
  
  _impl_.securityidsource_ = value;
}
inline void ADDerivedAnalysis::set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value) {
  _internal_set_securityidsource(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.securityIDSource)
}

// .com.htsc.mdc.model.ESecurityType securityType = 7;
inline void ADDerivedAnalysis::clear_securitytype() {
  _impl_.securitytype_ = 0;
}
inline ::com::htsc::mdc::model::ESecurityType ADDerivedAnalysis::_internal_securitytype() const {
  return static_cast< ::com::htsc::mdc::model::ESecurityType >(_impl_.securitytype_);
}
inline ::com::htsc::mdc::model::ESecurityType ADDerivedAnalysis::securitytype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.securityType)
  return _internal_securitytype();
}
inline void ADDerivedAnalysis::_internal_set_securitytype(::com::htsc::mdc::model::ESecurityType value) {
  
  _impl_.securitytype_ = value;
}
inline void ADDerivedAnalysis::set_securitytype(::com::htsc::mdc::model::ESecurityType value) {
  _internal_set_securitytype(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.securityType)
}

// int64 NumTrades = 8;
inline void ADDerivedAnalysis::clear_numtrades() {
  _impl_.numtrades_ = int64_t{0};
}
inline int64_t ADDerivedAnalysis::_internal_numtrades() const {
  return _impl_.numtrades_;
}
inline int64_t ADDerivedAnalysis::numtrades() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.NumTrades)
  return _internal_numtrades();
}
inline void ADDerivedAnalysis::_internal_set_numtrades(int64_t value) {
  
  _impl_.numtrades_ = value;
}
inline void ADDerivedAnalysis::set_numtrades(int64_t value) {
  _internal_set_numtrades(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.NumTrades)
}

// int64 TotalVolumeTrade = 9;
inline void ADDerivedAnalysis::clear_totalvolumetrade() {
  _impl_.totalvolumetrade_ = int64_t{0};
}
inline int64_t ADDerivedAnalysis::_internal_totalvolumetrade() const {
  return _impl_.totalvolumetrade_;
}
inline int64_t ADDerivedAnalysis::totalvolumetrade() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.TotalVolumeTrade)
  return _internal_totalvolumetrade();
}
inline void ADDerivedAnalysis::_internal_set_totalvolumetrade(int64_t value) {
  
  _impl_.totalvolumetrade_ = value;
}
inline void ADDerivedAnalysis::set_totalvolumetrade(int64_t value) {
  _internal_set_totalvolumetrade(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.TotalVolumeTrade)
}

// int64 TotalValueTrade = 10;
inline void ADDerivedAnalysis::clear_totalvaluetrade() {
  _impl_.totalvaluetrade_ = int64_t{0};
}
inline int64_t ADDerivedAnalysis::_internal_totalvaluetrade() const {
  return _impl_.totalvaluetrade_;
}
inline int64_t ADDerivedAnalysis::totalvaluetrade() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.TotalValueTrade)
  return _internal_totalvaluetrade();
}
inline void ADDerivedAnalysis::_internal_set_totalvaluetrade(int64_t value) {
  
  _impl_.totalvaluetrade_ = value;
}
inline void ADDerivedAnalysis::set_totalvaluetrade(int64_t value) {
  _internal_set_totalvaluetrade(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.TotalValueTrade)
}

// int64 PreClosePx = 11;
inline void ADDerivedAnalysis::clear_preclosepx() {
  _impl_.preclosepx_ = int64_t{0};
}
inline int64_t ADDerivedAnalysis::_internal_preclosepx() const {
  return _impl_.preclosepx_;
}
inline int64_t ADDerivedAnalysis::preclosepx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.PreClosePx)
  return _internal_preclosepx();
}
inline void ADDerivedAnalysis::_internal_set_preclosepx(int64_t value) {
  
  _impl_.preclosepx_ = value;
}
inline void ADDerivedAnalysis::set_preclosepx(int64_t value) {
  _internal_set_preclosepx(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.PreClosePx)
}

// int64 LastPx = 12;
inline void ADDerivedAnalysis::clear_lastpx() {
  _impl_.lastpx_ = int64_t{0};
}
inline int64_t ADDerivedAnalysis::_internal_lastpx() const {
  return _impl_.lastpx_;
}
inline int64_t ADDerivedAnalysis::lastpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.LastPx)
  return _internal_lastpx();
}
inline void ADDerivedAnalysis::_internal_set_lastpx(int64_t value) {
  
  _impl_.lastpx_ = value;
}
inline void ADDerivedAnalysis::set_lastpx(int64_t value) {
  _internal_set_lastpx(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.LastPx)
}

// int64 OpenPx = 13;
inline void ADDerivedAnalysis::clear_openpx() {
  _impl_.openpx_ = int64_t{0};
}
inline int64_t ADDerivedAnalysis::_internal_openpx() const {
  return _impl_.openpx_;
}
inline int64_t ADDerivedAnalysis::openpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.OpenPx)
  return _internal_openpx();
}
inline void ADDerivedAnalysis::_internal_set_openpx(int64_t value) {
  
  _impl_.openpx_ = value;
}
inline void ADDerivedAnalysis::set_openpx(int64_t value) {
  _internal_set_openpx(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.OpenPx)
}

// int64 ClosePx = 14;
inline void ADDerivedAnalysis::clear_closepx() {
  _impl_.closepx_ = int64_t{0};
}
inline int64_t ADDerivedAnalysis::_internal_closepx() const {
  return _impl_.closepx_;
}
inline int64_t ADDerivedAnalysis::closepx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.ClosePx)
  return _internal_closepx();
}
inline void ADDerivedAnalysis::_internal_set_closepx(int64_t value) {
  
  _impl_.closepx_ = value;
}
inline void ADDerivedAnalysis::set_closepx(int64_t value) {
  _internal_set_closepx(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.ClosePx)
}

// int64 HighPx = 15;
inline void ADDerivedAnalysis::clear_highpx() {
  _impl_.highpx_ = int64_t{0};
}
inline int64_t ADDerivedAnalysis::_internal_highpx() const {
  return _impl_.highpx_;
}
inline int64_t ADDerivedAnalysis::highpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.HighPx)
  return _internal_highpx();
}
inline void ADDerivedAnalysis::_internal_set_highpx(int64_t value) {
  
  _impl_.highpx_ = value;
}
inline void ADDerivedAnalysis::set_highpx(int64_t value) {
  _internal_set_highpx(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.HighPx)
}

// int64 LowPx = 16;
inline void ADDerivedAnalysis::clear_lowpx() {
  _impl_.lowpx_ = int64_t{0};
}
inline int64_t ADDerivedAnalysis::_internal_lowpx() const {
  return _impl_.lowpx_;
}
inline int64_t ADDerivedAnalysis::lowpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.LowPx)
  return _internal_lowpx();
}
inline void ADDerivedAnalysis::_internal_set_lowpx(int64_t value) {
  
  _impl_.lowpx_ = value;
}
inline void ADDerivedAnalysis::set_lowpx(int64_t value) {
  _internal_set_lowpx(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.LowPx)
}

// int64 IOPV = 17;
inline void ADDerivedAnalysis::clear_iopv() {
  _impl_.iopv_ = int64_t{0};
}
inline int64_t ADDerivedAnalysis::_internal_iopv() const {
  return _impl_.iopv_;
}
inline int64_t ADDerivedAnalysis::iopv() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.IOPV)
  return _internal_iopv();
}
inline void ADDerivedAnalysis::_internal_set_iopv(int64_t value) {
  
  _impl_.iopv_ = value;
}
inline void ADDerivedAnalysis::set_iopv(int64_t value) {
  _internal_set_iopv(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.IOPV)
}

// int64 PreIOPV = 18;
inline void ADDerivedAnalysis::clear_preiopv() {
  _impl_.preiopv_ = int64_t{0};
}
inline int64_t ADDerivedAnalysis::_internal_preiopv() const {
  return _impl_.preiopv_;
}
inline int64_t ADDerivedAnalysis::preiopv() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.PreIOPV)
  return _internal_preiopv();
}
inline void ADDerivedAnalysis::_internal_set_preiopv(int64_t value) {
  
  _impl_.preiopv_ = value;
}
inline void ADDerivedAnalysis::set_preiopv(int64_t value) {
  _internal_set_preiopv(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.PreIOPV)
}

// int64 OpenInterest = 19;
inline void ADDerivedAnalysis::clear_openinterest() {
  _impl_.openinterest_ = int64_t{0};
}
inline int64_t ADDerivedAnalysis::_internal_openinterest() const {
  return _impl_.openinterest_;
}
inline int64_t ADDerivedAnalysis::openinterest() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.OpenInterest)
  return _internal_openinterest();
}
inline void ADDerivedAnalysis::_internal_set_openinterest(int64_t value) {
  
  _impl_.openinterest_ = value;
}
inline void ADDerivedAnalysis::set_openinterest(int64_t value) {
  _internal_set_openinterest(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.OpenInterest)
}

// int64 PreOpenInterest = 20;
inline void ADDerivedAnalysis::clear_preopeninterest() {
  _impl_.preopeninterest_ = int64_t{0};
}
inline int64_t ADDerivedAnalysis::_internal_preopeninterest() const {
  return _impl_.preopeninterest_;
}
inline int64_t ADDerivedAnalysis::preopeninterest() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.PreOpenInterest)
  return _internal_preopeninterest();
}
inline void ADDerivedAnalysis::_internal_set_preopeninterest(int64_t value) {
  
  _impl_.preopeninterest_ = value;
}
inline void ADDerivedAnalysis::set_preopeninterest(int64_t value) {
  _internal_set_preopeninterest(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.PreOpenInterest)
}

// int64 SettlePrice = 21;
inline void ADDerivedAnalysis::clear_settleprice() {
  _impl_.settleprice_ = int64_t{0};
}
inline int64_t ADDerivedAnalysis::_internal_settleprice() const {
  return _impl_.settleprice_;
}
inline int64_t ADDerivedAnalysis::settleprice() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.SettlePrice)
  return _internal_settleprice();
}
inline void ADDerivedAnalysis::_internal_set_settleprice(int64_t value) {
  
  _impl_.settleprice_ = value;
}
inline void ADDerivedAnalysis::set_settleprice(int64_t value) {
  _internal_set_settleprice(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.SettlePrice)
}

// int64 PreSettlePrice = 22;
inline void ADDerivedAnalysis::clear_presettleprice() {
  _impl_.presettleprice_ = int64_t{0};
}
inline int64_t ADDerivedAnalysis::_internal_presettleprice() const {
  return _impl_.presettleprice_;
}
inline int64_t ADDerivedAnalysis::presettleprice() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.PreSettlePrice)
  return _internal_presettleprice();
}
inline void ADDerivedAnalysis::_internal_set_presettleprice(int64_t value) {
  
  _impl_.presettleprice_ = value;
}
inline void ADDerivedAnalysis::set_presettleprice(int64_t value) {
  _internal_set_presettleprice(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.PreSettlePrice)
}

// int32 ExchangeDate = 23;
inline void ADDerivedAnalysis::clear_exchangedate() {
  _impl_.exchangedate_ = 0;
}
inline int32_t ADDerivedAnalysis::_internal_exchangedate() const {
  return _impl_.exchangedate_;
}
inline int32_t ADDerivedAnalysis::exchangedate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.ExchangeDate)
  return _internal_exchangedate();
}
inline void ADDerivedAnalysis::_internal_set_exchangedate(int32_t value) {
  
  _impl_.exchangedate_ = value;
}
inline void ADDerivedAnalysis::set_exchangedate(int32_t value) {
  _internal_set_exchangedate(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.ExchangeDate)
}

// int32 ExchangeTime = 24;
inline void ADDerivedAnalysis::clear_exchangetime() {
  _impl_.exchangetime_ = 0;
}
inline int32_t ADDerivedAnalysis::_internal_exchangetime() const {
  return _impl_.exchangetime_;
}
inline int32_t ADDerivedAnalysis::exchangetime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.ExchangeTime)
  return _internal_exchangetime();
}
inline void ADDerivedAnalysis::_internal_set_exchangetime(int32_t value) {
  
  _impl_.exchangetime_ = value;
}
inline void ADDerivedAnalysis::set_exchangetime(int32_t value) {
  _internal_set_exchangetime(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.ExchangeTime)
}

// int64 BBI = 40;
inline void ADDerivedAnalysis::clear_bbi() {
  _impl_.bbi_ = int64_t{0};
}
inline int64_t ADDerivedAnalysis::_internal_bbi() const {
  return _impl_.bbi_;
}
inline int64_t ADDerivedAnalysis::bbi() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.BBI)
  return _internal_bbi();
}
inline void ADDerivedAnalysis::_internal_set_bbi(int64_t value) {
  
  _impl_.bbi_ = value;
}
inline void ADDerivedAnalysis::set_bbi(int64_t value) {
  _internal_set_bbi(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.BBI)
}

// repeated .com.htsc.mdc.insight.model.ADAmv Amv = 41;
inline int ADDerivedAnalysis::_internal_amv_size() const {
  return _impl_.amv_.size();
}
inline int ADDerivedAnalysis::amv_size() const {
  return _internal_amv_size();
}
inline void ADDerivedAnalysis::clear_amv() {
  _impl_.amv_.Clear();
}
inline ::com::htsc::mdc::insight::model::ADAmv* ADDerivedAnalysis::mutable_amv(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADDerivedAnalysis.Amv)
  return _impl_.amv_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADAmv >*
ADDerivedAnalysis::mutable_amv() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.ADDerivedAnalysis.Amv)
  return &_impl_.amv_;
}
inline const ::com::htsc::mdc::insight::model::ADAmv& ADDerivedAnalysis::_internal_amv(int index) const {
  return _impl_.amv_.Get(index);
}
inline const ::com::htsc::mdc::insight::model::ADAmv& ADDerivedAnalysis::amv(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.Amv)
  return _internal_amv(index);
}
inline ::com::htsc::mdc::insight::model::ADAmv* ADDerivedAnalysis::_internal_add_amv() {
  return _impl_.amv_.Add();
}
inline ::com::htsc::mdc::insight::model::ADAmv* ADDerivedAnalysis::add_amv() {
  ::com::htsc::mdc::insight::model::ADAmv* _add = _internal_add_amv();
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.ADDerivedAnalysis.Amv)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADAmv >&
ADDerivedAnalysis::amv() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.ADDerivedAnalysis.Amv)
  return _impl_.amv_;
}

// repeated .com.htsc.mdc.insight.model.ADArBr ArBr = 42;
inline int ADDerivedAnalysis::_internal_arbr_size() const {
  return _impl_.arbr_.size();
}
inline int ADDerivedAnalysis::arbr_size() const {
  return _internal_arbr_size();
}
inline void ADDerivedAnalysis::clear_arbr() {
  _impl_.arbr_.Clear();
}
inline ::com::htsc::mdc::insight::model::ADArBr* ADDerivedAnalysis::mutable_arbr(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADDerivedAnalysis.ArBr)
  return _impl_.arbr_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADArBr >*
ADDerivedAnalysis::mutable_arbr() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.ADDerivedAnalysis.ArBr)
  return &_impl_.arbr_;
}
inline const ::com::htsc::mdc::insight::model::ADArBr& ADDerivedAnalysis::_internal_arbr(int index) const {
  return _impl_.arbr_.Get(index);
}
inline const ::com::htsc::mdc::insight::model::ADArBr& ADDerivedAnalysis::arbr(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.ArBr)
  return _internal_arbr(index);
}
inline ::com::htsc::mdc::insight::model::ADArBr* ADDerivedAnalysis::_internal_add_arbr() {
  return _impl_.arbr_.Add();
}
inline ::com::htsc::mdc::insight::model::ADArBr* ADDerivedAnalysis::add_arbr() {
  ::com::htsc::mdc::insight::model::ADArBr* _add = _internal_add_arbr();
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.ADDerivedAnalysis.ArBr)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADArBr >&
ADDerivedAnalysis::arbr() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.ADDerivedAnalysis.ArBr)
  return _impl_.arbr_;
}

// repeated .com.htsc.mdc.insight.model.ADBias Bias = 43;
inline int ADDerivedAnalysis::_internal_bias_size() const {
  return _impl_.bias_.size();
}
inline int ADDerivedAnalysis::bias_size() const {
  return _internal_bias_size();
}
inline void ADDerivedAnalysis::clear_bias() {
  _impl_.bias_.Clear();
}
inline ::com::htsc::mdc::insight::model::ADBias* ADDerivedAnalysis::mutable_bias(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADDerivedAnalysis.Bias)
  return _impl_.bias_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADBias >*
ADDerivedAnalysis::mutable_bias() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.ADDerivedAnalysis.Bias)
  return &_impl_.bias_;
}
inline const ::com::htsc::mdc::insight::model::ADBias& ADDerivedAnalysis::_internal_bias(int index) const {
  return _impl_.bias_.Get(index);
}
inline const ::com::htsc::mdc::insight::model::ADBias& ADDerivedAnalysis::bias(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.Bias)
  return _internal_bias(index);
}
inline ::com::htsc::mdc::insight::model::ADBias* ADDerivedAnalysis::_internal_add_bias() {
  return _impl_.bias_.Add();
}
inline ::com::htsc::mdc::insight::model::ADBias* ADDerivedAnalysis::add_bias() {
  ::com::htsc::mdc::insight::model::ADBias* _add = _internal_add_bias();
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.ADDerivedAnalysis.Bias)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADBias >&
ADDerivedAnalysis::bias() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.ADDerivedAnalysis.Bias)
  return _impl_.bias_;
}

// repeated .com.htsc.mdc.insight.model.ADBoll Boll = 44;
inline int ADDerivedAnalysis::_internal_boll_size() const {
  return _impl_.boll_.size();
}
inline int ADDerivedAnalysis::boll_size() const {
  return _internal_boll_size();
}
inline void ADDerivedAnalysis::clear_boll() {
  _impl_.boll_.Clear();
}
inline ::com::htsc::mdc::insight::model::ADBoll* ADDerivedAnalysis::mutable_boll(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADDerivedAnalysis.Boll)
  return _impl_.boll_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADBoll >*
ADDerivedAnalysis::mutable_boll() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.ADDerivedAnalysis.Boll)
  return &_impl_.boll_;
}
inline const ::com::htsc::mdc::insight::model::ADBoll& ADDerivedAnalysis::_internal_boll(int index) const {
  return _impl_.boll_.Get(index);
}
inline const ::com::htsc::mdc::insight::model::ADBoll& ADDerivedAnalysis::boll(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.Boll)
  return _internal_boll(index);
}
inline ::com::htsc::mdc::insight::model::ADBoll* ADDerivedAnalysis::_internal_add_boll() {
  return _impl_.boll_.Add();
}
inline ::com::htsc::mdc::insight::model::ADBoll* ADDerivedAnalysis::add_boll() {
  ::com::htsc::mdc::insight::model::ADBoll* _add = _internal_add_boll();
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.ADDerivedAnalysis.Boll)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADBoll >&
ADDerivedAnalysis::boll() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.ADDerivedAnalysis.Boll)
  return _impl_.boll_;
}

// repeated .com.htsc.mdc.insight.model.ADCr Cr = 45;
inline int ADDerivedAnalysis::_internal_cr_size() const {
  return _impl_.cr_.size();
}
inline int ADDerivedAnalysis::cr_size() const {
  return _internal_cr_size();
}
inline void ADDerivedAnalysis::clear_cr() {
  _impl_.cr_.Clear();
}
inline ::com::htsc::mdc::insight::model::ADCr* ADDerivedAnalysis::mutable_cr(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADDerivedAnalysis.Cr)
  return _impl_.cr_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADCr >*
ADDerivedAnalysis::mutable_cr() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.ADDerivedAnalysis.Cr)
  return &_impl_.cr_;
}
inline const ::com::htsc::mdc::insight::model::ADCr& ADDerivedAnalysis::_internal_cr(int index) const {
  return _impl_.cr_.Get(index);
}
inline const ::com::htsc::mdc::insight::model::ADCr& ADDerivedAnalysis::cr(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.Cr)
  return _internal_cr(index);
}
inline ::com::htsc::mdc::insight::model::ADCr* ADDerivedAnalysis::_internal_add_cr() {
  return _impl_.cr_.Add();
}
inline ::com::htsc::mdc::insight::model::ADCr* ADDerivedAnalysis::add_cr() {
  ::com::htsc::mdc::insight::model::ADCr* _add = _internal_add_cr();
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.ADDerivedAnalysis.Cr)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADCr >&
ADDerivedAnalysis::cr() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.ADDerivedAnalysis.Cr)
  return _impl_.cr_;
}

// repeated .com.htsc.mdc.insight.model.ADVmaMa VmaMa = 46;
inline int ADDerivedAnalysis::_internal_vmama_size() const {
  return _impl_.vmama_.size();
}
inline int ADDerivedAnalysis::vmama_size() const {
  return _internal_vmama_size();
}
inline void ADDerivedAnalysis::clear_vmama() {
  _impl_.vmama_.Clear();
}
inline ::com::htsc::mdc::insight::model::ADVmaMa* ADDerivedAnalysis::mutable_vmama(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADDerivedAnalysis.VmaMa)
  return _impl_.vmama_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADVmaMa >*
ADDerivedAnalysis::mutable_vmama() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.ADDerivedAnalysis.VmaMa)
  return &_impl_.vmama_;
}
inline const ::com::htsc::mdc::insight::model::ADVmaMa& ADDerivedAnalysis::_internal_vmama(int index) const {
  return _impl_.vmama_.Get(index);
}
inline const ::com::htsc::mdc::insight::model::ADVmaMa& ADDerivedAnalysis::vmama(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.VmaMa)
  return _internal_vmama(index);
}
inline ::com::htsc::mdc::insight::model::ADVmaMa* ADDerivedAnalysis::_internal_add_vmama() {
  return _impl_.vmama_.Add();
}
inline ::com::htsc::mdc::insight::model::ADVmaMa* ADDerivedAnalysis::add_vmama() {
  ::com::htsc::mdc::insight::model::ADVmaMa* _add = _internal_add_vmama();
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.ADDerivedAnalysis.VmaMa)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADVmaMa >&
ADDerivedAnalysis::vmama() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.ADDerivedAnalysis.VmaMa)
  return _impl_.vmama_;
}

// repeated .com.htsc.mdc.insight.model.ADVr Vr = 47;
inline int ADDerivedAnalysis::_internal_vr_size() const {
  return _impl_.vr_.size();
}
inline int ADDerivedAnalysis::vr_size() const {
  return _internal_vr_size();
}
inline void ADDerivedAnalysis::clear_vr() {
  _impl_.vr_.Clear();
}
inline ::com::htsc::mdc::insight::model::ADVr* ADDerivedAnalysis::mutable_vr(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADDerivedAnalysis.Vr)
  return _impl_.vr_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADVr >*
ADDerivedAnalysis::mutable_vr() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.ADDerivedAnalysis.Vr)
  return &_impl_.vr_;
}
inline const ::com::htsc::mdc::insight::model::ADVr& ADDerivedAnalysis::_internal_vr(int index) const {
  return _impl_.vr_.Get(index);
}
inline const ::com::htsc::mdc::insight::model::ADVr& ADDerivedAnalysis::vr(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.Vr)
  return _internal_vr(index);
}
inline ::com::htsc::mdc::insight::model::ADVr* ADDerivedAnalysis::_internal_add_vr() {
  return _impl_.vr_.Add();
}
inline ::com::htsc::mdc::insight::model::ADVr* ADDerivedAnalysis::add_vr() {
  ::com::htsc::mdc::insight::model::ADVr* _add = _internal_add_vr();
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.ADDerivedAnalysis.Vr)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADVr >&
ADDerivedAnalysis::vr() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.ADDerivedAnalysis.Vr)
  return _impl_.vr_;
}

// repeated .com.htsc.mdc.insight.model.ADWr Wr = 48;
inline int ADDerivedAnalysis::_internal_wr_size() const {
  return _impl_.wr_.size();
}
inline int ADDerivedAnalysis::wr_size() const {
  return _internal_wr_size();
}
inline void ADDerivedAnalysis::clear_wr() {
  _impl_.wr_.Clear();
}
inline ::com::htsc::mdc::insight::model::ADWr* ADDerivedAnalysis::mutable_wr(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADDerivedAnalysis.Wr)
  return _impl_.wr_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADWr >*
ADDerivedAnalysis::mutable_wr() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.ADDerivedAnalysis.Wr)
  return &_impl_.wr_;
}
inline const ::com::htsc::mdc::insight::model::ADWr& ADDerivedAnalysis::_internal_wr(int index) const {
  return _impl_.wr_.Get(index);
}
inline const ::com::htsc::mdc::insight::model::ADWr& ADDerivedAnalysis::wr(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.Wr)
  return _internal_wr(index);
}
inline ::com::htsc::mdc::insight::model::ADWr* ADDerivedAnalysis::_internal_add_wr() {
  return _impl_.wr_.Add();
}
inline ::com::htsc::mdc::insight::model::ADWr* ADDerivedAnalysis::add_wr() {
  ::com::htsc::mdc::insight::model::ADWr* _add = _internal_add_wr();
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.ADDerivedAnalysis.Wr)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADWr >&
ADDerivedAnalysis::wr() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.ADDerivedAnalysis.Wr)
  return _impl_.wr_;
}

// int32 DataMultiplePowerOf10 = 49;
inline void ADDerivedAnalysis::clear_datamultiplepowerof10() {
  _impl_.datamultiplepowerof10_ = 0;
}
inline int32_t ADDerivedAnalysis::_internal_datamultiplepowerof10() const {
  return _impl_.datamultiplepowerof10_;
}
inline int32_t ADDerivedAnalysis::datamultiplepowerof10() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADDerivedAnalysis.DataMultiplePowerOf10)
  return _internal_datamultiplepowerof10();
}
inline void ADDerivedAnalysis::_internal_set_datamultiplepowerof10(int32_t value) {
  
  _impl_.datamultiplepowerof10_ = value;
}
inline void ADDerivedAnalysis::set_datamultiplepowerof10(int32_t value) {
  _internal_set_datamultiplepowerof10(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADDerivedAnalysis.DataMultiplePowerOf10)
}

// -------------------------------------------------------------------

// ADAmv

// int32 NValue = 1;
inline void ADAmv::clear_nvalue() {
  _impl_.nvalue_ = 0;
}
inline int32_t ADAmv::_internal_nvalue() const {
  return _impl_.nvalue_;
}
inline int32_t ADAmv::nvalue() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADAmv.NValue)
  return _internal_nvalue();
}
inline void ADAmv::_internal_set_nvalue(int32_t value) {
  
  _impl_.nvalue_ = value;
}
inline void ADAmv::set_nvalue(int32_t value) {
  _internal_set_nvalue(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADAmv.NValue)
}

// int64 Amv = 2;
inline void ADAmv::clear_amv() {
  _impl_.amv_ = int64_t{0};
}
inline int64_t ADAmv::_internal_amv() const {
  return _impl_.amv_;
}
inline int64_t ADAmv::amv() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADAmv.Amv)
  return _internal_amv();
}
inline void ADAmv::_internal_set_amv(int64_t value) {
  
  _impl_.amv_ = value;
}
inline void ADAmv::set_amv(int64_t value) {
  _internal_set_amv(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADAmv.Amv)
}

// -------------------------------------------------------------------

// ADArBr

// int32 NValue = 1;
inline void ADArBr::clear_nvalue() {
  _impl_.nvalue_ = 0;
}
inline int32_t ADArBr::_internal_nvalue() const {
  return _impl_.nvalue_;
}
inline int32_t ADArBr::nvalue() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADArBr.NValue)
  return _internal_nvalue();
}
inline void ADArBr::_internal_set_nvalue(int32_t value) {
  
  _impl_.nvalue_ = value;
}
inline void ADArBr::set_nvalue(int32_t value) {
  _internal_set_nvalue(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADArBr.NValue)
}

// int64 Ar = 2;
inline void ADArBr::clear_ar() {
  _impl_.ar_ = int64_t{0};
}
inline int64_t ADArBr::_internal_ar() const {
  return _impl_.ar_;
}
inline int64_t ADArBr::ar() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADArBr.Ar)
  return _internal_ar();
}
inline void ADArBr::_internal_set_ar(int64_t value) {
  
  _impl_.ar_ = value;
}
inline void ADArBr::set_ar(int64_t value) {
  _internal_set_ar(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADArBr.Ar)
}

// int64 Br = 3;
inline void ADArBr::clear_br() {
  _impl_.br_ = int64_t{0};
}
inline int64_t ADArBr::_internal_br() const {
  return _impl_.br_;
}
inline int64_t ADArBr::br() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADArBr.Br)
  return _internal_br();
}
inline void ADArBr::_internal_set_br(int64_t value) {
  
  _impl_.br_ = value;
}
inline void ADArBr::set_br(int64_t value) {
  _internal_set_br(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADArBr.Br)
}

// -------------------------------------------------------------------

// ADBias

// int32 NValue = 1;
inline void ADBias::clear_nvalue() {
  _impl_.nvalue_ = 0;
}
inline int32_t ADBias::_internal_nvalue() const {
  return _impl_.nvalue_;
}
inline int32_t ADBias::nvalue() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADBias.NValue)
  return _internal_nvalue();
}
inline void ADBias::_internal_set_nvalue(int32_t value) {
  
  _impl_.nvalue_ = value;
}
inline void ADBias::set_nvalue(int32_t value) {
  _internal_set_nvalue(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADBias.NValue)
}

// int64 Bias = 2;
inline void ADBias::clear_bias() {
  _impl_.bias_ = int64_t{0};
}
inline int64_t ADBias::_internal_bias() const {
  return _impl_.bias_;
}
inline int64_t ADBias::bias() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADBias.Bias)
  return _internal_bias();
}
inline void ADBias::_internal_set_bias(int64_t value) {
  
  _impl_.bias_ = value;
}
inline void ADBias::set_bias(int64_t value) {
  _internal_set_bias(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADBias.Bias)
}

// int64 ClosePx = 3;
inline void ADBias::clear_closepx() {
  _impl_.closepx_ = int64_t{0};
}
inline int64_t ADBias::_internal_closepx() const {
  return _impl_.closepx_;
}
inline int64_t ADBias::closepx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADBias.ClosePx)
  return _internal_closepx();
}
inline void ADBias::_internal_set_closepx(int64_t value) {
  
  _impl_.closepx_ = value;
}
inline void ADBias::set_closepx(int64_t value) {
  _internal_set_closepx(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADBias.ClosePx)
}

// -------------------------------------------------------------------

// ADBoll

// int32 NValue = 1;
inline void ADBoll::clear_nvalue() {
  _impl_.nvalue_ = 0;
}
inline int32_t ADBoll::_internal_nvalue() const {
  return _impl_.nvalue_;
}
inline int32_t ADBoll::nvalue() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADBoll.NValue)
  return _internal_nvalue();
}
inline void ADBoll::_internal_set_nvalue(int32_t value) {
  
  _impl_.nvalue_ = value;
}
inline void ADBoll::set_nvalue(int32_t value) {
  _internal_set_nvalue(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADBoll.NValue)
}

// int32 PValue = 2;
inline void ADBoll::clear_pvalue() {
  _impl_.pvalue_ = 0;
}
inline int32_t ADBoll::_internal_pvalue() const {
  return _impl_.pvalue_;
}
inline int32_t ADBoll::pvalue() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADBoll.PValue)
  return _internal_pvalue();
}
inline void ADBoll::_internal_set_pvalue(int32_t value) {
  
  _impl_.pvalue_ = value;
}
inline void ADBoll::set_pvalue(int32_t value) {
  _internal_set_pvalue(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADBoll.PValue)
}

// int64 Mid = 3;
inline void ADBoll::clear_mid() {
  _impl_.mid_ = int64_t{0};
}
inline int64_t ADBoll::_internal_mid() const {
  return _impl_.mid_;
}
inline int64_t ADBoll::mid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADBoll.Mid)
  return _internal_mid();
}
inline void ADBoll::_internal_set_mid(int64_t value) {
  
  _impl_.mid_ = value;
}
inline void ADBoll::set_mid(int64_t value) {
  _internal_set_mid(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADBoll.Mid)
}

// int64 Upper = 4;
inline void ADBoll::clear_upper() {
  _impl_.upper_ = int64_t{0};
}
inline int64_t ADBoll::_internal_upper() const {
  return _impl_.upper_;
}
inline int64_t ADBoll::upper() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADBoll.Upper)
  return _internal_upper();
}
inline void ADBoll::_internal_set_upper(int64_t value) {
  
  _impl_.upper_ = value;
}
inline void ADBoll::set_upper(int64_t value) {
  _internal_set_upper(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADBoll.Upper)
}

// int64 Lower = 5;
inline void ADBoll::clear_lower() {
  _impl_.lower_ = int64_t{0};
}
inline int64_t ADBoll::_internal_lower() const {
  return _impl_.lower_;
}
inline int64_t ADBoll::lower() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADBoll.Lower)
  return _internal_lower();
}
inline void ADBoll::_internal_set_lower(int64_t value) {
  
  _impl_.lower_ = value;
}
inline void ADBoll::set_lower(int64_t value) {
  _internal_set_lower(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADBoll.Lower)
}

// -------------------------------------------------------------------

// ADCr

// int32 NValue = 1;
inline void ADCr::clear_nvalue() {
  _impl_.nvalue_ = 0;
}
inline int32_t ADCr::_internal_nvalue() const {
  return _impl_.nvalue_;
}
inline int32_t ADCr::nvalue() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADCr.NValue)
  return _internal_nvalue();
}
inline void ADCr::_internal_set_nvalue(int32_t value) {
  
  _impl_.nvalue_ = value;
}
inline void ADCr::set_nvalue(int32_t value) {
  _internal_set_nvalue(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADCr.NValue)
}

// int64 Cr = 2;
inline void ADCr::clear_cr() {
  _impl_.cr_ = int64_t{0};
}
inline int64_t ADCr::_internal_cr() const {
  return _impl_.cr_;
}
inline int64_t ADCr::cr() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADCr.Cr)
  return _internal_cr();
}
inline void ADCr::_internal_set_cr(int64_t value) {
  
  _impl_.cr_ = value;
}
inline void ADCr::set_cr(int64_t value) {
  _internal_set_cr(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADCr.Cr)
}

// int64 P1 = 3;
inline void ADCr::clear_p1() {
  _impl_.p1_ = int64_t{0};
}
inline int64_t ADCr::_internal_p1() const {
  return _impl_.p1_;
}
inline int64_t ADCr::p1() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADCr.P1)
  return _internal_p1();
}
inline void ADCr::_internal_set_p1(int64_t value) {
  
  _impl_.p1_ = value;
}
inline void ADCr::set_p1(int64_t value) {
  _internal_set_p1(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADCr.P1)
}

// int64 P2 = 4;
inline void ADCr::clear_p2() {
  _impl_.p2_ = int64_t{0};
}
inline int64_t ADCr::_internal_p2() const {
  return _impl_.p2_;
}
inline int64_t ADCr::p2() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADCr.P2)
  return _internal_p2();
}
inline void ADCr::_internal_set_p2(int64_t value) {
  
  _impl_.p2_ = value;
}
inline void ADCr::set_p2(int64_t value) {
  _internal_set_p2(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADCr.P2)
}

// int64 YM = 5;
inline void ADCr::clear_ym() {
  _impl_.ym_ = int64_t{0};
}
inline int64_t ADCr::_internal_ym() const {
  return _impl_.ym_;
}
inline int64_t ADCr::ym() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADCr.YM)
  return _internal_ym();
}
inline void ADCr::_internal_set_ym(int64_t value) {
  
  _impl_.ym_ = value;
}
inline void ADCr::set_ym(int64_t value) {
  _internal_set_ym(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADCr.YM)
}

// -------------------------------------------------------------------

// ADVmaMa

// int64 NValue = 1;
inline void ADVmaMa::clear_nvalue() {
  _impl_.nvalue_ = int64_t{0};
}
inline int64_t ADVmaMa::_internal_nvalue() const {
  return _impl_.nvalue_;
}
inline int64_t ADVmaMa::nvalue() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADVmaMa.NValue)
  return _internal_nvalue();
}
inline void ADVmaMa::_internal_set_nvalue(int64_t value) {
  
  _impl_.nvalue_ = value;
}
inline void ADVmaMa::set_nvalue(int64_t value) {
  _internal_set_nvalue(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADVmaMa.NValue)
}

// int64 Vma = 2;
inline void ADVmaMa::clear_vma() {
  _impl_.vma_ = int64_t{0};
}
inline int64_t ADVmaMa::_internal_vma() const {
  return _impl_.vma_;
}
inline int64_t ADVmaMa::vma() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADVmaMa.Vma)
  return _internal_vma();
}
inline void ADVmaMa::_internal_set_vma(int64_t value) {
  
  _impl_.vma_ = value;
}
inline void ADVmaMa::set_vma(int64_t value) {
  _internal_set_vma(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADVmaMa.Vma)
}

// int64 Ma = 3;
inline void ADVmaMa::clear_ma() {
  _impl_.ma_ = int64_t{0};
}
inline int64_t ADVmaMa::_internal_ma() const {
  return _impl_.ma_;
}
inline int64_t ADVmaMa::ma() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADVmaMa.Ma)
  return _internal_ma();
}
inline void ADVmaMa::_internal_set_ma(int64_t value) {
  
  _impl_.ma_ = value;
}
inline void ADVmaMa::set_ma(int64_t value) {
  _internal_set_ma(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADVmaMa.Ma)
}

// int32 PeriodType = 4;
inline void ADVmaMa::clear_periodtype() {
  _impl_.periodtype_ = 0;
}
inline int32_t ADVmaMa::_internal_periodtype() const {
  return _impl_.periodtype_;
}
inline int32_t ADVmaMa::periodtype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADVmaMa.PeriodType)
  return _internal_periodtype();
}
inline void ADVmaMa::_internal_set_periodtype(int32_t value) {
  
  _impl_.periodtype_ = value;
}
inline void ADVmaMa::set_periodtype(int32_t value) {
  _internal_set_periodtype(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADVmaMa.PeriodType)
}

// -------------------------------------------------------------------

// ADVr

// int32 NValue = 1;
inline void ADVr::clear_nvalue() {
  _impl_.nvalue_ = 0;
}
inline int32_t ADVr::_internal_nvalue() const {
  return _impl_.nvalue_;
}
inline int32_t ADVr::nvalue() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADVr.NValue)
  return _internal_nvalue();
}
inline void ADVr::_internal_set_nvalue(int32_t value) {
  
  _impl_.nvalue_ = value;
}
inline void ADVr::set_nvalue(int32_t value) {
  _internal_set_nvalue(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADVr.NValue)
}

// int64 VR = 2;
inline void ADVr::clear_vr() {
  _impl_.vr_ = int64_t{0};
}
inline int64_t ADVr::_internal_vr() const {
  return _impl_.vr_;
}
inline int64_t ADVr::vr() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADVr.VR)
  return _internal_vr();
}
inline void ADVr::_internal_set_vr(int64_t value) {
  
  _impl_.vr_ = value;
}
inline void ADVr::set_vr(int64_t value) {
  _internal_set_vr(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADVr.VR)
}

// int64 AVS = 3;
inline void ADVr::clear_avs() {
  _impl_.avs_ = int64_t{0};
}
inline int64_t ADVr::_internal_avs() const {
  return _impl_.avs_;
}
inline int64_t ADVr::avs() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADVr.AVS)
  return _internal_avs();
}
inline void ADVr::_internal_set_avs(int64_t value) {
  
  _impl_.avs_ = value;
}
inline void ADVr::set_avs(int64_t value) {
  _internal_set_avs(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADVr.AVS)
}

// int64 BVS = 4;
inline void ADVr::clear_bvs() {
  _impl_.bvs_ = int64_t{0};
}
inline int64_t ADVr::_internal_bvs() const {
  return _impl_.bvs_;
}
inline int64_t ADVr::bvs() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADVr.BVS)
  return _internal_bvs();
}
inline void ADVr::_internal_set_bvs(int64_t value) {
  
  _impl_.bvs_ = value;
}
inline void ADVr::set_bvs(int64_t value) {
  _internal_set_bvs(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADVr.BVS)
}

// int64 CVS = 5;
inline void ADVr::clear_cvs() {
  _impl_.cvs_ = int64_t{0};
}
inline int64_t ADVr::_internal_cvs() const {
  return _impl_.cvs_;
}
inline int64_t ADVr::cvs() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADVr.CVS)
  return _internal_cvs();
}
inline void ADVr::_internal_set_cvs(int64_t value) {
  
  _impl_.cvs_ = value;
}
inline void ADVr::set_cvs(int64_t value) {
  _internal_set_cvs(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADVr.CVS)
}

// -------------------------------------------------------------------

// ADWr

// int32 NValue = 1;
inline void ADWr::clear_nvalue() {
  _impl_.nvalue_ = 0;
}
inline int32_t ADWr::_internal_nvalue() const {
  return _impl_.nvalue_;
}
inline int32_t ADWr::nvalue() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADWr.NValue)
  return _internal_nvalue();
}
inline void ADWr::_internal_set_nvalue(int32_t value) {
  
  _impl_.nvalue_ = value;
}
inline void ADWr::set_nvalue(int32_t value) {
  _internal_set_nvalue(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADWr.NValue)
}

// int64 Wr = 2;
inline void ADWr::clear_wr() {
  _impl_.wr_ = int64_t{0};
}
inline int64_t ADWr::_internal_wr() const {
  return _impl_.wr_;
}
inline int64_t ADWr::wr() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADWr.Wr)
  return _internal_wr();
}
inline void ADWr::_internal_set_wr(int64_t value) {
  
  _impl_.wr_ = value;
}
inline void ADWr::set_wr(int64_t value) {
  _internal_set_wr(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADWr.Wr)
}

// int64 ClosePx = 3;
inline void ADWr::clear_closepx() {
  _impl_.closepx_ = int64_t{0};
}
inline int64_t ADWr::_internal_closepx() const {
  return _impl_.closepx_;
}
inline int64_t ADWr::closepx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADWr.ClosePx)
  return _internal_closepx();
}
inline void ADWr::_internal_set_closepx(int64_t value) {
  
  _impl_.closepx_ = value;
}
inline void ADWr::set_closepx(int64_t value) {
  _internal_set_closepx(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADWr.ClosePx)
}

// int64 NHighPx = 4;
inline void ADWr::clear_nhighpx() {
  _impl_.nhighpx_ = int64_t{0};
}
inline int64_t ADWr::_internal_nhighpx() const {
  return _impl_.nhighpx_;
}
inline int64_t ADWr::nhighpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADWr.NHighPx)
  return _internal_nhighpx();
}
inline void ADWr::_internal_set_nhighpx(int64_t value) {
  
  _impl_.nhighpx_ = value;
}
inline void ADWr::set_nhighpx(int64_t value) {
  _internal_set_nhighpx(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADWr.NHighPx)
}

// int64 NLowPx = 5;
inline void ADWr::clear_nlowpx() {
  _impl_.nlowpx_ = int64_t{0};
}
inline int64_t ADWr::_internal_nlowpx() const {
  return _impl_.nlowpx_;
}
inline int64_t ADWr::nlowpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADWr.NLowPx)
  return _internal_nlowpx();
}
inline void ADWr::_internal_set_nlowpx(int64_t value) {
  
  _impl_.nlowpx_ = value;
}
inline void ADWr::set_nlowpx(int64_t value) {
  _internal_set_nlowpx(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADWr.NLowPx)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ADDerivedAnalysis_2eproto

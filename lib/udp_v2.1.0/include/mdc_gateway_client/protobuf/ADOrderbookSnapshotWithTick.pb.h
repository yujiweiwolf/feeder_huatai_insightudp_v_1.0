// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ADOrderbookSnapshotWithTick.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ADOrderbookSnapshotWithTick_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ADOrderbookSnapshotWithTick_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "ESecurityType.pb.h"
#include "ESecurityIDSource.pb.h"
#include "MDStock.pb.h"
#include "ADOrderbookSnapshot.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ADOrderbookSnapshotWithTick_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ADOrderbookSnapshotWithTick_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ADOrderbookSnapshotWithTick_2eproto;
namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {
class ADOrderbookSnapshotWithTick;
struct ADOrderbookSnapshotWithTickDefaultTypeInternal;
extern ADOrderbookSnapshotWithTickDefaultTypeInternal _ADOrderbookSnapshotWithTick_default_instance_;
}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> ::com::htsc::mdc::insight::model::ADOrderbookSnapshotWithTick* Arena::CreateMaybeMessage<::com::htsc::mdc::insight::model::ADOrderbookSnapshotWithTick>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {

// ===================================================================

class ADOrderbookSnapshotWithTick final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick) */ {
 public:
  inline ADOrderbookSnapshotWithTick() : ADOrderbookSnapshotWithTick(nullptr) {}
  ~ADOrderbookSnapshotWithTick() override;
  explicit PROTOBUF_CONSTEXPR ADOrderbookSnapshotWithTick(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ADOrderbookSnapshotWithTick(const ADOrderbookSnapshotWithTick& from);
  ADOrderbookSnapshotWithTick(ADOrderbookSnapshotWithTick&& from) noexcept
    : ADOrderbookSnapshotWithTick() {
    *this = ::std::move(from);
  }

  inline ADOrderbookSnapshotWithTick& operator=(const ADOrderbookSnapshotWithTick& from) {
    CopyFrom(from);
    return *this;
  }
  inline ADOrderbookSnapshotWithTick& operator=(ADOrderbookSnapshotWithTick&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ADOrderbookSnapshotWithTick& default_instance() {
    return *internal_default_instance();
  }
  static inline const ADOrderbookSnapshotWithTick* internal_default_instance() {
    return reinterpret_cast<const ADOrderbookSnapshotWithTick*>(
               &_ADOrderbookSnapshotWithTick_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ADOrderbookSnapshotWithTick& a, ADOrderbookSnapshotWithTick& b) {
    a.Swap(&b);
  }
  inline void Swap(ADOrderbookSnapshotWithTick* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ADOrderbookSnapshotWithTick* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ADOrderbookSnapshotWithTick* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ADOrderbookSnapshotWithTick>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ADOrderbookSnapshotWithTick& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ADOrderbookSnapshotWithTick& from) {
    ADOrderbookSnapshotWithTick::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ADOrderbookSnapshotWithTick* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick";
  }
  protected:
  explicit ADOrderbookSnapshotWithTick(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHTSCSecurityIDFieldNumber = 1,
    kOrderbookSnapshotFieldNumber = 10,
    kMdStockFieldNumber = 11,
    kMDDateFieldNumber = 2,
    kMDTimeFieldNumber = 3,
    kDataTimestampFieldNumber = 4,
    kSecurityIDSourceFieldNumber = 5,
    kSecurityTypeFieldNumber = 6,
    kExchangeDateFieldNumber = 7,
    kExchangeTimeFieldNumber = 8,
    kDataMultiplePowerOf10FieldNumber = 12,
  };
  // string HTSCSecurityID = 1;
  void clear_htscsecurityid();
  const std::string& htscsecurityid() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_htscsecurityid(ArgT0&& arg0, ArgT... args);
  std::string* mutable_htscsecurityid();
  PROTOBUF_NODISCARD std::string* release_htscsecurityid();
  void set_allocated_htscsecurityid(std::string* htscsecurityid);
  private:
  const std::string& _internal_htscsecurityid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_htscsecurityid(const std::string& value);
  std::string* _internal_mutable_htscsecurityid();
  public:

  // .com.htsc.mdc.insight.model.ADOrderbookSnapshot orderbookSnapshot = 10;
  bool has_orderbooksnapshot() const;
  private:
  bool _internal_has_orderbooksnapshot() const;
  public:
  void clear_orderbooksnapshot();
  const ::com::htsc::mdc::insight::model::ADOrderbookSnapshot& orderbooksnapshot() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* release_orderbooksnapshot();
  ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* mutable_orderbooksnapshot();
  void set_allocated_orderbooksnapshot(::com::htsc::mdc::insight::model::ADOrderbookSnapshot* orderbooksnapshot);
  private:
  const ::com::htsc::mdc::insight::model::ADOrderbookSnapshot& _internal_orderbooksnapshot() const;
  ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* _internal_mutable_orderbooksnapshot();
  public:
  void unsafe_arena_set_allocated_orderbooksnapshot(
      ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* orderbooksnapshot);
  ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* unsafe_arena_release_orderbooksnapshot();

  // .com.htsc.mdc.insight.model.MDStock mdStock = 11;
  bool has_mdstock() const;
  private:
  bool _internal_has_mdstock() const;
  public:
  void clear_mdstock();
  const ::com::htsc::mdc::insight::model::MDStock& mdstock() const;
  PROTOBUF_NODISCARD ::com::htsc::mdc::insight::model::MDStock* release_mdstock();
  ::com::htsc::mdc::insight::model::MDStock* mutable_mdstock();
  void set_allocated_mdstock(::com::htsc::mdc::insight::model::MDStock* mdstock);
  private:
  const ::com::htsc::mdc::insight::model::MDStock& _internal_mdstock() const;
  ::com::htsc::mdc::insight::model::MDStock* _internal_mutable_mdstock();
  public:
  void unsafe_arena_set_allocated_mdstock(
      ::com::htsc::mdc::insight::model::MDStock* mdstock);
  ::com::htsc::mdc::insight::model::MDStock* unsafe_arena_release_mdstock();

  // int32 MDDate = 2;
  void clear_mddate();
  int32_t mddate() const;
  void set_mddate(int32_t value);
  private:
  int32_t _internal_mddate() const;
  void _internal_set_mddate(int32_t value);
  public:

  // int32 MDTime = 3;
  void clear_mdtime();
  int32_t mdtime() const;
  void set_mdtime(int32_t value);
  private:
  int32_t _internal_mdtime() const;
  void _internal_set_mdtime(int32_t value);
  public:

  // int64 DataTimestamp = 4;
  void clear_datatimestamp();
  int64_t datatimestamp() const;
  void set_datatimestamp(int64_t value);
  private:
  int64_t _internal_datatimestamp() const;
  void _internal_set_datatimestamp(int64_t value);
  public:

  // .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 5;
  void clear_securityidsource();
  ::com::htsc::mdc::model::ESecurityIDSource securityidsource() const;
  void set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value);
  private:
  ::com::htsc::mdc::model::ESecurityIDSource _internal_securityidsource() const;
  void _internal_set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value);
  public:

  // .com.htsc.mdc.model.ESecurityType securityType = 6;
  void clear_securitytype();
  ::com::htsc::mdc::model::ESecurityType securitytype() const;
  void set_securitytype(::com::htsc::mdc::model::ESecurityType value);
  private:
  ::com::htsc::mdc::model::ESecurityType _internal_securitytype() const;
  void _internal_set_securitytype(::com::htsc::mdc::model::ESecurityType value);
  public:

  // int32 ExchangeDate = 7;
  void clear_exchangedate();
  int32_t exchangedate() const;
  void set_exchangedate(int32_t value);
  private:
  int32_t _internal_exchangedate() const;
  void _internal_set_exchangedate(int32_t value);
  public:

  // int32 ExchangeTime = 8;
  void clear_exchangetime();
  int32_t exchangetime() const;
  void set_exchangetime(int32_t value);
  private:
  int32_t _internal_exchangetime() const;
  void _internal_set_exchangetime(int32_t value);
  public:

  // int32 DataMultiplePowerOf10 = 12;
  void clear_datamultiplepowerof10();
  int32_t datamultiplepowerof10() const;
  void set_datamultiplepowerof10(int32_t value);
  private:
  int32_t _internal_datamultiplepowerof10() const;
  void _internal_set_datamultiplepowerof10(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr htscsecurityid_;
    ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* orderbooksnapshot_;
    ::com::htsc::mdc::insight::model::MDStock* mdstock_;
    int32_t mddate_;
    int32_t mdtime_;
    int64_t datatimestamp_;
    int securityidsource_;
    int securitytype_;
    int32_t exchangedate_;
    int32_t exchangetime_;
    int32_t datamultiplepowerof10_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ADOrderbookSnapshotWithTick_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ADOrderbookSnapshotWithTick

// string HTSCSecurityID = 1;
inline void ADOrderbookSnapshotWithTick::clear_htscsecurityid() {
  _impl_.htscsecurityid_.ClearToEmpty();
}
inline const std::string& ADOrderbookSnapshotWithTick::htscsecurityid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.HTSCSecurityID)
  return _internal_htscsecurityid();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ADOrderbookSnapshotWithTick::set_htscsecurityid(ArgT0&& arg0, ArgT... args) {
 
 _impl_.htscsecurityid_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.HTSCSecurityID)
}
inline std::string* ADOrderbookSnapshotWithTick::mutable_htscsecurityid() {
  std::string* _s = _internal_mutable_htscsecurityid();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.HTSCSecurityID)
  return _s;
}
inline const std::string& ADOrderbookSnapshotWithTick::_internal_htscsecurityid() const {
  return _impl_.htscsecurityid_.Get();
}
inline void ADOrderbookSnapshotWithTick::_internal_set_htscsecurityid(const std::string& value) {
  
  _impl_.htscsecurityid_.Set(value, GetArenaForAllocation());
}
inline std::string* ADOrderbookSnapshotWithTick::_internal_mutable_htscsecurityid() {
  
  return _impl_.htscsecurityid_.Mutable(GetArenaForAllocation());
}
inline std::string* ADOrderbookSnapshotWithTick::release_htscsecurityid() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.HTSCSecurityID)
  return _impl_.htscsecurityid_.Release();
}
inline void ADOrderbookSnapshotWithTick::set_allocated_htscsecurityid(std::string* htscsecurityid) {
  if (htscsecurityid != nullptr) {
    
  } else {
    
  }
  _impl_.htscsecurityid_.SetAllocated(htscsecurityid, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.htscsecurityid_.IsDefault()) {
    _impl_.htscsecurityid_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.HTSCSecurityID)
}

// int32 MDDate = 2;
inline void ADOrderbookSnapshotWithTick::clear_mddate() {
  _impl_.mddate_ = 0;
}
inline int32_t ADOrderbookSnapshotWithTick::_internal_mddate() const {
  return _impl_.mddate_;
}
inline int32_t ADOrderbookSnapshotWithTick::mddate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.MDDate)
  return _internal_mddate();
}
inline void ADOrderbookSnapshotWithTick::_internal_set_mddate(int32_t value) {
  
  _impl_.mddate_ = value;
}
inline void ADOrderbookSnapshotWithTick::set_mddate(int32_t value) {
  _internal_set_mddate(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.MDDate)
}

// int32 MDTime = 3;
inline void ADOrderbookSnapshotWithTick::clear_mdtime() {
  _impl_.mdtime_ = 0;
}
inline int32_t ADOrderbookSnapshotWithTick::_internal_mdtime() const {
  return _impl_.mdtime_;
}
inline int32_t ADOrderbookSnapshotWithTick::mdtime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.MDTime)
  return _internal_mdtime();
}
inline void ADOrderbookSnapshotWithTick::_internal_set_mdtime(int32_t value) {
  
  _impl_.mdtime_ = value;
}
inline void ADOrderbookSnapshotWithTick::set_mdtime(int32_t value) {
  _internal_set_mdtime(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.MDTime)
}

// int64 DataTimestamp = 4;
inline void ADOrderbookSnapshotWithTick::clear_datatimestamp() {
  _impl_.datatimestamp_ = int64_t{0};
}
inline int64_t ADOrderbookSnapshotWithTick::_internal_datatimestamp() const {
  return _impl_.datatimestamp_;
}
inline int64_t ADOrderbookSnapshotWithTick::datatimestamp() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.DataTimestamp)
  return _internal_datatimestamp();
}
inline void ADOrderbookSnapshotWithTick::_internal_set_datatimestamp(int64_t value) {
  
  _impl_.datatimestamp_ = value;
}
inline void ADOrderbookSnapshotWithTick::set_datatimestamp(int64_t value) {
  _internal_set_datatimestamp(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.DataTimestamp)
}

// .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 5;
inline void ADOrderbookSnapshotWithTick::clear_securityidsource() {
  _impl_.securityidsource_ = 0;
}
inline ::com::htsc::mdc::model::ESecurityIDSource ADOrderbookSnapshotWithTick::_internal_securityidsource() const {
  return static_cast< ::com::htsc::mdc::model::ESecurityIDSource >(_impl_.securityidsource_);
}
inline ::com::htsc::mdc::model::ESecurityIDSource ADOrderbookSnapshotWithTick::securityidsource() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.securityIDSource)
  return _internal_securityidsource();
}
inline void ADOrderbookSnapshotWithTick::_internal_set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value) {
  
  _impl_.securityidsource_ = value;
}
inline void ADOrderbookSnapshotWithTick::set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value) {
  _internal_set_securityidsource(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.securityIDSource)
}

// .com.htsc.mdc.model.ESecurityType securityType = 6;
inline void ADOrderbookSnapshotWithTick::clear_securitytype() {
  _impl_.securitytype_ = 0;
}
inline ::com::htsc::mdc::model::ESecurityType ADOrderbookSnapshotWithTick::_internal_securitytype() const {
  return static_cast< ::com::htsc::mdc::model::ESecurityType >(_impl_.securitytype_);
}
inline ::com::htsc::mdc::model::ESecurityType ADOrderbookSnapshotWithTick::securitytype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.securityType)
  return _internal_securitytype();
}
inline void ADOrderbookSnapshotWithTick::_internal_set_securitytype(::com::htsc::mdc::model::ESecurityType value) {
  
  _impl_.securitytype_ = value;
}
inline void ADOrderbookSnapshotWithTick::set_securitytype(::com::htsc::mdc::model::ESecurityType value) {
  _internal_set_securitytype(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.securityType)
}

// int32 ExchangeDate = 7;
inline void ADOrderbookSnapshotWithTick::clear_exchangedate() {
  _impl_.exchangedate_ = 0;
}
inline int32_t ADOrderbookSnapshotWithTick::_internal_exchangedate() const {
  return _impl_.exchangedate_;
}
inline int32_t ADOrderbookSnapshotWithTick::exchangedate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.ExchangeDate)
  return _internal_exchangedate();
}
inline void ADOrderbookSnapshotWithTick::_internal_set_exchangedate(int32_t value) {
  
  _impl_.exchangedate_ = value;
}
inline void ADOrderbookSnapshotWithTick::set_exchangedate(int32_t value) {
  _internal_set_exchangedate(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.ExchangeDate)
}

// int32 ExchangeTime = 8;
inline void ADOrderbookSnapshotWithTick::clear_exchangetime() {
  _impl_.exchangetime_ = 0;
}
inline int32_t ADOrderbookSnapshotWithTick::_internal_exchangetime() const {
  return _impl_.exchangetime_;
}
inline int32_t ADOrderbookSnapshotWithTick::exchangetime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.ExchangeTime)
  return _internal_exchangetime();
}
inline void ADOrderbookSnapshotWithTick::_internal_set_exchangetime(int32_t value) {
  
  _impl_.exchangetime_ = value;
}
inline void ADOrderbookSnapshotWithTick::set_exchangetime(int32_t value) {
  _internal_set_exchangetime(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.ExchangeTime)
}

// .com.htsc.mdc.insight.model.ADOrderbookSnapshot orderbookSnapshot = 10;
inline bool ADOrderbookSnapshotWithTick::_internal_has_orderbooksnapshot() const {
  return this != internal_default_instance() && _impl_.orderbooksnapshot_ != nullptr;
}
inline bool ADOrderbookSnapshotWithTick::has_orderbooksnapshot() const {
  return _internal_has_orderbooksnapshot();
}
inline const ::com::htsc::mdc::insight::model::ADOrderbookSnapshot& ADOrderbookSnapshotWithTick::_internal_orderbooksnapshot() const {
  const ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* p = _impl_.orderbooksnapshot_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::ADOrderbookSnapshot&>(
      ::com::htsc::mdc::insight::model::_ADOrderbookSnapshot_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::ADOrderbookSnapshot& ADOrderbookSnapshotWithTick::orderbooksnapshot() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.orderbookSnapshot)
  return _internal_orderbooksnapshot();
}
inline void ADOrderbookSnapshotWithTick::unsafe_arena_set_allocated_orderbooksnapshot(
    ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* orderbooksnapshot) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.orderbooksnapshot_);
  }
  _impl_.orderbooksnapshot_ = orderbooksnapshot;
  if (orderbooksnapshot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.orderbookSnapshot)
}
inline ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* ADOrderbookSnapshotWithTick::release_orderbooksnapshot() {
  
  ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* temp = _impl_.orderbooksnapshot_;
  _impl_.orderbooksnapshot_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* ADOrderbookSnapshotWithTick::unsafe_arena_release_orderbooksnapshot() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.orderbookSnapshot)
  
  ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* temp = _impl_.orderbooksnapshot_;
  _impl_.orderbooksnapshot_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* ADOrderbookSnapshotWithTick::_internal_mutable_orderbooksnapshot() {
  
  if (_impl_.orderbooksnapshot_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::ADOrderbookSnapshot>(GetArenaForAllocation());
    _impl_.orderbooksnapshot_ = p;
  }
  return _impl_.orderbooksnapshot_;
}
inline ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* ADOrderbookSnapshotWithTick::mutable_orderbooksnapshot() {
  ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* _msg = _internal_mutable_orderbooksnapshot();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.orderbookSnapshot)
  return _msg;
}
inline void ADOrderbookSnapshotWithTick::set_allocated_orderbooksnapshot(::com::htsc::mdc::insight::model::ADOrderbookSnapshot* orderbooksnapshot) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.orderbooksnapshot_);
  }
  if (orderbooksnapshot) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(orderbooksnapshot));
    if (message_arena != submessage_arena) {
      orderbooksnapshot = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, orderbooksnapshot, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.orderbooksnapshot_ = orderbooksnapshot;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.orderbookSnapshot)
}

// .com.htsc.mdc.insight.model.MDStock mdStock = 11;
inline bool ADOrderbookSnapshotWithTick::_internal_has_mdstock() const {
  return this != internal_default_instance() && _impl_.mdstock_ != nullptr;
}
inline bool ADOrderbookSnapshotWithTick::has_mdstock() const {
  return _internal_has_mdstock();
}
inline const ::com::htsc::mdc::insight::model::MDStock& ADOrderbookSnapshotWithTick::_internal_mdstock() const {
  const ::com::htsc::mdc::insight::model::MDStock* p = _impl_.mdstock_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::htsc::mdc::insight::model::MDStock&>(
      ::com::htsc::mdc::insight::model::_MDStock_default_instance_);
}
inline const ::com::htsc::mdc::insight::model::MDStock& ADOrderbookSnapshotWithTick::mdstock() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.mdStock)
  return _internal_mdstock();
}
inline void ADOrderbookSnapshotWithTick::unsafe_arena_set_allocated_mdstock(
    ::com::htsc::mdc::insight::model::MDStock* mdstock) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdstock_);
  }
  _impl_.mdstock_ = mdstock;
  if (mdstock) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.mdStock)
}
inline ::com::htsc::mdc::insight::model::MDStock* ADOrderbookSnapshotWithTick::release_mdstock() {
  
  ::com::htsc::mdc::insight::model::MDStock* temp = _impl_.mdstock_;
  _impl_.mdstock_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDStock* ADOrderbookSnapshotWithTick::unsafe_arena_release_mdstock() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.mdStock)
  
  ::com::htsc::mdc::insight::model::MDStock* temp = _impl_.mdstock_;
  _impl_.mdstock_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDStock* ADOrderbookSnapshotWithTick::_internal_mutable_mdstock() {
  
  if (_impl_.mdstock_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDStock>(GetArenaForAllocation());
    _impl_.mdstock_ = p;
  }
  return _impl_.mdstock_;
}
inline ::com::htsc::mdc::insight::model::MDStock* ADOrderbookSnapshotWithTick::mutable_mdstock() {
  ::com::htsc::mdc::insight::model::MDStock* _msg = _internal_mutable_mdstock();
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.mdStock)
  return _msg;
}
inline void ADOrderbookSnapshotWithTick::set_allocated_mdstock(::com::htsc::mdc::insight::model::MDStock* mdstock) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mdstock_);
  }
  if (mdstock) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdstock));
    if (message_arena != submessage_arena) {
      mdstock = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdstock, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.mdstock_ = mdstock;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.mdStock)
}

// int32 DataMultiplePowerOf10 = 12;
inline void ADOrderbookSnapshotWithTick::clear_datamultiplepowerof10() {
  _impl_.datamultiplepowerof10_ = 0;
}
inline int32_t ADOrderbookSnapshotWithTick::_internal_datamultiplepowerof10() const {
  return _impl_.datamultiplepowerof10_;
}
inline int32_t ADOrderbookSnapshotWithTick::datamultiplepowerof10() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.DataMultiplePowerOf10)
  return _internal_datamultiplepowerof10();
}
inline void ADOrderbookSnapshotWithTick::_internal_set_datamultiplepowerof10(int32_t value) {
  
  _impl_.datamultiplepowerof10_ = value;
}
inline void ADOrderbookSnapshotWithTick::set_datamultiplepowerof10(int32_t value) {
  _internal_set_datamultiplepowerof10(value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.DataMultiplePowerOf10)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ADOrderbookSnapshotWithTick_2eproto

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageBody.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_MessageBody_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_MessageBody_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3008000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3008000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "EMessageType.pb.h"
#include "Login.pb.h"
#include "ServiceDiscovery.pb.h"
#include "MDSubscribe.pb.h"
#include "MarketData.pb.h"
#include "InsightErrorContext.pb.h"
#include "MDQuery.pb.h"
#include "MDPlayback.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_MessageBody_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_MessageBody_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_MessageBody_2eproto;
namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {
class MessageBody;
class MessageBodyDefaultTypeInternal;
extern MessageBodyDefaultTypeInternal _MessageBody_default_instance_;
}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> ::com::htsc::mdc::insight::model::MessageBody* Arena::CreateMaybeMessage<::com::htsc::mdc::insight::model::MessageBody>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {

// ===================================================================

class MessageBody :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.htsc.mdc.insight.model.MessageBody) */ {
 public:
  MessageBody();
  virtual ~MessageBody();

  MessageBody(const MessageBody& from);
  MessageBody(MessageBody&& from) noexcept
    : MessageBody() {
    *this = ::std::move(from);
  }

  inline MessageBody& operator=(const MessageBody& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageBody& operator=(MessageBody&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MessageBody& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageBody* internal_default_instance() {
    return reinterpret_cast<const MessageBody*>(
               &_MessageBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MessageBody* other);
  friend void swap(MessageBody& a, MessageBody& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageBody* New() const final {
    return CreateMaybeMessage<MessageBody>(nullptr);
  }

  MessageBody* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MessageBody>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MessageBody& from);
  void MergeFrom(const MessageBody& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageBody* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.htsc.mdc.insight.model.MessageBody";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_MessageBody_2eproto);
    return ::descriptor_table_MessageBody_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .com.htsc.mdc.insight.model.InsightErrorContext generalErrorMessage = 10;
  bool has_generalerrormessage() const;
  void clear_generalerrormessage();
  static const int kGeneralErrorMessageFieldNumber = 10;
  const ::com::htsc::mdc::insight::model::InsightErrorContext& generalerrormessage() const;
  ::com::htsc::mdc::insight::model::InsightErrorContext* release_generalerrormessage();
  ::com::htsc::mdc::insight::model::InsightErrorContext* mutable_generalerrormessage();
  void set_allocated_generalerrormessage(::com::htsc::mdc::insight::model::InsightErrorContext* generalerrormessage);

  // .com.htsc.mdc.insight.model.LoginRequest loginRequest = 11;
  bool has_loginrequest() const;
  void clear_loginrequest();
  static const int kLoginRequestFieldNumber = 11;
  const ::com::htsc::mdc::insight::model::LoginRequest& loginrequest() const;
  ::com::htsc::mdc::insight::model::LoginRequest* release_loginrequest();
  ::com::htsc::mdc::insight::model::LoginRequest* mutable_loginrequest();
  void set_allocated_loginrequest(::com::htsc::mdc::insight::model::LoginRequest* loginrequest);

  // .com.htsc.mdc.insight.model.LoginResponse loginResponse = 12;
  bool has_loginresponse() const;
  void clear_loginresponse();
  static const int kLoginResponseFieldNumber = 12;
  const ::com::htsc::mdc::insight::model::LoginResponse& loginresponse() const;
  ::com::htsc::mdc::insight::model::LoginResponse* release_loginresponse();
  ::com::htsc::mdc::insight::model::LoginResponse* mutable_loginresponse();
  void set_allocated_loginresponse(::com::htsc::mdc::insight::model::LoginResponse* loginresponse);

  // .com.htsc.mdc.insight.model.ServiceDiscoveryRequest serviceDiscoveryRequest = 13;
  bool has_servicediscoveryrequest() const;
  void clear_servicediscoveryrequest();
  static const int kServiceDiscoveryRequestFieldNumber = 13;
  const ::com::htsc::mdc::insight::model::ServiceDiscoveryRequest& servicediscoveryrequest() const;
  ::com::htsc::mdc::insight::model::ServiceDiscoveryRequest* release_servicediscoveryrequest();
  ::com::htsc::mdc::insight::model::ServiceDiscoveryRequest* mutable_servicediscoveryrequest();
  void set_allocated_servicediscoveryrequest(::com::htsc::mdc::insight::model::ServiceDiscoveryRequest* servicediscoveryrequest);

  // .com.htsc.mdc.insight.model.ServiceDiscoveryResponse serviceDiscoveryResponse = 14;
  bool has_servicediscoveryresponse() const;
  void clear_servicediscoveryresponse();
  static const int kServiceDiscoveryResponseFieldNumber = 14;
  const ::com::htsc::mdc::insight::model::ServiceDiscoveryResponse& servicediscoveryresponse() const;
  ::com::htsc::mdc::insight::model::ServiceDiscoveryResponse* release_servicediscoveryresponse();
  ::com::htsc::mdc::insight::model::ServiceDiscoveryResponse* mutable_servicediscoveryresponse();
  void set_allocated_servicediscoveryresponse(::com::htsc::mdc::insight::model::ServiceDiscoveryResponse* servicediscoveryresponse);

  // .com.htsc.mdc.insight.model.MDSubscribeRequest mdSubscribeRequest = 15;
  bool has_mdsubscriberequest() const;
  void clear_mdsubscriberequest();
  static const int kMdSubscribeRequestFieldNumber = 15;
  const ::com::htsc::mdc::insight::model::MDSubscribeRequest& mdsubscriberequest() const;
  ::com::htsc::mdc::insight::model::MDSubscribeRequest* release_mdsubscriberequest();
  ::com::htsc::mdc::insight::model::MDSubscribeRequest* mutable_mdsubscriberequest();
  void set_allocated_mdsubscriberequest(::com::htsc::mdc::insight::model::MDSubscribeRequest* mdsubscriberequest);

  // .com.htsc.mdc.insight.model.MDSubscribeResponse mdSubscribeResponse = 16;
  bool has_mdsubscriberesponse() const;
  void clear_mdsubscriberesponse();
  static const int kMdSubscribeResponseFieldNumber = 16;
  const ::com::htsc::mdc::insight::model::MDSubscribeResponse& mdsubscriberesponse() const;
  ::com::htsc::mdc::insight::model::MDSubscribeResponse* release_mdsubscriberesponse();
  ::com::htsc::mdc::insight::model::MDSubscribeResponse* mutable_mdsubscriberesponse();
  void set_allocated_mdsubscriberesponse(::com::htsc::mdc::insight::model::MDSubscribeResponse* mdsubscriberesponse);

  // .com.htsc.mdc.insight.model.MarketData pushMarketData = 20;
  bool has_pushmarketdata() const;
  void clear_pushmarketdata();
  static const int kPushMarketDataFieldNumber = 20;
  const ::com::htsc::mdc::insight::model::MarketData& pushmarketdata() const;
  ::com::htsc::mdc::insight::model::MarketData* release_pushmarketdata();
  ::com::htsc::mdc::insight::model::MarketData* mutable_pushmarketdata();
  void set_allocated_pushmarketdata(::com::htsc::mdc::insight::model::MarketData* pushmarketdata);

  // .com.htsc.mdc.insight.model.MarketDataStream pushMarketDataStream = 21;
  bool has_pushmarketdatastream() const;
  void clear_pushmarketdatastream();
  static const int kPushMarketDataStreamFieldNumber = 21;
  const ::com::htsc::mdc::insight::model::MarketDataStream& pushmarketdatastream() const;
  ::com::htsc::mdc::insight::model::MarketDataStream* release_pushmarketdatastream();
  ::com::htsc::mdc::insight::model::MarketDataStream* mutable_pushmarketdatastream();
  void set_allocated_pushmarketdatastream(::com::htsc::mdc::insight::model::MarketDataStream* pushmarketdatastream);

  // .com.htsc.mdc.insight.model.MDQueryRequest mdQueryRequest = 30;
  bool has_mdqueryrequest() const;
  void clear_mdqueryrequest();
  static const int kMdQueryRequestFieldNumber = 30;
  const ::com::htsc::mdc::insight::model::MDQueryRequest& mdqueryrequest() const;
  ::com::htsc::mdc::insight::model::MDQueryRequest* release_mdqueryrequest();
  ::com::htsc::mdc::insight::model::MDQueryRequest* mutable_mdqueryrequest();
  void set_allocated_mdqueryrequest(::com::htsc::mdc::insight::model::MDQueryRequest* mdqueryrequest);

  // .com.htsc.mdc.insight.model.MDQueryResponse mdQueryResponse = 31;
  bool has_mdqueryresponse() const;
  void clear_mdqueryresponse();
  static const int kMdQueryResponseFieldNumber = 31;
  const ::com::htsc::mdc::insight::model::MDQueryResponse& mdqueryresponse() const;
  ::com::htsc::mdc::insight::model::MDQueryResponse* release_mdqueryresponse();
  ::com::htsc::mdc::insight::model::MDQueryResponse* mutable_mdqueryresponse();
  void set_allocated_mdqueryresponse(::com::htsc::mdc::insight::model::MDQueryResponse* mdqueryresponse);

  // .com.htsc.mdc.insight.model.PlaybackRequest playbackRequest = 32;
  bool has_playbackrequest() const;
  void clear_playbackrequest();
  static const int kPlaybackRequestFieldNumber = 32;
  const ::com::htsc::mdc::insight::model::PlaybackRequest& playbackrequest() const;
  ::com::htsc::mdc::insight::model::PlaybackRequest* release_playbackrequest();
  ::com::htsc::mdc::insight::model::PlaybackRequest* mutable_playbackrequest();
  void set_allocated_playbackrequest(::com::htsc::mdc::insight::model::PlaybackRequest* playbackrequest);

  // .com.htsc.mdc.insight.model.PlaybackResponse playbackResponse = 33;
  bool has_playbackresponse() const;
  void clear_playbackresponse();
  static const int kPlaybackResponseFieldNumber = 33;
  const ::com::htsc::mdc::insight::model::PlaybackResponse& playbackresponse() const;
  ::com::htsc::mdc::insight::model::PlaybackResponse* release_playbackresponse();
  ::com::htsc::mdc::insight::model::PlaybackResponse* mutable_playbackresponse();
  void set_allocated_playbackresponse(::com::htsc::mdc::insight::model::PlaybackResponse* playbackresponse);

  // .com.htsc.mdc.insight.model.PlaybackControlRequest playbackControlRequest = 34;
  bool has_playbackcontrolrequest() const;
  void clear_playbackcontrolrequest();
  static const int kPlaybackControlRequestFieldNumber = 34;
  const ::com::htsc::mdc::insight::model::PlaybackControlRequest& playbackcontrolrequest() const;
  ::com::htsc::mdc::insight::model::PlaybackControlRequest* release_playbackcontrolrequest();
  ::com::htsc::mdc::insight::model::PlaybackControlRequest* mutable_playbackcontrolrequest();
  void set_allocated_playbackcontrolrequest(::com::htsc::mdc::insight::model::PlaybackControlRequest* playbackcontrolrequest);

  // .com.htsc.mdc.insight.model.PlaybackControlResponse playbackControlResponse = 35;
  bool has_playbackcontrolresponse() const;
  void clear_playbackcontrolresponse();
  static const int kPlaybackControlResponseFieldNumber = 35;
  const ::com::htsc::mdc::insight::model::PlaybackControlResponse& playbackcontrolresponse() const;
  ::com::htsc::mdc::insight::model::PlaybackControlResponse* release_playbackcontrolresponse();
  ::com::htsc::mdc::insight::model::PlaybackControlResponse* mutable_playbackcontrolresponse();
  void set_allocated_playbackcontrolresponse(::com::htsc::mdc::insight::model::PlaybackControlResponse* playbackcontrolresponse);

  // .com.htsc.mdc.insight.model.PlaybackStatusRequest playbackStatusRequest = 36;
  bool has_playbackstatusrequest() const;
  void clear_playbackstatusrequest();
  static const int kPlaybackStatusRequestFieldNumber = 36;
  const ::com::htsc::mdc::insight::model::PlaybackStatusRequest& playbackstatusrequest() const;
  ::com::htsc::mdc::insight::model::PlaybackStatusRequest* release_playbackstatusrequest();
  ::com::htsc::mdc::insight::model::PlaybackStatusRequest* mutable_playbackstatusrequest();
  void set_allocated_playbackstatusrequest(::com::htsc::mdc::insight::model::PlaybackStatusRequest* playbackstatusrequest);

  // .com.htsc.mdc.insight.model.PlaybackStatus playbackStatus = 37;
  bool has_playbackstatus() const;
  void clear_playbackstatus();
  static const int kPlaybackStatusFieldNumber = 37;
  const ::com::htsc::mdc::insight::model::PlaybackStatus& playbackstatus() const;
  ::com::htsc::mdc::insight::model::PlaybackStatus* release_playbackstatus();
  ::com::htsc::mdc::insight::model::PlaybackStatus* mutable_playbackstatus();
  void set_allocated_playbackstatus(::com::htsc::mdc::insight::model::PlaybackStatus* playbackstatus);

  // .com.htsc.mdc.insight.model.PlaybackPayload playbackPayload = 38;
  bool has_playbackpayload() const;
  void clear_playbackpayload();
  static const int kPlaybackPayloadFieldNumber = 38;
  const ::com::htsc::mdc::insight::model::PlaybackPayload& playbackpayload() const;
  ::com::htsc::mdc::insight::model::PlaybackPayload* release_playbackpayload();
  ::com::htsc::mdc::insight::model::PlaybackPayload* mutable_playbackpayload();
  void set_allocated_playbackpayload(::com::htsc::mdc::insight::model::PlaybackPayload* playbackpayload);

  // int64 interactionId = 2;
  void clear_interactionid();
  static const int kInteractionIdFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int64 interactionid() const;
  void set_interactionid(::PROTOBUF_NAMESPACE_ID::int64 value);

  // .com.htsc.mdc.insight.model.EMessageType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::com::htsc::mdc::insight::model::EMessageType type() const;
  void set_type(::com::htsc::mdc::insight::model::EMessageType value);

  // @@protoc_insertion_point(class_scope:com.htsc.mdc.insight.model.MessageBody)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::com::htsc::mdc::insight::model::InsightErrorContext* generalerrormessage_;
  ::com::htsc::mdc::insight::model::LoginRequest* loginrequest_;
  ::com::htsc::mdc::insight::model::LoginResponse* loginresponse_;
  ::com::htsc::mdc::insight::model::ServiceDiscoveryRequest* servicediscoveryrequest_;
  ::com::htsc::mdc::insight::model::ServiceDiscoveryResponse* servicediscoveryresponse_;
  ::com::htsc::mdc::insight::model::MDSubscribeRequest* mdsubscriberequest_;
  ::com::htsc::mdc::insight::model::MDSubscribeResponse* mdsubscriberesponse_;
  ::com::htsc::mdc::insight::model::MarketData* pushmarketdata_;
  ::com::htsc::mdc::insight::model::MarketDataStream* pushmarketdatastream_;
  ::com::htsc::mdc::insight::model::MDQueryRequest* mdqueryrequest_;
  ::com::htsc::mdc::insight::model::MDQueryResponse* mdqueryresponse_;
  ::com::htsc::mdc::insight::model::PlaybackRequest* playbackrequest_;
  ::com::htsc::mdc::insight::model::PlaybackResponse* playbackresponse_;
  ::com::htsc::mdc::insight::model::PlaybackControlRequest* playbackcontrolrequest_;
  ::com::htsc::mdc::insight::model::PlaybackControlResponse* playbackcontrolresponse_;
  ::com::htsc::mdc::insight::model::PlaybackStatusRequest* playbackstatusrequest_;
  ::com::htsc::mdc::insight::model::PlaybackStatus* playbackstatus_;
  ::com::htsc::mdc::insight::model::PlaybackPayload* playbackpayload_;
  ::PROTOBUF_NAMESPACE_ID::int64 interactionid_;
  int type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_MessageBody_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MessageBody

// .com.htsc.mdc.insight.model.EMessageType type = 1;
inline void MessageBody::clear_type() {
  type_ = 0;
}
inline ::com::htsc::mdc::insight::model::EMessageType MessageBody::type() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MessageBody.type)
  return static_cast< ::com::htsc::mdc::insight::model::EMessageType >(type_);
}
inline void MessageBody::set_type(::com::htsc::mdc::insight::model::EMessageType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MessageBody.type)
}

// int64 interactionId = 2;
inline void MessageBody::clear_interactionid() {
  interactionid_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MessageBody::interactionid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MessageBody.interactionId)
  return interactionid_;
}
inline void MessageBody::set_interactionid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  interactionid_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MessageBody.interactionId)
}

// .com.htsc.mdc.insight.model.InsightErrorContext generalErrorMessage = 10;
inline bool MessageBody::has_generalerrormessage() const {
  return this != internal_default_instance() && generalerrormessage_ != nullptr;
}
inline const ::com::htsc::mdc::insight::model::InsightErrorContext& MessageBody::generalerrormessage() const {
  const ::com::htsc::mdc::insight::model::InsightErrorContext* p = generalerrormessage_;
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MessageBody.generalErrorMessage)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::htsc::mdc::insight::model::InsightErrorContext*>(
      &::com::htsc::mdc::insight::model::_InsightErrorContext_default_instance_);
}
inline ::com::htsc::mdc::insight::model::InsightErrorContext* MessageBody::release_generalerrormessage() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MessageBody.generalErrorMessage)
  
  ::com::htsc::mdc::insight::model::InsightErrorContext* temp = generalerrormessage_;
  generalerrormessage_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::InsightErrorContext* MessageBody::mutable_generalerrormessage() {
  
  if (generalerrormessage_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::InsightErrorContext>(GetArenaNoVirtual());
    generalerrormessage_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MessageBody.generalErrorMessage)
  return generalerrormessage_;
}
inline void MessageBody::set_allocated_generalerrormessage(::com::htsc::mdc::insight::model::InsightErrorContext* generalerrormessage) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(generalerrormessage_);
  }
  if (generalerrormessage) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      generalerrormessage = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generalerrormessage, submessage_arena);
    }
    
  } else {
    
  }
  generalerrormessage_ = generalerrormessage;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MessageBody.generalErrorMessage)
}

// .com.htsc.mdc.insight.model.LoginRequest loginRequest = 11;
inline bool MessageBody::has_loginrequest() const {
  return this != internal_default_instance() && loginrequest_ != nullptr;
}
inline const ::com::htsc::mdc::insight::model::LoginRequest& MessageBody::loginrequest() const {
  const ::com::htsc::mdc::insight::model::LoginRequest* p = loginrequest_;
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MessageBody.loginRequest)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::htsc::mdc::insight::model::LoginRequest*>(
      &::com::htsc::mdc::insight::model::_LoginRequest_default_instance_);
}
inline ::com::htsc::mdc::insight::model::LoginRequest* MessageBody::release_loginrequest() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MessageBody.loginRequest)
  
  ::com::htsc::mdc::insight::model::LoginRequest* temp = loginrequest_;
  loginrequest_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::LoginRequest* MessageBody::mutable_loginrequest() {
  
  if (loginrequest_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::LoginRequest>(GetArenaNoVirtual());
    loginrequest_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MessageBody.loginRequest)
  return loginrequest_;
}
inline void MessageBody::set_allocated_loginrequest(::com::htsc::mdc::insight::model::LoginRequest* loginrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(loginrequest_);
  }
  if (loginrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      loginrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, loginrequest, submessage_arena);
    }
    
  } else {
    
  }
  loginrequest_ = loginrequest;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MessageBody.loginRequest)
}

// .com.htsc.mdc.insight.model.LoginResponse loginResponse = 12;
inline bool MessageBody::has_loginresponse() const {
  return this != internal_default_instance() && loginresponse_ != nullptr;
}
inline const ::com::htsc::mdc::insight::model::LoginResponse& MessageBody::loginresponse() const {
  const ::com::htsc::mdc::insight::model::LoginResponse* p = loginresponse_;
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MessageBody.loginResponse)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::htsc::mdc::insight::model::LoginResponse*>(
      &::com::htsc::mdc::insight::model::_LoginResponse_default_instance_);
}
inline ::com::htsc::mdc::insight::model::LoginResponse* MessageBody::release_loginresponse() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MessageBody.loginResponse)
  
  ::com::htsc::mdc::insight::model::LoginResponse* temp = loginresponse_;
  loginresponse_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::LoginResponse* MessageBody::mutable_loginresponse() {
  
  if (loginresponse_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::LoginResponse>(GetArenaNoVirtual());
    loginresponse_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MessageBody.loginResponse)
  return loginresponse_;
}
inline void MessageBody::set_allocated_loginresponse(::com::htsc::mdc::insight::model::LoginResponse* loginresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(loginresponse_);
  }
  if (loginresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      loginresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, loginresponse, submessage_arena);
    }
    
  } else {
    
  }
  loginresponse_ = loginresponse;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MessageBody.loginResponse)
}

// .com.htsc.mdc.insight.model.ServiceDiscoveryRequest serviceDiscoveryRequest = 13;
inline bool MessageBody::has_servicediscoveryrequest() const {
  return this != internal_default_instance() && servicediscoveryrequest_ != nullptr;
}
inline const ::com::htsc::mdc::insight::model::ServiceDiscoveryRequest& MessageBody::servicediscoveryrequest() const {
  const ::com::htsc::mdc::insight::model::ServiceDiscoveryRequest* p = servicediscoveryrequest_;
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MessageBody.serviceDiscoveryRequest)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::htsc::mdc::insight::model::ServiceDiscoveryRequest*>(
      &::com::htsc::mdc::insight::model::_ServiceDiscoveryRequest_default_instance_);
}
inline ::com::htsc::mdc::insight::model::ServiceDiscoveryRequest* MessageBody::release_servicediscoveryrequest() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MessageBody.serviceDiscoveryRequest)
  
  ::com::htsc::mdc::insight::model::ServiceDiscoveryRequest* temp = servicediscoveryrequest_;
  servicediscoveryrequest_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::ServiceDiscoveryRequest* MessageBody::mutable_servicediscoveryrequest() {
  
  if (servicediscoveryrequest_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::ServiceDiscoveryRequest>(GetArenaNoVirtual());
    servicediscoveryrequest_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MessageBody.serviceDiscoveryRequest)
  return servicediscoveryrequest_;
}
inline void MessageBody::set_allocated_servicediscoveryrequest(::com::htsc::mdc::insight::model::ServiceDiscoveryRequest* servicediscoveryrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(servicediscoveryrequest_);
  }
  if (servicediscoveryrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      servicediscoveryrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, servicediscoveryrequest, submessage_arena);
    }
    
  } else {
    
  }
  servicediscoveryrequest_ = servicediscoveryrequest;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MessageBody.serviceDiscoveryRequest)
}

// .com.htsc.mdc.insight.model.ServiceDiscoveryResponse serviceDiscoveryResponse = 14;
inline bool MessageBody::has_servicediscoveryresponse() const {
  return this != internal_default_instance() && servicediscoveryresponse_ != nullptr;
}
inline const ::com::htsc::mdc::insight::model::ServiceDiscoveryResponse& MessageBody::servicediscoveryresponse() const {
  const ::com::htsc::mdc::insight::model::ServiceDiscoveryResponse* p = servicediscoveryresponse_;
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MessageBody.serviceDiscoveryResponse)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::htsc::mdc::insight::model::ServiceDiscoveryResponse*>(
      &::com::htsc::mdc::insight::model::_ServiceDiscoveryResponse_default_instance_);
}
inline ::com::htsc::mdc::insight::model::ServiceDiscoveryResponse* MessageBody::release_servicediscoveryresponse() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MessageBody.serviceDiscoveryResponse)
  
  ::com::htsc::mdc::insight::model::ServiceDiscoveryResponse* temp = servicediscoveryresponse_;
  servicediscoveryresponse_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::ServiceDiscoveryResponse* MessageBody::mutable_servicediscoveryresponse() {
  
  if (servicediscoveryresponse_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::ServiceDiscoveryResponse>(GetArenaNoVirtual());
    servicediscoveryresponse_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MessageBody.serviceDiscoveryResponse)
  return servicediscoveryresponse_;
}
inline void MessageBody::set_allocated_servicediscoveryresponse(::com::htsc::mdc::insight::model::ServiceDiscoveryResponse* servicediscoveryresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(servicediscoveryresponse_);
  }
  if (servicediscoveryresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      servicediscoveryresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, servicediscoveryresponse, submessage_arena);
    }
    
  } else {
    
  }
  servicediscoveryresponse_ = servicediscoveryresponse;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MessageBody.serviceDiscoveryResponse)
}

// .com.htsc.mdc.insight.model.MDSubscribeRequest mdSubscribeRequest = 15;
inline bool MessageBody::has_mdsubscriberequest() const {
  return this != internal_default_instance() && mdsubscriberequest_ != nullptr;
}
inline const ::com::htsc::mdc::insight::model::MDSubscribeRequest& MessageBody::mdsubscriberequest() const {
  const ::com::htsc::mdc::insight::model::MDSubscribeRequest* p = mdsubscriberequest_;
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MessageBody.mdSubscribeRequest)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::htsc::mdc::insight::model::MDSubscribeRequest*>(
      &::com::htsc::mdc::insight::model::_MDSubscribeRequest_default_instance_);
}
inline ::com::htsc::mdc::insight::model::MDSubscribeRequest* MessageBody::release_mdsubscriberequest() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MessageBody.mdSubscribeRequest)
  
  ::com::htsc::mdc::insight::model::MDSubscribeRequest* temp = mdsubscriberequest_;
  mdsubscriberequest_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDSubscribeRequest* MessageBody::mutable_mdsubscriberequest() {
  
  if (mdsubscriberequest_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDSubscribeRequest>(GetArenaNoVirtual());
    mdsubscriberequest_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MessageBody.mdSubscribeRequest)
  return mdsubscriberequest_;
}
inline void MessageBody::set_allocated_mdsubscriberequest(::com::htsc::mdc::insight::model::MDSubscribeRequest* mdsubscriberequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdsubscriberequest_);
  }
  if (mdsubscriberequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      mdsubscriberequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdsubscriberequest, submessage_arena);
    }
    
  } else {
    
  }
  mdsubscriberequest_ = mdsubscriberequest;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MessageBody.mdSubscribeRequest)
}

// .com.htsc.mdc.insight.model.MDSubscribeResponse mdSubscribeResponse = 16;
inline bool MessageBody::has_mdsubscriberesponse() const {
  return this != internal_default_instance() && mdsubscriberesponse_ != nullptr;
}
inline const ::com::htsc::mdc::insight::model::MDSubscribeResponse& MessageBody::mdsubscriberesponse() const {
  const ::com::htsc::mdc::insight::model::MDSubscribeResponse* p = mdsubscriberesponse_;
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MessageBody.mdSubscribeResponse)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::htsc::mdc::insight::model::MDSubscribeResponse*>(
      &::com::htsc::mdc::insight::model::_MDSubscribeResponse_default_instance_);
}
inline ::com::htsc::mdc::insight::model::MDSubscribeResponse* MessageBody::release_mdsubscriberesponse() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MessageBody.mdSubscribeResponse)
  
  ::com::htsc::mdc::insight::model::MDSubscribeResponse* temp = mdsubscriberesponse_;
  mdsubscriberesponse_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDSubscribeResponse* MessageBody::mutable_mdsubscriberesponse() {
  
  if (mdsubscriberesponse_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDSubscribeResponse>(GetArenaNoVirtual());
    mdsubscriberesponse_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MessageBody.mdSubscribeResponse)
  return mdsubscriberesponse_;
}
inline void MessageBody::set_allocated_mdsubscriberesponse(::com::htsc::mdc::insight::model::MDSubscribeResponse* mdsubscriberesponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdsubscriberesponse_);
  }
  if (mdsubscriberesponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      mdsubscriberesponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdsubscriberesponse, submessage_arena);
    }
    
  } else {
    
  }
  mdsubscriberesponse_ = mdsubscriberesponse;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MessageBody.mdSubscribeResponse)
}

// .com.htsc.mdc.insight.model.MarketData pushMarketData = 20;
inline bool MessageBody::has_pushmarketdata() const {
  return this != internal_default_instance() && pushmarketdata_ != nullptr;
}
inline const ::com::htsc::mdc::insight::model::MarketData& MessageBody::pushmarketdata() const {
  const ::com::htsc::mdc::insight::model::MarketData* p = pushmarketdata_;
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MessageBody.pushMarketData)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::htsc::mdc::insight::model::MarketData*>(
      &::com::htsc::mdc::insight::model::_MarketData_default_instance_);
}
inline ::com::htsc::mdc::insight::model::MarketData* MessageBody::release_pushmarketdata() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MessageBody.pushMarketData)
  
  ::com::htsc::mdc::insight::model::MarketData* temp = pushmarketdata_;
  pushmarketdata_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MarketData* MessageBody::mutable_pushmarketdata() {
  
  if (pushmarketdata_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MarketData>(GetArenaNoVirtual());
    pushmarketdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MessageBody.pushMarketData)
  return pushmarketdata_;
}
inline void MessageBody::set_allocated_pushmarketdata(::com::htsc::mdc::insight::model::MarketData* pushmarketdata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(pushmarketdata_);
  }
  if (pushmarketdata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pushmarketdata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pushmarketdata, submessage_arena);
    }
    
  } else {
    
  }
  pushmarketdata_ = pushmarketdata;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MessageBody.pushMarketData)
}

// .com.htsc.mdc.insight.model.MarketDataStream pushMarketDataStream = 21;
inline bool MessageBody::has_pushmarketdatastream() const {
  return this != internal_default_instance() && pushmarketdatastream_ != nullptr;
}
inline const ::com::htsc::mdc::insight::model::MarketDataStream& MessageBody::pushmarketdatastream() const {
  const ::com::htsc::mdc::insight::model::MarketDataStream* p = pushmarketdatastream_;
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MessageBody.pushMarketDataStream)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::htsc::mdc::insight::model::MarketDataStream*>(
      &::com::htsc::mdc::insight::model::_MarketDataStream_default_instance_);
}
inline ::com::htsc::mdc::insight::model::MarketDataStream* MessageBody::release_pushmarketdatastream() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MessageBody.pushMarketDataStream)
  
  ::com::htsc::mdc::insight::model::MarketDataStream* temp = pushmarketdatastream_;
  pushmarketdatastream_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MarketDataStream* MessageBody::mutable_pushmarketdatastream() {
  
  if (pushmarketdatastream_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MarketDataStream>(GetArenaNoVirtual());
    pushmarketdatastream_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MessageBody.pushMarketDataStream)
  return pushmarketdatastream_;
}
inline void MessageBody::set_allocated_pushmarketdatastream(::com::htsc::mdc::insight::model::MarketDataStream* pushmarketdatastream) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(pushmarketdatastream_);
  }
  if (pushmarketdatastream) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pushmarketdatastream = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pushmarketdatastream, submessage_arena);
    }
    
  } else {
    
  }
  pushmarketdatastream_ = pushmarketdatastream;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MessageBody.pushMarketDataStream)
}

// .com.htsc.mdc.insight.model.MDQueryRequest mdQueryRequest = 30;
inline bool MessageBody::has_mdqueryrequest() const {
  return this != internal_default_instance() && mdqueryrequest_ != nullptr;
}
inline const ::com::htsc::mdc::insight::model::MDQueryRequest& MessageBody::mdqueryrequest() const {
  const ::com::htsc::mdc::insight::model::MDQueryRequest* p = mdqueryrequest_;
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MessageBody.mdQueryRequest)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::htsc::mdc::insight::model::MDQueryRequest*>(
      &::com::htsc::mdc::insight::model::_MDQueryRequest_default_instance_);
}
inline ::com::htsc::mdc::insight::model::MDQueryRequest* MessageBody::release_mdqueryrequest() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MessageBody.mdQueryRequest)
  
  ::com::htsc::mdc::insight::model::MDQueryRequest* temp = mdqueryrequest_;
  mdqueryrequest_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDQueryRequest* MessageBody::mutable_mdqueryrequest() {
  
  if (mdqueryrequest_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDQueryRequest>(GetArenaNoVirtual());
    mdqueryrequest_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MessageBody.mdQueryRequest)
  return mdqueryrequest_;
}
inline void MessageBody::set_allocated_mdqueryrequest(::com::htsc::mdc::insight::model::MDQueryRequest* mdqueryrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdqueryrequest_);
  }
  if (mdqueryrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      mdqueryrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdqueryrequest, submessage_arena);
    }
    
  } else {
    
  }
  mdqueryrequest_ = mdqueryrequest;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MessageBody.mdQueryRequest)
}

// .com.htsc.mdc.insight.model.MDQueryResponse mdQueryResponse = 31;
inline bool MessageBody::has_mdqueryresponse() const {
  return this != internal_default_instance() && mdqueryresponse_ != nullptr;
}
inline const ::com::htsc::mdc::insight::model::MDQueryResponse& MessageBody::mdqueryresponse() const {
  const ::com::htsc::mdc::insight::model::MDQueryResponse* p = mdqueryresponse_;
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MessageBody.mdQueryResponse)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::htsc::mdc::insight::model::MDQueryResponse*>(
      &::com::htsc::mdc::insight::model::_MDQueryResponse_default_instance_);
}
inline ::com::htsc::mdc::insight::model::MDQueryResponse* MessageBody::release_mdqueryresponse() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MessageBody.mdQueryResponse)
  
  ::com::htsc::mdc::insight::model::MDQueryResponse* temp = mdqueryresponse_;
  mdqueryresponse_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDQueryResponse* MessageBody::mutable_mdqueryresponse() {
  
  if (mdqueryresponse_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDQueryResponse>(GetArenaNoVirtual());
    mdqueryresponse_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MessageBody.mdQueryResponse)
  return mdqueryresponse_;
}
inline void MessageBody::set_allocated_mdqueryresponse(::com::htsc::mdc::insight::model::MDQueryResponse* mdqueryresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdqueryresponse_);
  }
  if (mdqueryresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      mdqueryresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdqueryresponse, submessage_arena);
    }
    
  } else {
    
  }
  mdqueryresponse_ = mdqueryresponse;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MessageBody.mdQueryResponse)
}

// .com.htsc.mdc.insight.model.PlaybackRequest playbackRequest = 32;
inline bool MessageBody::has_playbackrequest() const {
  return this != internal_default_instance() && playbackrequest_ != nullptr;
}
inline const ::com::htsc::mdc::insight::model::PlaybackRequest& MessageBody::playbackrequest() const {
  const ::com::htsc::mdc::insight::model::PlaybackRequest* p = playbackrequest_;
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MessageBody.playbackRequest)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::htsc::mdc::insight::model::PlaybackRequest*>(
      &::com::htsc::mdc::insight::model::_PlaybackRequest_default_instance_);
}
inline ::com::htsc::mdc::insight::model::PlaybackRequest* MessageBody::release_playbackrequest() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MessageBody.playbackRequest)
  
  ::com::htsc::mdc::insight::model::PlaybackRequest* temp = playbackrequest_;
  playbackrequest_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::PlaybackRequest* MessageBody::mutable_playbackrequest() {
  
  if (playbackrequest_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::PlaybackRequest>(GetArenaNoVirtual());
    playbackrequest_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MessageBody.playbackRequest)
  return playbackrequest_;
}
inline void MessageBody::set_allocated_playbackrequest(::com::htsc::mdc::insight::model::PlaybackRequest* playbackrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(playbackrequest_);
  }
  if (playbackrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      playbackrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, playbackrequest, submessage_arena);
    }
    
  } else {
    
  }
  playbackrequest_ = playbackrequest;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MessageBody.playbackRequest)
}

// .com.htsc.mdc.insight.model.PlaybackResponse playbackResponse = 33;
inline bool MessageBody::has_playbackresponse() const {
  return this != internal_default_instance() && playbackresponse_ != nullptr;
}
inline const ::com::htsc::mdc::insight::model::PlaybackResponse& MessageBody::playbackresponse() const {
  const ::com::htsc::mdc::insight::model::PlaybackResponse* p = playbackresponse_;
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MessageBody.playbackResponse)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::htsc::mdc::insight::model::PlaybackResponse*>(
      &::com::htsc::mdc::insight::model::_PlaybackResponse_default_instance_);
}
inline ::com::htsc::mdc::insight::model::PlaybackResponse* MessageBody::release_playbackresponse() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MessageBody.playbackResponse)
  
  ::com::htsc::mdc::insight::model::PlaybackResponse* temp = playbackresponse_;
  playbackresponse_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::PlaybackResponse* MessageBody::mutable_playbackresponse() {
  
  if (playbackresponse_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::PlaybackResponse>(GetArenaNoVirtual());
    playbackresponse_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MessageBody.playbackResponse)
  return playbackresponse_;
}
inline void MessageBody::set_allocated_playbackresponse(::com::htsc::mdc::insight::model::PlaybackResponse* playbackresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(playbackresponse_);
  }
  if (playbackresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      playbackresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, playbackresponse, submessage_arena);
    }
    
  } else {
    
  }
  playbackresponse_ = playbackresponse;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MessageBody.playbackResponse)
}

// .com.htsc.mdc.insight.model.PlaybackControlRequest playbackControlRequest = 34;
inline bool MessageBody::has_playbackcontrolrequest() const {
  return this != internal_default_instance() && playbackcontrolrequest_ != nullptr;
}
inline const ::com::htsc::mdc::insight::model::PlaybackControlRequest& MessageBody::playbackcontrolrequest() const {
  const ::com::htsc::mdc::insight::model::PlaybackControlRequest* p = playbackcontrolrequest_;
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MessageBody.playbackControlRequest)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::htsc::mdc::insight::model::PlaybackControlRequest*>(
      &::com::htsc::mdc::insight::model::_PlaybackControlRequest_default_instance_);
}
inline ::com::htsc::mdc::insight::model::PlaybackControlRequest* MessageBody::release_playbackcontrolrequest() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MessageBody.playbackControlRequest)
  
  ::com::htsc::mdc::insight::model::PlaybackControlRequest* temp = playbackcontrolrequest_;
  playbackcontrolrequest_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::PlaybackControlRequest* MessageBody::mutable_playbackcontrolrequest() {
  
  if (playbackcontrolrequest_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::PlaybackControlRequest>(GetArenaNoVirtual());
    playbackcontrolrequest_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MessageBody.playbackControlRequest)
  return playbackcontrolrequest_;
}
inline void MessageBody::set_allocated_playbackcontrolrequest(::com::htsc::mdc::insight::model::PlaybackControlRequest* playbackcontrolrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(playbackcontrolrequest_);
  }
  if (playbackcontrolrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      playbackcontrolrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, playbackcontrolrequest, submessage_arena);
    }
    
  } else {
    
  }
  playbackcontrolrequest_ = playbackcontrolrequest;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MessageBody.playbackControlRequest)
}

// .com.htsc.mdc.insight.model.PlaybackControlResponse playbackControlResponse = 35;
inline bool MessageBody::has_playbackcontrolresponse() const {
  return this != internal_default_instance() && playbackcontrolresponse_ != nullptr;
}
inline const ::com::htsc::mdc::insight::model::PlaybackControlResponse& MessageBody::playbackcontrolresponse() const {
  const ::com::htsc::mdc::insight::model::PlaybackControlResponse* p = playbackcontrolresponse_;
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MessageBody.playbackControlResponse)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::htsc::mdc::insight::model::PlaybackControlResponse*>(
      &::com::htsc::mdc::insight::model::_PlaybackControlResponse_default_instance_);
}
inline ::com::htsc::mdc::insight::model::PlaybackControlResponse* MessageBody::release_playbackcontrolresponse() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MessageBody.playbackControlResponse)
  
  ::com::htsc::mdc::insight::model::PlaybackControlResponse* temp = playbackcontrolresponse_;
  playbackcontrolresponse_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::PlaybackControlResponse* MessageBody::mutable_playbackcontrolresponse() {
  
  if (playbackcontrolresponse_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::PlaybackControlResponse>(GetArenaNoVirtual());
    playbackcontrolresponse_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MessageBody.playbackControlResponse)
  return playbackcontrolresponse_;
}
inline void MessageBody::set_allocated_playbackcontrolresponse(::com::htsc::mdc::insight::model::PlaybackControlResponse* playbackcontrolresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(playbackcontrolresponse_);
  }
  if (playbackcontrolresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      playbackcontrolresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, playbackcontrolresponse, submessage_arena);
    }
    
  } else {
    
  }
  playbackcontrolresponse_ = playbackcontrolresponse;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MessageBody.playbackControlResponse)
}

// .com.htsc.mdc.insight.model.PlaybackStatusRequest playbackStatusRequest = 36;
inline bool MessageBody::has_playbackstatusrequest() const {
  return this != internal_default_instance() && playbackstatusrequest_ != nullptr;
}
inline const ::com::htsc::mdc::insight::model::PlaybackStatusRequest& MessageBody::playbackstatusrequest() const {
  const ::com::htsc::mdc::insight::model::PlaybackStatusRequest* p = playbackstatusrequest_;
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MessageBody.playbackStatusRequest)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::htsc::mdc::insight::model::PlaybackStatusRequest*>(
      &::com::htsc::mdc::insight::model::_PlaybackStatusRequest_default_instance_);
}
inline ::com::htsc::mdc::insight::model::PlaybackStatusRequest* MessageBody::release_playbackstatusrequest() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MessageBody.playbackStatusRequest)
  
  ::com::htsc::mdc::insight::model::PlaybackStatusRequest* temp = playbackstatusrequest_;
  playbackstatusrequest_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::PlaybackStatusRequest* MessageBody::mutable_playbackstatusrequest() {
  
  if (playbackstatusrequest_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::PlaybackStatusRequest>(GetArenaNoVirtual());
    playbackstatusrequest_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MessageBody.playbackStatusRequest)
  return playbackstatusrequest_;
}
inline void MessageBody::set_allocated_playbackstatusrequest(::com::htsc::mdc::insight::model::PlaybackStatusRequest* playbackstatusrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(playbackstatusrequest_);
  }
  if (playbackstatusrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      playbackstatusrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, playbackstatusrequest, submessage_arena);
    }
    
  } else {
    
  }
  playbackstatusrequest_ = playbackstatusrequest;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MessageBody.playbackStatusRequest)
}

// .com.htsc.mdc.insight.model.PlaybackStatus playbackStatus = 37;
inline bool MessageBody::has_playbackstatus() const {
  return this != internal_default_instance() && playbackstatus_ != nullptr;
}
inline const ::com::htsc::mdc::insight::model::PlaybackStatus& MessageBody::playbackstatus() const {
  const ::com::htsc::mdc::insight::model::PlaybackStatus* p = playbackstatus_;
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MessageBody.playbackStatus)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::htsc::mdc::insight::model::PlaybackStatus*>(
      &::com::htsc::mdc::insight::model::_PlaybackStatus_default_instance_);
}
inline ::com::htsc::mdc::insight::model::PlaybackStatus* MessageBody::release_playbackstatus() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MessageBody.playbackStatus)
  
  ::com::htsc::mdc::insight::model::PlaybackStatus* temp = playbackstatus_;
  playbackstatus_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::PlaybackStatus* MessageBody::mutable_playbackstatus() {
  
  if (playbackstatus_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::PlaybackStatus>(GetArenaNoVirtual());
    playbackstatus_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MessageBody.playbackStatus)
  return playbackstatus_;
}
inline void MessageBody::set_allocated_playbackstatus(::com::htsc::mdc::insight::model::PlaybackStatus* playbackstatus) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(playbackstatus_);
  }
  if (playbackstatus) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      playbackstatus = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, playbackstatus, submessage_arena);
    }
    
  } else {
    
  }
  playbackstatus_ = playbackstatus;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MessageBody.playbackStatus)
}

// .com.htsc.mdc.insight.model.PlaybackPayload playbackPayload = 38;
inline bool MessageBody::has_playbackpayload() const {
  return this != internal_default_instance() && playbackpayload_ != nullptr;
}
inline const ::com::htsc::mdc::insight::model::PlaybackPayload& MessageBody::playbackpayload() const {
  const ::com::htsc::mdc::insight::model::PlaybackPayload* p = playbackpayload_;
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MessageBody.playbackPayload)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::htsc::mdc::insight::model::PlaybackPayload*>(
      &::com::htsc::mdc::insight::model::_PlaybackPayload_default_instance_);
}
inline ::com::htsc::mdc::insight::model::PlaybackPayload* MessageBody::release_playbackpayload() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MessageBody.playbackPayload)
  
  ::com::htsc::mdc::insight::model::PlaybackPayload* temp = playbackpayload_;
  playbackpayload_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::PlaybackPayload* MessageBody::mutable_playbackpayload() {
  
  if (playbackpayload_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::PlaybackPayload>(GetArenaNoVirtual());
    playbackpayload_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MessageBody.playbackPayload)
  return playbackpayload_;
}
inline void MessageBody::set_allocated_playbackpayload(::com::htsc::mdc::insight::model::PlaybackPayload* playbackpayload) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(playbackpayload_);
  }
  if (playbackpayload) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      playbackpayload = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, playbackpayload, submessage_arena);
    }
    
  } else {
    
  }
  playbackpayload_ = playbackpayload;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MessageBody.playbackPayload)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_MessageBody_2eproto

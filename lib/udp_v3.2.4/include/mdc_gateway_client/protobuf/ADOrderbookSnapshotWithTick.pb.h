// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ADOrderbookSnapshotWithTick.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ADOrderbookSnapshotWithTick_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ADOrderbookSnapshotWithTick_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3008000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3008000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "ESecurityType.pb.h"
#include "ESecurityIDSource.pb.h"
#include "MDStock.pb.h"
#include "ADOrderbookSnapshot.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ADOrderbookSnapshotWithTick_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ADOrderbookSnapshotWithTick_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ADOrderbookSnapshotWithTick_2eproto;
namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {
class ADOrderbookSnapshotWithTick;
class ADOrderbookSnapshotWithTickDefaultTypeInternal;
extern ADOrderbookSnapshotWithTickDefaultTypeInternal _ADOrderbookSnapshotWithTick_default_instance_;
}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> ::com::htsc::mdc::insight::model::ADOrderbookSnapshotWithTick* Arena::CreateMaybeMessage<::com::htsc::mdc::insight::model::ADOrderbookSnapshotWithTick>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {

// ===================================================================

class ADOrderbookSnapshotWithTick :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick) */ {
 public:
  ADOrderbookSnapshotWithTick();
  virtual ~ADOrderbookSnapshotWithTick();

  ADOrderbookSnapshotWithTick(const ADOrderbookSnapshotWithTick& from);
  ADOrderbookSnapshotWithTick(ADOrderbookSnapshotWithTick&& from) noexcept
    : ADOrderbookSnapshotWithTick() {
    *this = ::std::move(from);
  }

  inline ADOrderbookSnapshotWithTick& operator=(const ADOrderbookSnapshotWithTick& from) {
    CopyFrom(from);
    return *this;
  }
  inline ADOrderbookSnapshotWithTick& operator=(ADOrderbookSnapshotWithTick&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ADOrderbookSnapshotWithTick& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ADOrderbookSnapshotWithTick* internal_default_instance() {
    return reinterpret_cast<const ADOrderbookSnapshotWithTick*>(
               &_ADOrderbookSnapshotWithTick_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ADOrderbookSnapshotWithTick* other);
  friend void swap(ADOrderbookSnapshotWithTick& a, ADOrderbookSnapshotWithTick& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ADOrderbookSnapshotWithTick* New() const final {
    return CreateMaybeMessage<ADOrderbookSnapshotWithTick>(nullptr);
  }

  ADOrderbookSnapshotWithTick* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ADOrderbookSnapshotWithTick>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ADOrderbookSnapshotWithTick& from);
  void MergeFrom(const ADOrderbookSnapshotWithTick& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ADOrderbookSnapshotWithTick* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ADOrderbookSnapshotWithTick_2eproto);
    return ::descriptor_table_ADOrderbookSnapshotWithTick_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string HTSCSecurityID = 1;
  void clear_htscsecurityid();
  static const int kHTSCSecurityIDFieldNumber = 1;
  const std::string& htscsecurityid() const;
  void set_htscsecurityid(const std::string& value);
  void set_htscsecurityid(std::string&& value);
  void set_htscsecurityid(const char* value);
  void set_htscsecurityid(const char* value, size_t size);
  std::string* mutable_htscsecurityid();
  std::string* release_htscsecurityid();
  void set_allocated_htscsecurityid(std::string* htscsecurityid);

  // .com.htsc.mdc.insight.model.ADOrderbookSnapshot orderbookSnapshot = 10;
  bool has_orderbooksnapshot() const;
  void clear_orderbooksnapshot();
  static const int kOrderbookSnapshotFieldNumber = 10;
  const ::com::htsc::mdc::insight::model::ADOrderbookSnapshot& orderbooksnapshot() const;
  ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* release_orderbooksnapshot();
  ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* mutable_orderbooksnapshot();
  void set_allocated_orderbooksnapshot(::com::htsc::mdc::insight::model::ADOrderbookSnapshot* orderbooksnapshot);

  // .com.htsc.mdc.insight.model.MDStock mdStock = 11;
  bool has_mdstock() const;
  void clear_mdstock();
  static const int kMdStockFieldNumber = 11;
  const ::com::htsc::mdc::insight::model::MDStock& mdstock() const;
  ::com::htsc::mdc::insight::model::MDStock* release_mdstock();
  ::com::htsc::mdc::insight::model::MDStock* mutable_mdstock();
  void set_allocated_mdstock(::com::htsc::mdc::insight::model::MDStock* mdstock);

  // int32 MDDate = 2;
  void clear_mddate();
  static const int kMDDateFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int32 mddate() const;
  void set_mddate(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 MDTime = 3;
  void clear_mdtime();
  static const int kMDTimeFieldNumber = 3;
  ::PROTOBUF_NAMESPACE_ID::int32 mdtime() const;
  void set_mdtime(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int64 DataTimestamp = 4;
  void clear_datatimestamp();
  static const int kDataTimestampFieldNumber = 4;
  ::PROTOBUF_NAMESPACE_ID::int64 datatimestamp() const;
  void set_datatimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);

  // .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 5;
  void clear_securityidsource();
  static const int kSecurityIDSourceFieldNumber = 5;
  ::com::htsc::mdc::model::ESecurityIDSource securityidsource() const;
  void set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value);

  // .com.htsc.mdc.model.ESecurityType securityType = 6;
  void clear_securitytype();
  static const int kSecurityTypeFieldNumber = 6;
  ::com::htsc::mdc::model::ESecurityType securitytype() const;
  void set_securitytype(::com::htsc::mdc::model::ESecurityType value);

  // int32 ExchangeDate = 7;
  void clear_exchangedate();
  static const int kExchangeDateFieldNumber = 7;
  ::PROTOBUF_NAMESPACE_ID::int32 exchangedate() const;
  void set_exchangedate(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 ExchangeTime = 8;
  void clear_exchangetime();
  static const int kExchangeTimeFieldNumber = 8;
  ::PROTOBUF_NAMESPACE_ID::int32 exchangetime() const;
  void set_exchangetime(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 DataMultiplePowerOf10 = 12;
  void clear_datamultiplepowerof10();
  static const int kDataMultiplePowerOf10FieldNumber = 12;
  ::PROTOBUF_NAMESPACE_ID::int32 datamultiplepowerof10() const;
  void set_datamultiplepowerof10(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr htscsecurityid_;
  ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* orderbooksnapshot_;
  ::com::htsc::mdc::insight::model::MDStock* mdstock_;
  ::PROTOBUF_NAMESPACE_ID::int32 mddate_;
  ::PROTOBUF_NAMESPACE_ID::int32 mdtime_;
  ::PROTOBUF_NAMESPACE_ID::int64 datatimestamp_;
  int securityidsource_;
  int securitytype_;
  ::PROTOBUF_NAMESPACE_ID::int32 exchangedate_;
  ::PROTOBUF_NAMESPACE_ID::int32 exchangetime_;
  ::PROTOBUF_NAMESPACE_ID::int32 datamultiplepowerof10_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ADOrderbookSnapshotWithTick_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ADOrderbookSnapshotWithTick

// string HTSCSecurityID = 1;
inline void ADOrderbookSnapshotWithTick::clear_htscsecurityid() {
  htscsecurityid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ADOrderbookSnapshotWithTick::htscsecurityid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.HTSCSecurityID)
  return htscsecurityid_.GetNoArena();
}
inline void ADOrderbookSnapshotWithTick::set_htscsecurityid(const std::string& value) {
  
  htscsecurityid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.HTSCSecurityID)
}
inline void ADOrderbookSnapshotWithTick::set_htscsecurityid(std::string&& value) {
  
  htscsecurityid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.HTSCSecurityID)
}
inline void ADOrderbookSnapshotWithTick::set_htscsecurityid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  htscsecurityid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.HTSCSecurityID)
}
inline void ADOrderbookSnapshotWithTick::set_htscsecurityid(const char* value, size_t size) {
  
  htscsecurityid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.HTSCSecurityID)
}
inline std::string* ADOrderbookSnapshotWithTick::mutable_htscsecurityid() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.HTSCSecurityID)
  return htscsecurityid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ADOrderbookSnapshotWithTick::release_htscsecurityid() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.HTSCSecurityID)
  
  return htscsecurityid_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ADOrderbookSnapshotWithTick::set_allocated_htscsecurityid(std::string* htscsecurityid) {
  if (htscsecurityid != nullptr) {
    
  } else {
    
  }
  htscsecurityid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), htscsecurityid);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.HTSCSecurityID)
}

// int32 MDDate = 2;
inline void ADOrderbookSnapshotWithTick::clear_mddate() {
  mddate_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ADOrderbookSnapshotWithTick::mddate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.MDDate)
  return mddate_;
}
inline void ADOrderbookSnapshotWithTick::set_mddate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  mddate_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.MDDate)
}

// int32 MDTime = 3;
inline void ADOrderbookSnapshotWithTick::clear_mdtime() {
  mdtime_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ADOrderbookSnapshotWithTick::mdtime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.MDTime)
  return mdtime_;
}
inline void ADOrderbookSnapshotWithTick::set_mdtime(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  mdtime_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.MDTime)
}

// int64 DataTimestamp = 4;
inline void ADOrderbookSnapshotWithTick::clear_datatimestamp() {
  datatimestamp_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ADOrderbookSnapshotWithTick::datatimestamp() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.DataTimestamp)
  return datatimestamp_;
}
inline void ADOrderbookSnapshotWithTick::set_datatimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  datatimestamp_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.DataTimestamp)
}

// .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 5;
inline void ADOrderbookSnapshotWithTick::clear_securityidsource() {
  securityidsource_ = 0;
}
inline ::com::htsc::mdc::model::ESecurityIDSource ADOrderbookSnapshotWithTick::securityidsource() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.securityIDSource)
  return static_cast< ::com::htsc::mdc::model::ESecurityIDSource >(securityidsource_);
}
inline void ADOrderbookSnapshotWithTick::set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value) {
  
  securityidsource_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.securityIDSource)
}

// .com.htsc.mdc.model.ESecurityType securityType = 6;
inline void ADOrderbookSnapshotWithTick::clear_securitytype() {
  securitytype_ = 0;
}
inline ::com::htsc::mdc::model::ESecurityType ADOrderbookSnapshotWithTick::securitytype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.securityType)
  return static_cast< ::com::htsc::mdc::model::ESecurityType >(securitytype_);
}
inline void ADOrderbookSnapshotWithTick::set_securitytype(::com::htsc::mdc::model::ESecurityType value) {
  
  securitytype_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.securityType)
}

// int32 ExchangeDate = 7;
inline void ADOrderbookSnapshotWithTick::clear_exchangedate() {
  exchangedate_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ADOrderbookSnapshotWithTick::exchangedate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.ExchangeDate)
  return exchangedate_;
}
inline void ADOrderbookSnapshotWithTick::set_exchangedate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  exchangedate_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.ExchangeDate)
}

// int32 ExchangeTime = 8;
inline void ADOrderbookSnapshotWithTick::clear_exchangetime() {
  exchangetime_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ADOrderbookSnapshotWithTick::exchangetime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.ExchangeTime)
  return exchangetime_;
}
inline void ADOrderbookSnapshotWithTick::set_exchangetime(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  exchangetime_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.ExchangeTime)
}

// .com.htsc.mdc.insight.model.ADOrderbookSnapshot orderbookSnapshot = 10;
inline bool ADOrderbookSnapshotWithTick::has_orderbooksnapshot() const {
  return this != internal_default_instance() && orderbooksnapshot_ != nullptr;
}
inline const ::com::htsc::mdc::insight::model::ADOrderbookSnapshot& ADOrderbookSnapshotWithTick::orderbooksnapshot() const {
  const ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* p = orderbooksnapshot_;
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.orderbookSnapshot)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::htsc::mdc::insight::model::ADOrderbookSnapshot*>(
      &::com::htsc::mdc::insight::model::_ADOrderbookSnapshot_default_instance_);
}
inline ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* ADOrderbookSnapshotWithTick::release_orderbooksnapshot() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.orderbookSnapshot)
  
  ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* temp = orderbooksnapshot_;
  orderbooksnapshot_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* ADOrderbookSnapshotWithTick::mutable_orderbooksnapshot() {
  
  if (orderbooksnapshot_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::ADOrderbookSnapshot>(GetArenaNoVirtual());
    orderbooksnapshot_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.orderbookSnapshot)
  return orderbooksnapshot_;
}
inline void ADOrderbookSnapshotWithTick::set_allocated_orderbooksnapshot(::com::htsc::mdc::insight::model::ADOrderbookSnapshot* orderbooksnapshot) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(orderbooksnapshot_);
  }
  if (orderbooksnapshot) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      orderbooksnapshot = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, orderbooksnapshot, submessage_arena);
    }
    
  } else {
    
  }
  orderbooksnapshot_ = orderbooksnapshot;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.orderbookSnapshot)
}

// .com.htsc.mdc.insight.model.MDStock mdStock = 11;
inline bool ADOrderbookSnapshotWithTick::has_mdstock() const {
  return this != internal_default_instance() && mdstock_ != nullptr;
}
inline const ::com::htsc::mdc::insight::model::MDStock& ADOrderbookSnapshotWithTick::mdstock() const {
  const ::com::htsc::mdc::insight::model::MDStock* p = mdstock_;
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.mdStock)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::htsc::mdc::insight::model::MDStock*>(
      &::com::htsc::mdc::insight::model::_MDStock_default_instance_);
}
inline ::com::htsc::mdc::insight::model::MDStock* ADOrderbookSnapshotWithTick::release_mdstock() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.mdStock)
  
  ::com::htsc::mdc::insight::model::MDStock* temp = mdstock_;
  mdstock_ = nullptr;
  return temp;
}
inline ::com::htsc::mdc::insight::model::MDStock* ADOrderbookSnapshotWithTick::mutable_mdstock() {
  
  if (mdstock_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::htsc::mdc::insight::model::MDStock>(GetArenaNoVirtual());
    mdstock_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.mdStock)
  return mdstock_;
}
inline void ADOrderbookSnapshotWithTick::set_allocated_mdstock(::com::htsc::mdc::insight::model::MDStock* mdstock) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(mdstock_);
  }
  if (mdstock) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      mdstock = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mdstock, submessage_arena);
    }
    
  } else {
    
  }
  mdstock_ = mdstock;
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.mdStock)
}

// int32 DataMultiplePowerOf10 = 12;
inline void ADOrderbookSnapshotWithTick::clear_datamultiplepowerof10() {
  datamultiplepowerof10_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ADOrderbookSnapshotWithTick::datamultiplepowerof10() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.DataMultiplePowerOf10)
  return datamultiplepowerof10_;
}
inline void ADOrderbookSnapshotWithTick::set_datamultiplepowerof10(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  datamultiplepowerof10_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshotWithTick.DataMultiplePowerOf10)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ADOrderbookSnapshotWithTick_2eproto

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MDSecurityLending.proto

#include "MDSecurityLending.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_MDSecurityLending_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ADEstimatedSecurityLendingEntry_MDSecurityLending_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_MDSecurityLending_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ADSecurityLendingEntry_MDSecurityLending_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_MDSecurityLending_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ADValidSecurityLendingEntry_MDSecurityLending_2eproto;
namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {
class MDSecurityLendingDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MDSecurityLending> _instance;
} _MDSecurityLending_default_instance_;
class ADValidSecurityLendingEntryDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ADValidSecurityLendingEntry> _instance;
} _ADValidSecurityLendingEntry_default_instance_;
class ADSecurityLendingEntryDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ADSecurityLendingEntry> _instance;
} _ADSecurityLendingEntry_default_instance_;
class ADEstimatedSecurityLendingEntryDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ADEstimatedSecurityLendingEntry> _instance;
} _ADEstimatedSecurityLendingEntry_default_instance_;
}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com
static void InitDefaultsscc_info_ADEstimatedSecurityLendingEntry_MDSecurityLending_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::htsc::mdc::insight::model::_ADEstimatedSecurityLendingEntry_default_instance_;
    new (ptr) ::com::htsc::mdc::insight::model::ADEstimatedSecurityLendingEntry();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::htsc::mdc::insight::model::ADEstimatedSecurityLendingEntry::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ADEstimatedSecurityLendingEntry_MDSecurityLending_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ADEstimatedSecurityLendingEntry_MDSecurityLending_2eproto}, {}};

static void InitDefaultsscc_info_ADSecurityLendingEntry_MDSecurityLending_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::htsc::mdc::insight::model::_ADSecurityLendingEntry_default_instance_;
    new (ptr) ::com::htsc::mdc::insight::model::ADSecurityLendingEntry();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::htsc::mdc::insight::model::ADSecurityLendingEntry::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ADSecurityLendingEntry_MDSecurityLending_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ADSecurityLendingEntry_MDSecurityLending_2eproto}, {}};

static void InitDefaultsscc_info_ADValidSecurityLendingEntry_MDSecurityLending_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::htsc::mdc::insight::model::_ADValidSecurityLendingEntry_default_instance_;
    new (ptr) ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ADValidSecurityLendingEntry_MDSecurityLending_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ADValidSecurityLendingEntry_MDSecurityLending_2eproto}, {}};

static void InitDefaultsscc_info_MDSecurityLending_MDSecurityLending_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::htsc::mdc::insight::model::_MDSecurityLending_default_instance_;
    new (ptr) ::com::htsc::mdc::insight::model::MDSecurityLending();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::htsc::mdc::insight::model::MDSecurityLending::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_MDSecurityLending_MDSecurityLending_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsscc_info_MDSecurityLending_MDSecurityLending_2eproto}, {
      &scc_info_ADValidSecurityLendingEntry_MDSecurityLending_2eproto.base,
      &scc_info_ADSecurityLendingEntry_MDSecurityLending_2eproto.base,
      &scc_info_ADEstimatedSecurityLendingEntry_MDSecurityLending_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_MDSecurityLending_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_MDSecurityLending_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_MDSecurityLending_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_MDSecurityLending_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, htscsecurityid_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, mddate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, mdtime_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, datatimestamp_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, tradingphasecode_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, securityidsource_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, securitytype_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, preweightedrate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, prehighrate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, prelowrate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, prehtscvolume_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, premarketvolume_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, weightedrate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, highrate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, lowrate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, htscvolume_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, marketvolume_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, bestborrowrate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, bestlendrate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, validborrows_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, validalends_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, validblends_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, validclends_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, alends_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, blends_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, clends_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, validreservationborrows_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, validreservationlends_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, reservationborrows_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, reservationlends_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, validotclends_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, bestreservationborrowrate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, bestreservationlendrate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, validlendamount_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, validalendamount_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, validblendamount_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, htscborrowamount_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, htscborrowrate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, bestloanrate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, htscborrowtradevolume_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, htscborrowweightedrate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, prehtscborrowtradevolume_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, prehtscborrowweightedrate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, htscborrows_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, loans_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, datamultiplepowerof10_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::MDSecurityLending, externallends_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry, level_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry, rate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry, term_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry, amount_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry, htscprovided_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADSecurityLendingEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADSecurityLendingEntry, level_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADSecurityLendingEntry, rate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADSecurityLendingEntry, term_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADSecurityLendingEntry, totalamount_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADSecurityLendingEntry, matchedamount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADEstimatedSecurityLendingEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADEstimatedSecurityLendingEntry, level_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADEstimatedSecurityLendingEntry, rate_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADEstimatedSecurityLendingEntry, term_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADEstimatedSecurityLendingEntry, amount_),
  PROTOBUF_FIELD_OFFSET(::com::htsc::mdc::insight::model::ADEstimatedSecurityLendingEntry, postponeprobability_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::com::htsc::mdc::insight::model::MDSecurityLending)},
  { 52, -1, sizeof(::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry)},
  { 62, -1, sizeof(::com::htsc::mdc::insight::model::ADSecurityLendingEntry)},
  { 72, -1, sizeof(::com::htsc::mdc::insight::model::ADEstimatedSecurityLendingEntry)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::htsc::mdc::insight::model::_MDSecurityLending_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::htsc::mdc::insight::model::_ADValidSecurityLendingEntry_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::htsc::mdc::insight::model::_ADSecurityLendingEntry_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::htsc::mdc::insight::model::_ADEstimatedSecurityLendingEntry_default_instance_),
};

const char descriptor_table_protodef_MDSecurityLending_2eproto[] =
  "\n\027MDSecurityLending.proto\022\032com.htsc.mdc."
  "insight.model\032\027ESecurityIDSource.proto\032\023"
  "ESecurityType.proto\"\204\020\n\021MDSecurityLendin"
  "g\022\026\n\016HTSCSecurityID\030\001 \001(\t\022\016\n\006MDDate\030\002 \001("
  "\005\022\016\n\006MDTime\030\003 \001(\005\022\025\n\rDataTimestamp\030\004 \001(\003"
  "\022\030\n\020TradingPhaseCode\030\005 \001(\t\022\?\n\020securityID"
  "Source\030\006 \001(\0162%.com.htsc.mdc.model.ESecur"
  "ityIDSource\0227\n\014securityType\030\007 \001(\0162!.com."
  "htsc.mdc.model.ESecurityType\022\027\n\017PreWeigh"
  "tedRate\030\n \001(\003\022\023\n\013PreHighRate\030\013 \001(\003\022\022\n\nPr"
  "eLowRate\030\014 \001(\003\022\025\n\rPreHtscVolume\030\r \001(\003\022\027\n"
  "\017PreMarketVolume\030\016 \001(\003\022\024\n\014WeightedRate\030\017"
  " \001(\003\022\020\n\010HighRate\030\020 \001(\003\022\017\n\007LowRate\030\021 \001(\003\022"
  "\022\n\nHtscVolume\030\022 \001(\003\022\024\n\014MarketVolume\030\023 \001("
  "\003\022\026\n\016BestBorrowRate\030\024 \001(\003\022\024\n\014BestLendRat"
  "e\030\025 \001(\003\022M\n\014ValidBorrows\030\033 \003(\01327.com.htsc"
  ".mdc.insight.model.ADValidSecurityLendin"
  "gEntry\022L\n\013ValidALends\030\034 \003(\01327.com.htsc.m"
  "dc.insight.model.ADValidSecurityLendingE"
  "ntry\022L\n\013ValidBLends\030\035 \003(\01327.com.htsc.mdc"
  ".insight.model.ADValidSecurityLendingEnt"
  "ry\022L\n\013ValidCLends\030\036 \003(\01327.com.htsc.mdc.i"
  "nsight.model.ADValidSecurityLendingEntry"
  "\022B\n\006ALends\030\037 \003(\01322.com.htsc.mdc.insight."
  "model.ADSecurityLendingEntry\022B\n\006BLends\030 "
  " \003(\01322.com.htsc.mdc.insight.model.ADSecu"
  "rityLendingEntry\022B\n\006CLends\030! \003(\01322.com.h"
  "tsc.mdc.insight.model.ADSecurityLendingE"
  "ntry\022X\n\027ValidReservationBorrows\030\" \003(\01327."
  "com.htsc.mdc.insight.model.ADValidSecuri"
  "tyLendingEntry\022V\n\025ValidReservationLends\030"
  "# \003(\01327.com.htsc.mdc.insight.model.ADVal"
  "idSecurityLendingEntry\022N\n\022ReservationBor"
  "rows\030$ \003(\01322.com.htsc.mdc.insight.model."
  "ADSecurityLendingEntry\022L\n\020ReservationLen"
  "ds\030% \003(\01322.com.htsc.mdc.insight.model.AD"
  "SecurityLendingEntry\022N\n\rValidOtcLends\030& "
  "\003(\01327.com.htsc.mdc.insight.model.ADValid"
  "SecurityLendingEntry\022!\n\031BestReservationB"
  "orrowRate\030\' \001(\003\022\037\n\027BestReservationLendRa"
  "te\030( \001(\003\022\027\n\017ValidLendAmount\030) \001(\003\022\030\n\020Val"
  "idALendAmount\030* \001(\003\022\030\n\020ValidBLendAmount\030"
  "+ \001(\003\022\030\n\020HtscBorrowAmount\030, \001(\003\022\026\n\016HtscB"
  "orrowRate\030- \001(\003\022\024\n\014BestLoanRate\030. \001(\003\022\035\n"
  "\025HtscBorrowTradeVolume\030/ \001(\003\022\036\n\026HtscBorr"
  "owWeightedRate\0300 \001(\003\022 \n\030PreHtscBorrowTra"
  "deVolume\0301 \001(\003\022!\n\031PreHtscBorrowWeightedR"
  "ate\0302 \001(\003\022L\n\013HtscBorrows\0303 \003(\01327.com.hts"
  "c.mdc.insight.model.ADValidSecurityLendi"
  "ngEntry\022F\n\005Loans\0304 \003(\01327.com.htsc.mdc.in"
  "sight.model.ADValidSecurityLendingEntry\022"
  "\035\n\025DataMultiplePowerOf10\0305 \001(\005\022R\n\rExtern"
  "alLends\0306 \003(\0132;.com.htsc.mdc.insight.mod"
  "el.ADEstimatedSecurityLendingEntry\"n\n\033AD"
  "ValidSecurityLendingEntry\022\r\n\005Level\030\001 \001(\005"
  "\022\014\n\004Rate\030\002 \001(\003\022\014\n\004Term\030\003 \001(\005\022\016\n\006Amount\030\004"
  " \001(\003\022\024\n\014HtscProvided\030\005 \001(\010\"o\n\026ADSecurity"
  "LendingEntry\022\r\n\005Level\030\001 \001(\005\022\014\n\004Rate\030\002 \001("
  "\003\022\014\n\004Term\030\003 \001(\005\022\023\n\013TotalAmount\030\004 \001(\003\022\025\n\r"
  "MatchedAmount\030\005 \001(\003\"y\n\037ADEstimatedSecuri"
  "tyLendingEntry\022\r\n\005Level\030\001 \001(\005\022\014\n\004Rate\030\002 "
  "\001(\003\022\014\n\004Term\030\003 \001(\t\022\016\n\006Amount\030\004 \001(\003\022\033\n\023Pos"
  "tponeProbability\030\005 \001(\005B:\n\032com.htsc.mdc.i"
  "nsight.modelB\027MDSecurityLendingProtosH\001\240"
  "\001\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_MDSecurityLending_2eproto_deps[2] = {
  &::descriptor_table_ESecurityIDSource_2eproto,
  &::descriptor_table_ESecurityType_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_MDSecurityLending_2eproto_sccs[4] = {
  &scc_info_ADEstimatedSecurityLendingEntry_MDSecurityLending_2eproto.base,
  &scc_info_ADSecurityLendingEntry_MDSecurityLending_2eproto.base,
  &scc_info_ADValidSecurityLendingEntry_MDSecurityLending_2eproto.base,
  &scc_info_MDSecurityLending_MDSecurityLending_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_MDSecurityLending_2eproto_once;
static bool descriptor_table_MDSecurityLending_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_MDSecurityLending_2eproto = {
  &descriptor_table_MDSecurityLending_2eproto_initialized, descriptor_table_protodef_MDSecurityLending_2eproto, "MDSecurityLending.proto", 2570,
  &descriptor_table_MDSecurityLending_2eproto_once, descriptor_table_MDSecurityLending_2eproto_sccs, descriptor_table_MDSecurityLending_2eproto_deps, 4, 2,
  schemas, file_default_instances, TableStruct_MDSecurityLending_2eproto::offsets,
  file_level_metadata_MDSecurityLending_2eproto, 4, file_level_enum_descriptors_MDSecurityLending_2eproto, file_level_service_descriptors_MDSecurityLending_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_MDSecurityLending_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_MDSecurityLending_2eproto), true);
namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {

// ===================================================================

void MDSecurityLending::InitAsDefaultInstance() {
}
class MDSecurityLending::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MDSecurityLending::kHTSCSecurityIDFieldNumber;
const int MDSecurityLending::kMDDateFieldNumber;
const int MDSecurityLending::kMDTimeFieldNumber;
const int MDSecurityLending::kDataTimestampFieldNumber;
const int MDSecurityLending::kTradingPhaseCodeFieldNumber;
const int MDSecurityLending::kSecurityIDSourceFieldNumber;
const int MDSecurityLending::kSecurityTypeFieldNumber;
const int MDSecurityLending::kPreWeightedRateFieldNumber;
const int MDSecurityLending::kPreHighRateFieldNumber;
const int MDSecurityLending::kPreLowRateFieldNumber;
const int MDSecurityLending::kPreHtscVolumeFieldNumber;
const int MDSecurityLending::kPreMarketVolumeFieldNumber;
const int MDSecurityLending::kWeightedRateFieldNumber;
const int MDSecurityLending::kHighRateFieldNumber;
const int MDSecurityLending::kLowRateFieldNumber;
const int MDSecurityLending::kHtscVolumeFieldNumber;
const int MDSecurityLending::kMarketVolumeFieldNumber;
const int MDSecurityLending::kBestBorrowRateFieldNumber;
const int MDSecurityLending::kBestLendRateFieldNumber;
const int MDSecurityLending::kValidBorrowsFieldNumber;
const int MDSecurityLending::kValidALendsFieldNumber;
const int MDSecurityLending::kValidBLendsFieldNumber;
const int MDSecurityLending::kValidCLendsFieldNumber;
const int MDSecurityLending::kALendsFieldNumber;
const int MDSecurityLending::kBLendsFieldNumber;
const int MDSecurityLending::kCLendsFieldNumber;
const int MDSecurityLending::kValidReservationBorrowsFieldNumber;
const int MDSecurityLending::kValidReservationLendsFieldNumber;
const int MDSecurityLending::kReservationBorrowsFieldNumber;
const int MDSecurityLending::kReservationLendsFieldNumber;
const int MDSecurityLending::kValidOtcLendsFieldNumber;
const int MDSecurityLending::kBestReservationBorrowRateFieldNumber;
const int MDSecurityLending::kBestReservationLendRateFieldNumber;
const int MDSecurityLending::kValidLendAmountFieldNumber;
const int MDSecurityLending::kValidALendAmountFieldNumber;
const int MDSecurityLending::kValidBLendAmountFieldNumber;
const int MDSecurityLending::kHtscBorrowAmountFieldNumber;
const int MDSecurityLending::kHtscBorrowRateFieldNumber;
const int MDSecurityLending::kBestLoanRateFieldNumber;
const int MDSecurityLending::kHtscBorrowTradeVolumeFieldNumber;
const int MDSecurityLending::kHtscBorrowWeightedRateFieldNumber;
const int MDSecurityLending::kPreHtscBorrowTradeVolumeFieldNumber;
const int MDSecurityLending::kPreHtscBorrowWeightedRateFieldNumber;
const int MDSecurityLending::kHtscBorrowsFieldNumber;
const int MDSecurityLending::kLoansFieldNumber;
const int MDSecurityLending::kDataMultiplePowerOf10FieldNumber;
const int MDSecurityLending::kExternalLendsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MDSecurityLending::MDSecurityLending()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.htsc.mdc.insight.model.MDSecurityLending)
}
MDSecurityLending::MDSecurityLending(const MDSecurityLending& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      validborrows_(from.validborrows_),
      validalends_(from.validalends_),
      validblends_(from.validblends_),
      validclends_(from.validclends_),
      alends_(from.alends_),
      blends_(from.blends_),
      clends_(from.clends_),
      validreservationborrows_(from.validreservationborrows_),
      validreservationlends_(from.validreservationlends_),
      reservationborrows_(from.reservationborrows_),
      reservationlends_(from.reservationlends_),
      validotclends_(from.validotclends_),
      htscborrows_(from.htscborrows_),
      loans_(from.loans_),
      externallends_(from.externallends_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  htscsecurityid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.htscsecurityid().size() > 0) {
    htscsecurityid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.htscsecurityid_);
  }
  tradingphasecode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.tradingphasecode().size() > 0) {
    tradingphasecode_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tradingphasecode_);
  }
  ::memcpy(&mddate_, &from.mddate_,
    static_cast<size_t>(reinterpret_cast<char*>(&prehtscborrowweightedrate_) -
    reinterpret_cast<char*>(&mddate_)) + sizeof(prehtscborrowweightedrate_));
  // @@protoc_insertion_point(copy_constructor:com.htsc.mdc.insight.model.MDSecurityLending)
}

void MDSecurityLending::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MDSecurityLending_MDSecurityLending_2eproto.base);
  htscsecurityid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tradingphasecode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&mddate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prehtscborrowweightedrate_) -
      reinterpret_cast<char*>(&mddate_)) + sizeof(prehtscborrowweightedrate_));
}

MDSecurityLending::~MDSecurityLending() {
  // @@protoc_insertion_point(destructor:com.htsc.mdc.insight.model.MDSecurityLending)
  SharedDtor();
}

void MDSecurityLending::SharedDtor() {
  htscsecurityid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tradingphasecode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MDSecurityLending::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MDSecurityLending& MDSecurityLending::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MDSecurityLending_MDSecurityLending_2eproto.base);
  return *internal_default_instance();
}


void MDSecurityLending::Clear() {
// @@protoc_insertion_point(message_clear_start:com.htsc.mdc.insight.model.MDSecurityLending)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  validborrows_.Clear();
  validalends_.Clear();
  validblends_.Clear();
  validclends_.Clear();
  alends_.Clear();
  blends_.Clear();
  clends_.Clear();
  validreservationborrows_.Clear();
  validreservationlends_.Clear();
  reservationborrows_.Clear();
  reservationlends_.Clear();
  validotclends_.Clear();
  htscborrows_.Clear();
  loans_.Clear();
  externallends_.Clear();
  htscsecurityid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tradingphasecode_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&mddate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prehtscborrowweightedrate_) -
      reinterpret_cast<char*>(&mddate_)) + sizeof(prehtscborrowweightedrate_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MDSecurityLending::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string HTSCSecurityID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_htscsecurityid(), ptr, ctx, "com.htsc.mdc.insight.model.MDSecurityLending.HTSCSecurityID");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 MDDate = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          mddate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 MDTime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          mdtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 DataTimestamp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          datatimestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string TradingPhaseCode = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_tradingphasecode(), ptr, ctx, "com.htsc.mdc.insight.model.MDSecurityLending.TradingPhaseCode");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          set_securityidsource(static_cast<::com::htsc::mdc::model::ESecurityIDSource>(val));
        } else goto handle_unusual;
        continue;
      // .com.htsc.mdc.model.ESecurityType securityType = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          set_securitytype(static_cast<::com::htsc::mdc::model::ESecurityType>(val));
        } else goto handle_unusual;
        continue;
      // int64 PreWeightedRate = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          preweightedrate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 PreHighRate = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          prehighrate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 PreLowRate = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          prelowrate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 PreHtscVolume = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          prehtscvolume_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 PreMarketVolume = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          premarketvolume_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 WeightedRate = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          weightedrate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 HighRate = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          highrate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 LowRate = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          lowrate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 HtscVolume = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          htscvolume_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 MarketVolume = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 152)) {
          marketvolume_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 BestBorrowRate = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          bestborrowrate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 BestLendRate = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 168)) {
          bestlendrate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidBorrows = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_validborrows(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 474);
        } else goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidALends = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 226)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_validalends(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 482);
        } else goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidBLends = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_validblends(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 490);
        } else goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidCLends = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 242)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_validclends(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 498);
        } else goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry ALends = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_alends(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 506);
        } else goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry BLends = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 2)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_blends(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 642);
        } else goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry CLends = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_clends(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 650);
        } else goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidReservationBorrows = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_validreservationborrows(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 658);
        } else goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidReservationLends = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_validreservationlends(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 666);
        } else goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry ReservationBorrows = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_reservationborrows(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 674);
        } else goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry ReservationLends = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_reservationlends(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 682);
        } else goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidOtcLends = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_validotclends(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 690);
        } else goto handle_unusual;
        continue;
      // int64 BestReservationBorrowRate = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          bestreservationborrowrate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 BestReservationLendRate = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          bestreservationlendrate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 ValidLendAmount = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          validlendamount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 ValidALendAmount = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          validalendamount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 ValidBLendAmount = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          validblendamount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 HtscBorrowAmount = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          htscborrowamount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 HtscBorrowRate = 45;
      case 45:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          htscborrowrate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 BestLoanRate = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          bestloanrate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 HtscBorrowTradeVolume = 47;
      case 47:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          htscborrowtradevolume_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 HtscBorrowWeightedRate = 48;
      case 48:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          htscborrowweightedrate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 PreHtscBorrowTradeVolume = 49;
      case 49:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          prehtscborrowtradevolume_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 PreHtscBorrowWeightedRate = 50;
      case 50:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          prehtscborrowweightedrate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry HtscBorrows = 51;
      case 51:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_htscborrows(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 922);
        } else goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry Loans = 52;
      case 52:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_loans(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 930);
        } else goto handle_unusual;
        continue;
      // int32 DataMultiplePowerOf10 = 53;
      case 53:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 168)) {
          datamultiplepowerof10_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry ExternalLends = 54;
      case 54:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_externallends(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 946);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MDSecurityLending::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.htsc.mdc.insight.model.MDSecurityLending)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string HTSCSecurityID = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_htscsecurityid()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->htscsecurityid().data(), static_cast<int>(this->htscsecurityid().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDSecurityLending.HTSCSecurityID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 MDDate = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &mddate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 MDTime = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &mdtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 DataTimestamp = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &datatimestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string TradingPhaseCode = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_tradingphasecode()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->tradingphasecode().data(), static_cast<int>(this->tradingphasecode().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.MDSecurityLending.TradingPhaseCode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_securityidsource(static_cast< ::com::htsc::mdc::model::ESecurityIDSource >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.htsc.mdc.model.ESecurityType securityType = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_securitytype(static_cast< ::com::htsc::mdc::model::ESecurityType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 PreWeightedRate = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (80 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &preweightedrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 PreHighRate = 11;
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (88 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &prehighrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 PreLowRate = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (96 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &prelowrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 PreHtscVolume = 13;
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (104 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &prehtscvolume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 PreMarketVolume = 14;
      case 14: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (112 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &premarketvolume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 WeightedRate = 15;
      case 15: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (120 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &weightedrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 HighRate = 16;
      case 16: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (128 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &highrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 LowRate = 17;
      case 17: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (136 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &lowrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 HtscVolume = 18;
      case 18: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (144 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &htscvolume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 MarketVolume = 19;
      case 19: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (152 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &marketvolume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 BestBorrowRate = 20;
      case 20: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (160 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &bestborrowrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 BestLendRate = 21;
      case 21: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (168 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &bestlendrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidBorrows = 27;
      case 27: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (218 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_validborrows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidALends = 28;
      case 28: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (226 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_validalends()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidBLends = 29;
      case 29: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (234 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_validblends()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidCLends = 30;
      case 30: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (242 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_validclends()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry ALends = 31;
      case 31: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (250 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_alends()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry BLends = 32;
      case 32: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (258 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_blends()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry CLends = 33;
      case 33: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (266 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_clends()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidReservationBorrows = 34;
      case 34: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (274 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_validreservationborrows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidReservationLends = 35;
      case 35: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (282 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_validreservationlends()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry ReservationBorrows = 36;
      case 36: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (290 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_reservationborrows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry ReservationLends = 37;
      case 37: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (298 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_reservationlends()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidOtcLends = 38;
      case 38: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (306 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_validotclends()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 BestReservationBorrowRate = 39;
      case 39: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (312 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &bestreservationborrowrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 BestReservationLendRate = 40;
      case 40: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (320 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &bestreservationlendrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ValidLendAmount = 41;
      case 41: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (328 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &validlendamount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ValidALendAmount = 42;
      case 42: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (336 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &validalendamount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ValidBLendAmount = 43;
      case 43: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (344 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &validblendamount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 HtscBorrowAmount = 44;
      case 44: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (352 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &htscborrowamount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 HtscBorrowRate = 45;
      case 45: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (360 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &htscborrowrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 BestLoanRate = 46;
      case 46: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (368 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &bestloanrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 HtscBorrowTradeVolume = 47;
      case 47: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (376 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &htscborrowtradevolume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 HtscBorrowWeightedRate = 48;
      case 48: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (384 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &htscborrowweightedrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 PreHtscBorrowTradeVolume = 49;
      case 49: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (392 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &prehtscborrowtradevolume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 PreHtscBorrowWeightedRate = 50;
      case 50: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (400 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &prehtscborrowweightedrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry HtscBorrows = 51;
      case 51: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (410 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_htscborrows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry Loans = 52;
      case 52: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (418 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_loans()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 DataMultiplePowerOf10 = 53;
      case 53: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (424 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &datamultiplepowerof10_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry ExternalLends = 54;
      case 54: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (434 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_externallends()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.htsc.mdc.insight.model.MDSecurityLending)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.htsc.mdc.insight.model.MDSecurityLending)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MDSecurityLending::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.htsc.mdc.insight.model.MDSecurityLending)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string HTSCSecurityID = 1;
  if (this->htscsecurityid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->htscsecurityid().data(), static_cast<int>(this->htscsecurityid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDSecurityLending.HTSCSecurityID");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->htscsecurityid(), output);
  }

  // int32 MDDate = 2;
  if (this->mddate() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->mddate(), output);
  }

  // int32 MDTime = 3;
  if (this->mdtime() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->mdtime(), output);
  }

  // int64 DataTimestamp = 4;
  if (this->datatimestamp() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(4, this->datatimestamp(), output);
  }

  // string TradingPhaseCode = 5;
  if (this->tradingphasecode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->tradingphasecode().data(), static_cast<int>(this->tradingphasecode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDSecurityLending.TradingPhaseCode");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->tradingphasecode(), output);
  }

  // .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
  if (this->securityidsource() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      6, this->securityidsource(), output);
  }

  // .com.htsc.mdc.model.ESecurityType securityType = 7;
  if (this->securitytype() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      7, this->securitytype(), output);
  }

  // int64 PreWeightedRate = 10;
  if (this->preweightedrate() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(10, this->preweightedrate(), output);
  }

  // int64 PreHighRate = 11;
  if (this->prehighrate() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(11, this->prehighrate(), output);
  }

  // int64 PreLowRate = 12;
  if (this->prelowrate() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(12, this->prelowrate(), output);
  }

  // int64 PreHtscVolume = 13;
  if (this->prehtscvolume() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(13, this->prehtscvolume(), output);
  }

  // int64 PreMarketVolume = 14;
  if (this->premarketvolume() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(14, this->premarketvolume(), output);
  }

  // int64 WeightedRate = 15;
  if (this->weightedrate() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(15, this->weightedrate(), output);
  }

  // int64 HighRate = 16;
  if (this->highrate() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(16, this->highrate(), output);
  }

  // int64 LowRate = 17;
  if (this->lowrate() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(17, this->lowrate(), output);
  }

  // int64 HtscVolume = 18;
  if (this->htscvolume() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(18, this->htscvolume(), output);
  }

  // int64 MarketVolume = 19;
  if (this->marketvolume() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(19, this->marketvolume(), output);
  }

  // int64 BestBorrowRate = 20;
  if (this->bestborrowrate() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(20, this->bestborrowrate(), output);
  }

  // int64 BestLendRate = 21;
  if (this->bestlendrate() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(21, this->bestlendrate(), output);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidBorrows = 27;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->validborrows_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      27,
      this->validborrows(static_cast<int>(i)),
      output);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidALends = 28;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->validalends_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      28,
      this->validalends(static_cast<int>(i)),
      output);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidBLends = 29;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->validblends_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      29,
      this->validblends(static_cast<int>(i)),
      output);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidCLends = 30;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->validclends_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      30,
      this->validclends(static_cast<int>(i)),
      output);
  }

  // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry ALends = 31;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alends_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      31,
      this->alends(static_cast<int>(i)),
      output);
  }

  // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry BLends = 32;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->blends_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      32,
      this->blends(static_cast<int>(i)),
      output);
  }

  // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry CLends = 33;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->clends_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      33,
      this->clends(static_cast<int>(i)),
      output);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidReservationBorrows = 34;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->validreservationborrows_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      34,
      this->validreservationborrows(static_cast<int>(i)),
      output);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidReservationLends = 35;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->validreservationlends_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      35,
      this->validreservationlends(static_cast<int>(i)),
      output);
  }

  // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry ReservationBorrows = 36;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reservationborrows_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      36,
      this->reservationborrows(static_cast<int>(i)),
      output);
  }

  // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry ReservationLends = 37;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reservationlends_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      37,
      this->reservationlends(static_cast<int>(i)),
      output);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidOtcLends = 38;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->validotclends_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      38,
      this->validotclends(static_cast<int>(i)),
      output);
  }

  // int64 BestReservationBorrowRate = 39;
  if (this->bestreservationborrowrate() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(39, this->bestreservationborrowrate(), output);
  }

  // int64 BestReservationLendRate = 40;
  if (this->bestreservationlendrate() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(40, this->bestreservationlendrate(), output);
  }

  // int64 ValidLendAmount = 41;
  if (this->validlendamount() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(41, this->validlendamount(), output);
  }

  // int64 ValidALendAmount = 42;
  if (this->validalendamount() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(42, this->validalendamount(), output);
  }

  // int64 ValidBLendAmount = 43;
  if (this->validblendamount() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(43, this->validblendamount(), output);
  }

  // int64 HtscBorrowAmount = 44;
  if (this->htscborrowamount() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(44, this->htscborrowamount(), output);
  }

  // int64 HtscBorrowRate = 45;
  if (this->htscborrowrate() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(45, this->htscborrowrate(), output);
  }

  // int64 BestLoanRate = 46;
  if (this->bestloanrate() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(46, this->bestloanrate(), output);
  }

  // int64 HtscBorrowTradeVolume = 47;
  if (this->htscborrowtradevolume() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(47, this->htscborrowtradevolume(), output);
  }

  // int64 HtscBorrowWeightedRate = 48;
  if (this->htscborrowweightedrate() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(48, this->htscborrowweightedrate(), output);
  }

  // int64 PreHtscBorrowTradeVolume = 49;
  if (this->prehtscborrowtradevolume() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(49, this->prehtscborrowtradevolume(), output);
  }

  // int64 PreHtscBorrowWeightedRate = 50;
  if (this->prehtscborrowweightedrate() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(50, this->prehtscborrowweightedrate(), output);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry HtscBorrows = 51;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->htscborrows_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      51,
      this->htscborrows(static_cast<int>(i)),
      output);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry Loans = 52;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->loans_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      52,
      this->loans(static_cast<int>(i)),
      output);
  }

  // int32 DataMultiplePowerOf10 = 53;
  if (this->datamultiplepowerof10() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(53, this->datamultiplepowerof10(), output);
  }

  // repeated .com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry ExternalLends = 54;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->externallends_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      54,
      this->externallends(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.htsc.mdc.insight.model.MDSecurityLending)
}

::PROTOBUF_NAMESPACE_ID::uint8* MDSecurityLending::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.htsc.mdc.insight.model.MDSecurityLending)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string HTSCSecurityID = 1;
  if (this->htscsecurityid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->htscsecurityid().data(), static_cast<int>(this->htscsecurityid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDSecurityLending.HTSCSecurityID");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->htscsecurityid(), target);
  }

  // int32 MDDate = 2;
  if (this->mddate() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->mddate(), target);
  }

  // int32 MDTime = 3;
  if (this->mdtime() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->mdtime(), target);
  }

  // int64 DataTimestamp = 4;
  if (this->datatimestamp() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->datatimestamp(), target);
  }

  // string TradingPhaseCode = 5;
  if (this->tradingphasecode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->tradingphasecode().data(), static_cast<int>(this->tradingphasecode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.MDSecurityLending.TradingPhaseCode");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        5, this->tradingphasecode(), target);
  }

  // .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
  if (this->securityidsource() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->securityidsource(), target);
  }

  // .com.htsc.mdc.model.ESecurityType securityType = 7;
  if (this->securitytype() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      7, this->securitytype(), target);
  }

  // int64 PreWeightedRate = 10;
  if (this->preweightedrate() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(10, this->preweightedrate(), target);
  }

  // int64 PreHighRate = 11;
  if (this->prehighrate() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(11, this->prehighrate(), target);
  }

  // int64 PreLowRate = 12;
  if (this->prelowrate() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(12, this->prelowrate(), target);
  }

  // int64 PreHtscVolume = 13;
  if (this->prehtscvolume() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(13, this->prehtscvolume(), target);
  }

  // int64 PreMarketVolume = 14;
  if (this->premarketvolume() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(14, this->premarketvolume(), target);
  }

  // int64 WeightedRate = 15;
  if (this->weightedrate() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(15, this->weightedrate(), target);
  }

  // int64 HighRate = 16;
  if (this->highrate() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(16, this->highrate(), target);
  }

  // int64 LowRate = 17;
  if (this->lowrate() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(17, this->lowrate(), target);
  }

  // int64 HtscVolume = 18;
  if (this->htscvolume() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(18, this->htscvolume(), target);
  }

  // int64 MarketVolume = 19;
  if (this->marketvolume() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(19, this->marketvolume(), target);
  }

  // int64 BestBorrowRate = 20;
  if (this->bestborrowrate() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(20, this->bestborrowrate(), target);
  }

  // int64 BestLendRate = 21;
  if (this->bestlendrate() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(21, this->bestlendrate(), target);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidBorrows = 27;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->validborrows_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27, this->validborrows(static_cast<int>(i)), target);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidALends = 28;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->validalends_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28, this->validalends(static_cast<int>(i)), target);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidBLends = 29;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->validblends_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        29, this->validblends(static_cast<int>(i)), target);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidCLends = 30;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->validclends_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, this->validclends(static_cast<int>(i)), target);
  }

  // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry ALends = 31;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alends_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        31, this->alends(static_cast<int>(i)), target);
  }

  // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry BLends = 32;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->blends_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        32, this->blends(static_cast<int>(i)), target);
  }

  // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry CLends = 33;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->clends_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        33, this->clends(static_cast<int>(i)), target);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidReservationBorrows = 34;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->validreservationborrows_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        34, this->validreservationborrows(static_cast<int>(i)), target);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidReservationLends = 35;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->validreservationlends_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        35, this->validreservationlends(static_cast<int>(i)), target);
  }

  // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry ReservationBorrows = 36;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reservationborrows_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        36, this->reservationborrows(static_cast<int>(i)), target);
  }

  // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry ReservationLends = 37;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reservationlends_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        37, this->reservationlends(static_cast<int>(i)), target);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidOtcLends = 38;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->validotclends_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        38, this->validotclends(static_cast<int>(i)), target);
  }

  // int64 BestReservationBorrowRate = 39;
  if (this->bestreservationborrowrate() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(39, this->bestreservationborrowrate(), target);
  }

  // int64 BestReservationLendRate = 40;
  if (this->bestreservationlendrate() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(40, this->bestreservationlendrate(), target);
  }

  // int64 ValidLendAmount = 41;
  if (this->validlendamount() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(41, this->validlendamount(), target);
  }

  // int64 ValidALendAmount = 42;
  if (this->validalendamount() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(42, this->validalendamount(), target);
  }

  // int64 ValidBLendAmount = 43;
  if (this->validblendamount() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(43, this->validblendamount(), target);
  }

  // int64 HtscBorrowAmount = 44;
  if (this->htscborrowamount() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(44, this->htscborrowamount(), target);
  }

  // int64 HtscBorrowRate = 45;
  if (this->htscborrowrate() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(45, this->htscborrowrate(), target);
  }

  // int64 BestLoanRate = 46;
  if (this->bestloanrate() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(46, this->bestloanrate(), target);
  }

  // int64 HtscBorrowTradeVolume = 47;
  if (this->htscborrowtradevolume() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(47, this->htscborrowtradevolume(), target);
  }

  // int64 HtscBorrowWeightedRate = 48;
  if (this->htscborrowweightedrate() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(48, this->htscborrowweightedrate(), target);
  }

  // int64 PreHtscBorrowTradeVolume = 49;
  if (this->prehtscborrowtradevolume() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(49, this->prehtscborrowtradevolume(), target);
  }

  // int64 PreHtscBorrowWeightedRate = 50;
  if (this->prehtscborrowweightedrate() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(50, this->prehtscborrowweightedrate(), target);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry HtscBorrows = 51;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->htscborrows_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        51, this->htscborrows(static_cast<int>(i)), target);
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry Loans = 52;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->loans_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        52, this->loans(static_cast<int>(i)), target);
  }

  // int32 DataMultiplePowerOf10 = 53;
  if (this->datamultiplepowerof10() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(53, this->datamultiplepowerof10(), target);
  }

  // repeated .com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry ExternalLends = 54;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->externallends_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        54, this->externallends(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.htsc.mdc.insight.model.MDSecurityLending)
  return target;
}

size_t MDSecurityLending::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.htsc.mdc.insight.model.MDSecurityLending)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidBorrows = 27;
  {
    unsigned int count = static_cast<unsigned int>(this->validborrows_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->validborrows(static_cast<int>(i)));
    }
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidALends = 28;
  {
    unsigned int count = static_cast<unsigned int>(this->validalends_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->validalends(static_cast<int>(i)));
    }
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidBLends = 29;
  {
    unsigned int count = static_cast<unsigned int>(this->validblends_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->validblends(static_cast<int>(i)));
    }
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidCLends = 30;
  {
    unsigned int count = static_cast<unsigned int>(this->validclends_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->validclends(static_cast<int>(i)));
    }
  }

  // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry ALends = 31;
  {
    unsigned int count = static_cast<unsigned int>(this->alends_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->alends(static_cast<int>(i)));
    }
  }

  // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry BLends = 32;
  {
    unsigned int count = static_cast<unsigned int>(this->blends_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->blends(static_cast<int>(i)));
    }
  }

  // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry CLends = 33;
  {
    unsigned int count = static_cast<unsigned int>(this->clends_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->clends(static_cast<int>(i)));
    }
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidReservationBorrows = 34;
  {
    unsigned int count = static_cast<unsigned int>(this->validreservationborrows_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->validreservationborrows(static_cast<int>(i)));
    }
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidReservationLends = 35;
  {
    unsigned int count = static_cast<unsigned int>(this->validreservationlends_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->validreservationlends(static_cast<int>(i)));
    }
  }

  // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry ReservationBorrows = 36;
  {
    unsigned int count = static_cast<unsigned int>(this->reservationborrows_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->reservationborrows(static_cast<int>(i)));
    }
  }

  // repeated .com.htsc.mdc.insight.model.ADSecurityLendingEntry ReservationLends = 37;
  {
    unsigned int count = static_cast<unsigned int>(this->reservationlends_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->reservationlends(static_cast<int>(i)));
    }
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry ValidOtcLends = 38;
  {
    unsigned int count = static_cast<unsigned int>(this->validotclends_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->validotclends(static_cast<int>(i)));
    }
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry HtscBorrows = 51;
  {
    unsigned int count = static_cast<unsigned int>(this->htscborrows_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->htscborrows(static_cast<int>(i)));
    }
  }

  // repeated .com.htsc.mdc.insight.model.ADValidSecurityLendingEntry Loans = 52;
  {
    unsigned int count = static_cast<unsigned int>(this->loans_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->loans(static_cast<int>(i)));
    }
  }

  // repeated .com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry ExternalLends = 54;
  {
    unsigned int count = static_cast<unsigned int>(this->externallends_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->externallends(static_cast<int>(i)));
    }
  }

  // string HTSCSecurityID = 1;
  if (this->htscsecurityid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->htscsecurityid());
  }

  // string TradingPhaseCode = 5;
  if (this->tradingphasecode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->tradingphasecode());
  }

  // int32 MDDate = 2;
  if (this->mddate() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->mddate());
  }

  // int32 MDTime = 3;
  if (this->mdtime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->mdtime());
  }

  // int64 DataTimestamp = 4;
  if (this->datatimestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->datatimestamp());
  }

  // .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
  if (this->securityidsource() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->securityidsource());
  }

  // .com.htsc.mdc.model.ESecurityType securityType = 7;
  if (this->securitytype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->securitytype());
  }

  // int64 PreWeightedRate = 10;
  if (this->preweightedrate() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->preweightedrate());
  }

  // int64 PreHighRate = 11;
  if (this->prehighrate() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->prehighrate());
  }

  // int64 PreLowRate = 12;
  if (this->prelowrate() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->prelowrate());
  }

  // int64 PreHtscVolume = 13;
  if (this->prehtscvolume() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->prehtscvolume());
  }

  // int64 PreMarketVolume = 14;
  if (this->premarketvolume() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->premarketvolume());
  }

  // int64 WeightedRate = 15;
  if (this->weightedrate() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->weightedrate());
  }

  // int64 HighRate = 16;
  if (this->highrate() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->highrate());
  }

  // int64 LowRate = 17;
  if (this->lowrate() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->lowrate());
  }

  // int64 HtscVolume = 18;
  if (this->htscvolume() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->htscvolume());
  }

  // int64 MarketVolume = 19;
  if (this->marketvolume() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->marketvolume());
  }

  // int64 BestBorrowRate = 20;
  if (this->bestborrowrate() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->bestborrowrate());
  }

  // int64 BestLendRate = 21;
  if (this->bestlendrate() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->bestlendrate());
  }

  // int64 BestReservationBorrowRate = 39;
  if (this->bestreservationborrowrate() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->bestreservationborrowrate());
  }

  // int64 BestReservationLendRate = 40;
  if (this->bestreservationlendrate() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->bestreservationlendrate());
  }

  // int64 ValidLendAmount = 41;
  if (this->validlendamount() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->validlendamount());
  }

  // int64 ValidALendAmount = 42;
  if (this->validalendamount() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->validalendamount());
  }

  // int64 ValidBLendAmount = 43;
  if (this->validblendamount() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->validblendamount());
  }

  // int64 HtscBorrowAmount = 44;
  if (this->htscborrowamount() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->htscborrowamount());
  }

  // int64 HtscBorrowRate = 45;
  if (this->htscborrowrate() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->htscborrowrate());
  }

  // int64 BestLoanRate = 46;
  if (this->bestloanrate() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->bestloanrate());
  }

  // int64 HtscBorrowTradeVolume = 47;
  if (this->htscborrowtradevolume() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->htscborrowtradevolume());
  }

  // int64 HtscBorrowWeightedRate = 48;
  if (this->htscborrowweightedrate() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->htscborrowweightedrate());
  }

  // int32 DataMultiplePowerOf10 = 53;
  if (this->datamultiplepowerof10() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->datamultiplepowerof10());
  }

  // int64 PreHtscBorrowTradeVolume = 49;
  if (this->prehtscborrowtradevolume() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->prehtscborrowtradevolume());
  }

  // int64 PreHtscBorrowWeightedRate = 50;
  if (this->prehtscborrowweightedrate() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->prehtscborrowweightedrate());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MDSecurityLending::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.htsc.mdc.insight.model.MDSecurityLending)
  GOOGLE_DCHECK_NE(&from, this);
  const MDSecurityLending* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MDSecurityLending>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.htsc.mdc.insight.model.MDSecurityLending)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.htsc.mdc.insight.model.MDSecurityLending)
    MergeFrom(*source);
  }
}

void MDSecurityLending::MergeFrom(const MDSecurityLending& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.htsc.mdc.insight.model.MDSecurityLending)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  validborrows_.MergeFrom(from.validborrows_);
  validalends_.MergeFrom(from.validalends_);
  validblends_.MergeFrom(from.validblends_);
  validclends_.MergeFrom(from.validclends_);
  alends_.MergeFrom(from.alends_);
  blends_.MergeFrom(from.blends_);
  clends_.MergeFrom(from.clends_);
  validreservationborrows_.MergeFrom(from.validreservationborrows_);
  validreservationlends_.MergeFrom(from.validreservationlends_);
  reservationborrows_.MergeFrom(from.reservationborrows_);
  reservationlends_.MergeFrom(from.reservationlends_);
  validotclends_.MergeFrom(from.validotclends_);
  htscborrows_.MergeFrom(from.htscborrows_);
  loans_.MergeFrom(from.loans_);
  externallends_.MergeFrom(from.externallends_);
  if (from.htscsecurityid().size() > 0) {

    htscsecurityid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.htscsecurityid_);
  }
  if (from.tradingphasecode().size() > 0) {

    tradingphasecode_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tradingphasecode_);
  }
  if (from.mddate() != 0) {
    set_mddate(from.mddate());
  }
  if (from.mdtime() != 0) {
    set_mdtime(from.mdtime());
  }
  if (from.datatimestamp() != 0) {
    set_datatimestamp(from.datatimestamp());
  }
  if (from.securityidsource() != 0) {
    set_securityidsource(from.securityidsource());
  }
  if (from.securitytype() != 0) {
    set_securitytype(from.securitytype());
  }
  if (from.preweightedrate() != 0) {
    set_preweightedrate(from.preweightedrate());
  }
  if (from.prehighrate() != 0) {
    set_prehighrate(from.prehighrate());
  }
  if (from.prelowrate() != 0) {
    set_prelowrate(from.prelowrate());
  }
  if (from.prehtscvolume() != 0) {
    set_prehtscvolume(from.prehtscvolume());
  }
  if (from.premarketvolume() != 0) {
    set_premarketvolume(from.premarketvolume());
  }
  if (from.weightedrate() != 0) {
    set_weightedrate(from.weightedrate());
  }
  if (from.highrate() != 0) {
    set_highrate(from.highrate());
  }
  if (from.lowrate() != 0) {
    set_lowrate(from.lowrate());
  }
  if (from.htscvolume() != 0) {
    set_htscvolume(from.htscvolume());
  }
  if (from.marketvolume() != 0) {
    set_marketvolume(from.marketvolume());
  }
  if (from.bestborrowrate() != 0) {
    set_bestborrowrate(from.bestborrowrate());
  }
  if (from.bestlendrate() != 0) {
    set_bestlendrate(from.bestlendrate());
  }
  if (from.bestreservationborrowrate() != 0) {
    set_bestreservationborrowrate(from.bestreservationborrowrate());
  }
  if (from.bestreservationlendrate() != 0) {
    set_bestreservationlendrate(from.bestreservationlendrate());
  }
  if (from.validlendamount() != 0) {
    set_validlendamount(from.validlendamount());
  }
  if (from.validalendamount() != 0) {
    set_validalendamount(from.validalendamount());
  }
  if (from.validblendamount() != 0) {
    set_validblendamount(from.validblendamount());
  }
  if (from.htscborrowamount() != 0) {
    set_htscborrowamount(from.htscborrowamount());
  }
  if (from.htscborrowrate() != 0) {
    set_htscborrowrate(from.htscborrowrate());
  }
  if (from.bestloanrate() != 0) {
    set_bestloanrate(from.bestloanrate());
  }
  if (from.htscborrowtradevolume() != 0) {
    set_htscborrowtradevolume(from.htscborrowtradevolume());
  }
  if (from.htscborrowweightedrate() != 0) {
    set_htscborrowweightedrate(from.htscborrowweightedrate());
  }
  if (from.datamultiplepowerof10() != 0) {
    set_datamultiplepowerof10(from.datamultiplepowerof10());
  }
  if (from.prehtscborrowtradevolume() != 0) {
    set_prehtscborrowtradevolume(from.prehtscborrowtradevolume());
  }
  if (from.prehtscborrowweightedrate() != 0) {
    set_prehtscborrowweightedrate(from.prehtscborrowweightedrate());
  }
}

void MDSecurityLending::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.htsc.mdc.insight.model.MDSecurityLending)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MDSecurityLending::CopyFrom(const MDSecurityLending& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.htsc.mdc.insight.model.MDSecurityLending)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MDSecurityLending::IsInitialized() const {
  return true;
}

void MDSecurityLending::Swap(MDSecurityLending* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MDSecurityLending::InternalSwap(MDSecurityLending* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&validborrows_)->InternalSwap(CastToBase(&other->validborrows_));
  CastToBase(&validalends_)->InternalSwap(CastToBase(&other->validalends_));
  CastToBase(&validblends_)->InternalSwap(CastToBase(&other->validblends_));
  CastToBase(&validclends_)->InternalSwap(CastToBase(&other->validclends_));
  CastToBase(&alends_)->InternalSwap(CastToBase(&other->alends_));
  CastToBase(&blends_)->InternalSwap(CastToBase(&other->blends_));
  CastToBase(&clends_)->InternalSwap(CastToBase(&other->clends_));
  CastToBase(&validreservationborrows_)->InternalSwap(CastToBase(&other->validreservationborrows_));
  CastToBase(&validreservationlends_)->InternalSwap(CastToBase(&other->validreservationlends_));
  CastToBase(&reservationborrows_)->InternalSwap(CastToBase(&other->reservationborrows_));
  CastToBase(&reservationlends_)->InternalSwap(CastToBase(&other->reservationlends_));
  CastToBase(&validotclends_)->InternalSwap(CastToBase(&other->validotclends_));
  CastToBase(&htscborrows_)->InternalSwap(CastToBase(&other->htscborrows_));
  CastToBase(&loans_)->InternalSwap(CastToBase(&other->loans_));
  CastToBase(&externallends_)->InternalSwap(CastToBase(&other->externallends_));
  htscsecurityid_.Swap(&other->htscsecurityid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tradingphasecode_.Swap(&other->tradingphasecode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mddate_, other->mddate_);
  swap(mdtime_, other->mdtime_);
  swap(datatimestamp_, other->datatimestamp_);
  swap(securityidsource_, other->securityidsource_);
  swap(securitytype_, other->securitytype_);
  swap(preweightedrate_, other->preweightedrate_);
  swap(prehighrate_, other->prehighrate_);
  swap(prelowrate_, other->prelowrate_);
  swap(prehtscvolume_, other->prehtscvolume_);
  swap(premarketvolume_, other->premarketvolume_);
  swap(weightedrate_, other->weightedrate_);
  swap(highrate_, other->highrate_);
  swap(lowrate_, other->lowrate_);
  swap(htscvolume_, other->htscvolume_);
  swap(marketvolume_, other->marketvolume_);
  swap(bestborrowrate_, other->bestborrowrate_);
  swap(bestlendrate_, other->bestlendrate_);
  swap(bestreservationborrowrate_, other->bestreservationborrowrate_);
  swap(bestreservationlendrate_, other->bestreservationlendrate_);
  swap(validlendamount_, other->validlendamount_);
  swap(validalendamount_, other->validalendamount_);
  swap(validblendamount_, other->validblendamount_);
  swap(htscborrowamount_, other->htscborrowamount_);
  swap(htscborrowrate_, other->htscborrowrate_);
  swap(bestloanrate_, other->bestloanrate_);
  swap(htscborrowtradevolume_, other->htscborrowtradevolume_);
  swap(htscborrowweightedrate_, other->htscborrowweightedrate_);
  swap(datamultiplepowerof10_, other->datamultiplepowerof10_);
  swap(prehtscborrowtradevolume_, other->prehtscborrowtradevolume_);
  swap(prehtscborrowweightedrate_, other->prehtscborrowweightedrate_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MDSecurityLending::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ADValidSecurityLendingEntry::InitAsDefaultInstance() {
}
class ADValidSecurityLendingEntry::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ADValidSecurityLendingEntry::kLevelFieldNumber;
const int ADValidSecurityLendingEntry::kRateFieldNumber;
const int ADValidSecurityLendingEntry::kTermFieldNumber;
const int ADValidSecurityLendingEntry::kAmountFieldNumber;
const int ADValidSecurityLendingEntry::kHtscProvidedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ADValidSecurityLendingEntry::ADValidSecurityLendingEntry()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.htsc.mdc.insight.model.ADValidSecurityLendingEntry)
}
ADValidSecurityLendingEntry::ADValidSecurityLendingEntry(const ADValidSecurityLendingEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rate_, &from.rate_,
    static_cast<size_t>(reinterpret_cast<char*>(&htscprovided_) -
    reinterpret_cast<char*>(&rate_)) + sizeof(htscprovided_));
  // @@protoc_insertion_point(copy_constructor:com.htsc.mdc.insight.model.ADValidSecurityLendingEntry)
}

void ADValidSecurityLendingEntry::SharedCtor() {
  ::memset(&rate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&htscprovided_) -
      reinterpret_cast<char*>(&rate_)) + sizeof(htscprovided_));
}

ADValidSecurityLendingEntry::~ADValidSecurityLendingEntry() {
  // @@protoc_insertion_point(destructor:com.htsc.mdc.insight.model.ADValidSecurityLendingEntry)
  SharedDtor();
}

void ADValidSecurityLendingEntry::SharedDtor() {
}

void ADValidSecurityLendingEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ADValidSecurityLendingEntry& ADValidSecurityLendingEntry::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ADValidSecurityLendingEntry_MDSecurityLending_2eproto.base);
  return *internal_default_instance();
}


void ADValidSecurityLendingEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:com.htsc.mdc.insight.model.ADValidSecurityLendingEntry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&rate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&htscprovided_) -
      reinterpret_cast<char*>(&rate_)) + sizeof(htscprovided_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ADValidSecurityLendingEntry::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 Level = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Rate = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          rate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Term = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          term_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Amount = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          amount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool HtscProvided = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          htscprovided_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ADValidSecurityLendingEntry::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.htsc.mdc.insight.model.ADValidSecurityLendingEntry)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Level = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 Rate = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Term = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 Amount = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool HtscProvided = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &htscprovided_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.htsc.mdc.insight.model.ADValidSecurityLendingEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.htsc.mdc.insight.model.ADValidSecurityLendingEntry)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ADValidSecurityLendingEntry::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.htsc.mdc.insight.model.ADValidSecurityLendingEntry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Level = 1;
  if (this->level() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }

  // int64 Rate = 2;
  if (this->rate() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(2, this->rate(), output);
  }

  // int32 Term = 3;
  if (this->term() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->term(), output);
  }

  // int64 Amount = 4;
  if (this->amount() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(4, this->amount(), output);
  }

  // bool HtscProvided = 5;
  if (this->htscprovided() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(5, this->htscprovided(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.htsc.mdc.insight.model.ADValidSecurityLendingEntry)
}

::PROTOBUF_NAMESPACE_ID::uint8* ADValidSecurityLendingEntry::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.htsc.mdc.insight.model.ADValidSecurityLendingEntry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Level = 1;
  if (this->level() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }

  // int64 Rate = 2;
  if (this->rate() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->rate(), target);
  }

  // int32 Term = 3;
  if (this->term() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->term(), target);
  }

  // int64 Amount = 4;
  if (this->amount() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->amount(), target);
  }

  // bool HtscProvided = 5;
  if (this->htscprovided() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->htscprovided(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.htsc.mdc.insight.model.ADValidSecurityLendingEntry)
  return target;
}

size_t ADValidSecurityLendingEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.htsc.mdc.insight.model.ADValidSecurityLendingEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Rate = 2;
  if (this->rate() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->rate());
  }

  // int32 Level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // int32 Term = 3;
  if (this->term() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->term());
  }

  // int64 Amount = 4;
  if (this->amount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->amount());
  }

  // bool HtscProvided = 5;
  if (this->htscprovided() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ADValidSecurityLendingEntry::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.htsc.mdc.insight.model.ADValidSecurityLendingEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const ADValidSecurityLendingEntry* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ADValidSecurityLendingEntry>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.htsc.mdc.insight.model.ADValidSecurityLendingEntry)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.htsc.mdc.insight.model.ADValidSecurityLendingEntry)
    MergeFrom(*source);
  }
}

void ADValidSecurityLendingEntry::MergeFrom(const ADValidSecurityLendingEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.htsc.mdc.insight.model.ADValidSecurityLendingEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rate() != 0) {
    set_rate(from.rate());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.term() != 0) {
    set_term(from.term());
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
  if (from.htscprovided() != 0) {
    set_htscprovided(from.htscprovided());
  }
}

void ADValidSecurityLendingEntry::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.htsc.mdc.insight.model.ADValidSecurityLendingEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ADValidSecurityLendingEntry::CopyFrom(const ADValidSecurityLendingEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.htsc.mdc.insight.model.ADValidSecurityLendingEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ADValidSecurityLendingEntry::IsInitialized() const {
  return true;
}

void ADValidSecurityLendingEntry::Swap(ADValidSecurityLendingEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ADValidSecurityLendingEntry::InternalSwap(ADValidSecurityLendingEntry* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(rate_, other->rate_);
  swap(level_, other->level_);
  swap(term_, other->term_);
  swap(amount_, other->amount_);
  swap(htscprovided_, other->htscprovided_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ADValidSecurityLendingEntry::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ADSecurityLendingEntry::InitAsDefaultInstance() {
}
class ADSecurityLendingEntry::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ADSecurityLendingEntry::kLevelFieldNumber;
const int ADSecurityLendingEntry::kRateFieldNumber;
const int ADSecurityLendingEntry::kTermFieldNumber;
const int ADSecurityLendingEntry::kTotalAmountFieldNumber;
const int ADSecurityLendingEntry::kMatchedAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ADSecurityLendingEntry::ADSecurityLendingEntry()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.htsc.mdc.insight.model.ADSecurityLendingEntry)
}
ADSecurityLendingEntry::ADSecurityLendingEntry(const ADSecurityLendingEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rate_, &from.rate_,
    static_cast<size_t>(reinterpret_cast<char*>(&matchedamount_) -
    reinterpret_cast<char*>(&rate_)) + sizeof(matchedamount_));
  // @@protoc_insertion_point(copy_constructor:com.htsc.mdc.insight.model.ADSecurityLendingEntry)
}

void ADSecurityLendingEntry::SharedCtor() {
  ::memset(&rate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&matchedamount_) -
      reinterpret_cast<char*>(&rate_)) + sizeof(matchedamount_));
}

ADSecurityLendingEntry::~ADSecurityLendingEntry() {
  // @@protoc_insertion_point(destructor:com.htsc.mdc.insight.model.ADSecurityLendingEntry)
  SharedDtor();
}

void ADSecurityLendingEntry::SharedDtor() {
}

void ADSecurityLendingEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ADSecurityLendingEntry& ADSecurityLendingEntry::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ADSecurityLendingEntry_MDSecurityLending_2eproto.base);
  return *internal_default_instance();
}


void ADSecurityLendingEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:com.htsc.mdc.insight.model.ADSecurityLendingEntry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&rate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&matchedamount_) -
      reinterpret_cast<char*>(&rate_)) + sizeof(matchedamount_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ADSecurityLendingEntry::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 Level = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Rate = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          rate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Term = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          term_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 TotalAmount = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          totalamount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 MatchedAmount = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          matchedamount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ADSecurityLendingEntry::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.htsc.mdc.insight.model.ADSecurityLendingEntry)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Level = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 Rate = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Term = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 TotalAmount = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &totalamount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 MatchedAmount = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &matchedamount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.htsc.mdc.insight.model.ADSecurityLendingEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.htsc.mdc.insight.model.ADSecurityLendingEntry)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ADSecurityLendingEntry::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.htsc.mdc.insight.model.ADSecurityLendingEntry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Level = 1;
  if (this->level() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }

  // int64 Rate = 2;
  if (this->rate() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(2, this->rate(), output);
  }

  // int32 Term = 3;
  if (this->term() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->term(), output);
  }

  // int64 TotalAmount = 4;
  if (this->totalamount() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(4, this->totalamount(), output);
  }

  // int64 MatchedAmount = 5;
  if (this->matchedamount() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(5, this->matchedamount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.htsc.mdc.insight.model.ADSecurityLendingEntry)
}

::PROTOBUF_NAMESPACE_ID::uint8* ADSecurityLendingEntry::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.htsc.mdc.insight.model.ADSecurityLendingEntry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Level = 1;
  if (this->level() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }

  // int64 Rate = 2;
  if (this->rate() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->rate(), target);
  }

  // int32 Term = 3;
  if (this->term() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->term(), target);
  }

  // int64 TotalAmount = 4;
  if (this->totalamount() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->totalamount(), target);
  }

  // int64 MatchedAmount = 5;
  if (this->matchedamount() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->matchedamount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.htsc.mdc.insight.model.ADSecurityLendingEntry)
  return target;
}

size_t ADSecurityLendingEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.htsc.mdc.insight.model.ADSecurityLendingEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Rate = 2;
  if (this->rate() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->rate());
  }

  // int32 Level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // int32 Term = 3;
  if (this->term() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->term());
  }

  // int64 TotalAmount = 4;
  if (this->totalamount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->totalamount());
  }

  // int64 MatchedAmount = 5;
  if (this->matchedamount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->matchedamount());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ADSecurityLendingEntry::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.htsc.mdc.insight.model.ADSecurityLendingEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const ADSecurityLendingEntry* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ADSecurityLendingEntry>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.htsc.mdc.insight.model.ADSecurityLendingEntry)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.htsc.mdc.insight.model.ADSecurityLendingEntry)
    MergeFrom(*source);
  }
}

void ADSecurityLendingEntry::MergeFrom(const ADSecurityLendingEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.htsc.mdc.insight.model.ADSecurityLendingEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rate() != 0) {
    set_rate(from.rate());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.term() != 0) {
    set_term(from.term());
  }
  if (from.totalamount() != 0) {
    set_totalamount(from.totalamount());
  }
  if (from.matchedamount() != 0) {
    set_matchedamount(from.matchedamount());
  }
}

void ADSecurityLendingEntry::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.htsc.mdc.insight.model.ADSecurityLendingEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ADSecurityLendingEntry::CopyFrom(const ADSecurityLendingEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.htsc.mdc.insight.model.ADSecurityLendingEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ADSecurityLendingEntry::IsInitialized() const {
  return true;
}

void ADSecurityLendingEntry::Swap(ADSecurityLendingEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ADSecurityLendingEntry::InternalSwap(ADSecurityLendingEntry* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(rate_, other->rate_);
  swap(level_, other->level_);
  swap(term_, other->term_);
  swap(totalamount_, other->totalamount_);
  swap(matchedamount_, other->matchedamount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ADSecurityLendingEntry::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ADEstimatedSecurityLendingEntry::InitAsDefaultInstance() {
}
class ADEstimatedSecurityLendingEntry::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ADEstimatedSecurityLendingEntry::kLevelFieldNumber;
const int ADEstimatedSecurityLendingEntry::kRateFieldNumber;
const int ADEstimatedSecurityLendingEntry::kTermFieldNumber;
const int ADEstimatedSecurityLendingEntry::kAmountFieldNumber;
const int ADEstimatedSecurityLendingEntry::kPostponeProbabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ADEstimatedSecurityLendingEntry::ADEstimatedSecurityLendingEntry()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry)
}
ADEstimatedSecurityLendingEntry::ADEstimatedSecurityLendingEntry(const ADEstimatedSecurityLendingEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  term_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.term().size() > 0) {
    term_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.term_);
  }
  ::memcpy(&rate_, &from.rate_,
    static_cast<size_t>(reinterpret_cast<char*>(&amount_) -
    reinterpret_cast<char*>(&rate_)) + sizeof(amount_));
  // @@protoc_insertion_point(copy_constructor:com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry)
}

void ADEstimatedSecurityLendingEntry::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ADEstimatedSecurityLendingEntry_MDSecurityLending_2eproto.base);
  term_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&rate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&amount_) -
      reinterpret_cast<char*>(&rate_)) + sizeof(amount_));
}

ADEstimatedSecurityLendingEntry::~ADEstimatedSecurityLendingEntry() {
  // @@protoc_insertion_point(destructor:com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry)
  SharedDtor();
}

void ADEstimatedSecurityLendingEntry::SharedDtor() {
  term_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ADEstimatedSecurityLendingEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ADEstimatedSecurityLendingEntry& ADEstimatedSecurityLendingEntry::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ADEstimatedSecurityLendingEntry_MDSecurityLending_2eproto.base);
  return *internal_default_instance();
}


void ADEstimatedSecurityLendingEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  term_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&rate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&amount_) -
      reinterpret_cast<char*>(&rate_)) + sizeof(amount_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ADEstimatedSecurityLendingEntry::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 Level = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Rate = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          rate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Term = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_term(), ptr, ctx, "com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry.Term");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Amount = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          amount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 PostponeProbability = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          postponeprobability_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ADEstimatedSecurityLendingEntry::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Level = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 Rate = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Term = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_term()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->term().data(), static_cast<int>(this->term().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry.Term"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 Amount = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 PostponeProbability = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &postponeprobability_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ADEstimatedSecurityLendingEntry::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Level = 1;
  if (this->level() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }

  // int64 Rate = 2;
  if (this->rate() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(2, this->rate(), output);
  }

  // string Term = 3;
  if (this->term().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->term().data(), static_cast<int>(this->term().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry.Term");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->term(), output);
  }

  // int64 Amount = 4;
  if (this->amount() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(4, this->amount(), output);
  }

  // int32 PostponeProbability = 5;
  if (this->postponeprobability() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(5, this->postponeprobability(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry)
}

::PROTOBUF_NAMESPACE_ID::uint8* ADEstimatedSecurityLendingEntry::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Level = 1;
  if (this->level() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }

  // int64 Rate = 2;
  if (this->rate() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->rate(), target);
  }

  // string Term = 3;
  if (this->term().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->term().data(), static_cast<int>(this->term().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry.Term");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->term(), target);
  }

  // int64 Amount = 4;
  if (this->amount() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->amount(), target);
  }

  // int32 PostponeProbability = 5;
  if (this->postponeprobability() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->postponeprobability(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry)
  return target;
}

size_t ADEstimatedSecurityLendingEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Term = 3;
  if (this->term().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->term());
  }

  // int64 Rate = 2;
  if (this->rate() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->rate());
  }

  // int32 Level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // int32 PostponeProbability = 5;
  if (this->postponeprobability() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->postponeprobability());
  }

  // int64 Amount = 4;
  if (this->amount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->amount());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ADEstimatedSecurityLendingEntry::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const ADEstimatedSecurityLendingEntry* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ADEstimatedSecurityLendingEntry>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry)
    MergeFrom(*source);
  }
}

void ADEstimatedSecurityLendingEntry::MergeFrom(const ADEstimatedSecurityLendingEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.term().size() > 0) {

    term_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.term_);
  }
  if (from.rate() != 0) {
    set_rate(from.rate());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.postponeprobability() != 0) {
    set_postponeprobability(from.postponeprobability());
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
}

void ADEstimatedSecurityLendingEntry::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ADEstimatedSecurityLendingEntry::CopyFrom(const ADEstimatedSecurityLendingEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.htsc.mdc.insight.model.ADEstimatedSecurityLendingEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ADEstimatedSecurityLendingEntry::IsInitialized() const {
  return true;
}

void ADEstimatedSecurityLendingEntry::Swap(ADEstimatedSecurityLendingEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ADEstimatedSecurityLendingEntry::InternalSwap(ADEstimatedSecurityLendingEntry* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  term_.Swap(&other->term_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(rate_, other->rate_);
  swap(level_, other->level_);
  swap(postponeprobability_, other->postponeprobability_);
  swap(amount_, other->amount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ADEstimatedSecurityLendingEntry::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::htsc::mdc::insight::model::MDSecurityLending* Arena::CreateMaybeMessage< ::com::htsc::mdc::insight::model::MDSecurityLending >(Arena* arena) {
  return Arena::CreateInternal< ::com::htsc::mdc::insight::model::MDSecurityLending >(arena);
}
template<> PROTOBUF_NOINLINE ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry* Arena::CreateMaybeMessage< ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry >(Arena* arena) {
  return Arena::CreateInternal< ::com::htsc::mdc::insight::model::ADValidSecurityLendingEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::com::htsc::mdc::insight::model::ADSecurityLendingEntry* Arena::CreateMaybeMessage< ::com::htsc::mdc::insight::model::ADSecurityLendingEntry >(Arena* arena) {
  return Arena::CreateInternal< ::com::htsc::mdc::insight::model::ADSecurityLendingEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::com::htsc::mdc::insight::model::ADEstimatedSecurityLendingEntry* Arena::CreateMaybeMessage< ::com::htsc::mdc::insight::model::ADEstimatedSecurityLendingEntry >(Arena* arena) {
  return Arena::CreateInternal< ::com::htsc::mdc::insight::model::ADEstimatedSecurityLendingEntry >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MDSpot.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_MDSpot_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_MDSpot_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3008000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3008000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "ESecurityIDSource.pb.h"
#include "ESecurityType.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_MDSpot_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_MDSpot_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_MDSpot_2eproto;
namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {
class MDSpot;
class MDSpotDefaultTypeInternal;
extern MDSpotDefaultTypeInternal _MDSpot_default_instance_;
}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> ::com::htsc::mdc::insight::model::MDSpot* Arena::CreateMaybeMessage<::com::htsc::mdc::insight::model::MDSpot>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {

// ===================================================================

class MDSpot :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.htsc.mdc.insight.model.MDSpot) */ {
 public:
  MDSpot();
  virtual ~MDSpot();

  MDSpot(const MDSpot& from);
  MDSpot(MDSpot&& from) noexcept
    : MDSpot() {
    *this = ::std::move(from);
  }

  inline MDSpot& operator=(const MDSpot& from) {
    CopyFrom(from);
    return *this;
  }
  inline MDSpot& operator=(MDSpot&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MDSpot& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MDSpot* internal_default_instance() {
    return reinterpret_cast<const MDSpot*>(
               &_MDSpot_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MDSpot* other);
  friend void swap(MDSpot& a, MDSpot& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MDSpot* New() const final {
    return CreateMaybeMessage<MDSpot>(nullptr);
  }

  MDSpot* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MDSpot>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MDSpot& from);
  void MergeFrom(const MDSpot& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MDSpot* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.htsc.mdc.insight.model.MDSpot";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_MDSpot_2eproto);
    return ::descriptor_table_MDSpot_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 BuyPriceQueue = 51 [packed = true];
  int buypricequeue_size() const;
  void clear_buypricequeue();
  static const int kBuyPriceQueueFieldNumber = 51;
  ::PROTOBUF_NAMESPACE_ID::int64 buypricequeue(int index) const;
  void set_buypricequeue(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_buypricequeue(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      buypricequeue() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_buypricequeue();

  // repeated int64 BuyOrderQtyQueue = 52 [packed = true];
  int buyorderqtyqueue_size() const;
  void clear_buyorderqtyqueue();
  static const int kBuyOrderQtyQueueFieldNumber = 52;
  ::PROTOBUF_NAMESPACE_ID::int64 buyorderqtyqueue(int index) const;
  void set_buyorderqtyqueue(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_buyorderqtyqueue(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      buyorderqtyqueue() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_buyorderqtyqueue();

  // repeated int64 SellPriceQueue = 53 [packed = true];
  int sellpricequeue_size() const;
  void clear_sellpricequeue();
  static const int kSellPriceQueueFieldNumber = 53;
  ::PROTOBUF_NAMESPACE_ID::int64 sellpricequeue(int index) const;
  void set_sellpricequeue(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_sellpricequeue(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      sellpricequeue() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_sellpricequeue();

  // repeated int64 SellOrderQtyQueue = 54 [packed = true];
  int sellorderqtyqueue_size() const;
  void clear_sellorderqtyqueue();
  static const int kSellOrderQtyQueueFieldNumber = 54;
  ::PROTOBUF_NAMESPACE_ID::int64 sellorderqtyqueue(int index) const;
  void set_sellorderqtyqueue(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_sellorderqtyqueue(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      sellorderqtyqueue() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_sellorderqtyqueue();

  // repeated int64 BuyOrderQueue = 55 [packed = true];
  int buyorderqueue_size() const;
  void clear_buyorderqueue();
  static const int kBuyOrderQueueFieldNumber = 55;
  ::PROTOBUF_NAMESPACE_ID::int64 buyorderqueue(int index) const;
  void set_buyorderqueue(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_buyorderqueue(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      buyorderqueue() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_buyorderqueue();

  // repeated int64 SellOrderQueue = 56 [packed = true];
  int sellorderqueue_size() const;
  void clear_sellorderqueue();
  static const int kSellOrderQueueFieldNumber = 56;
  ::PROTOBUF_NAMESPACE_ID::int64 sellorderqueue(int index) const;
  void set_sellorderqueue(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_sellorderqueue(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      sellorderqueue() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_sellorderqueue();

  // repeated int64 BuyNumOrdersQueue = 57 [packed = true];
  int buynumordersqueue_size() const;
  void clear_buynumordersqueue();
  static const int kBuyNumOrdersQueueFieldNumber = 57;
  ::PROTOBUF_NAMESPACE_ID::int64 buynumordersqueue(int index) const;
  void set_buynumordersqueue(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_buynumordersqueue(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      buynumordersqueue() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_buynumordersqueue();

  // repeated int64 SellNumOrdersQueue = 58 [packed = true];
  int sellnumordersqueue_size() const;
  void clear_sellnumordersqueue();
  static const int kSellNumOrdersQueueFieldNumber = 58;
  ::PROTOBUF_NAMESPACE_ID::int64 sellnumordersqueue(int index) const;
  void set_sellnumordersqueue(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_sellnumordersqueue(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      sellnumordersqueue() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_sellnumordersqueue();

  // string HTSCSecurityID = 1;
  void clear_htscsecurityid();
  static const int kHTSCSecurityIDFieldNumber = 1;
  const std::string& htscsecurityid() const;
  void set_htscsecurityid(const std::string& value);
  void set_htscsecurityid(std::string&& value);
  void set_htscsecurityid(const char* value);
  void set_htscsecurityid(const char* value, size_t size);
  std::string* mutable_htscsecurityid();
  std::string* release_htscsecurityid();
  void set_allocated_htscsecurityid(std::string* htscsecurityid);

  // string TradingPhaseCode = 5;
  void clear_tradingphasecode();
  static const int kTradingPhaseCodeFieldNumber = 5;
  const std::string& tradingphasecode() const;
  void set_tradingphasecode(const std::string& value);
  void set_tradingphasecode(std::string&& value);
  void set_tradingphasecode(const char* value);
  void set_tradingphasecode(const char* value, size_t size);
  std::string* mutable_tradingphasecode();
  std::string* release_tradingphasecode();
  void set_allocated_tradingphasecode(std::string* tradingphasecode);

  // string CommodityContractNumber = 36;
  void clear_commoditycontractnumber();
  static const int kCommodityContractNumberFieldNumber = 36;
  const std::string& commoditycontractnumber() const;
  void set_commoditycontractnumber(const std::string& value);
  void set_commoditycontractnumber(std::string&& value);
  void set_commoditycontractnumber(const char* value);
  void set_commoditycontractnumber(const char* value, size_t size);
  std::string* mutable_commoditycontractnumber();
  std::string* release_commoditycontractnumber();
  void set_allocated_commoditycontractnumber(std::string* commoditycontractnumber);

  // int32 MDDate = 2;
  void clear_mddate();
  static const int kMDDateFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int32 mddate() const;
  void set_mddate(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 MDTime = 3;
  void clear_mdtime();
  static const int kMDTimeFieldNumber = 3;
  ::PROTOBUF_NAMESPACE_ID::int32 mdtime() const;
  void set_mdtime(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int64 DataTimestamp = 4;
  void clear_datatimestamp();
  static const int kDataTimestampFieldNumber = 4;
  ::PROTOBUF_NAMESPACE_ID::int64 datatimestamp() const;
  void set_datatimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);

  // .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
  void clear_securityidsource();
  static const int kSecurityIDSourceFieldNumber = 6;
  ::com::htsc::mdc::model::ESecurityIDSource securityidsource() const;
  void set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value);

  // .com.htsc.mdc.model.ESecurityType securityType = 7;
  void clear_securitytype();
  static const int kSecurityTypeFieldNumber = 7;
  ::com::htsc::mdc::model::ESecurityType securitytype() const;
  void set_securitytype(::com::htsc::mdc::model::ESecurityType value);

  // int64 MaxPx = 8;
  void clear_maxpx();
  static const int kMaxPxFieldNumber = 8;
  ::PROTOBUF_NAMESPACE_ID::int64 maxpx() const;
  void set_maxpx(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 MinPx = 9;
  void clear_minpx();
  static const int kMinPxFieldNumber = 9;
  ::PROTOBUF_NAMESPACE_ID::int64 minpx() const;
  void set_minpx(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 PreClosePx = 10;
  void clear_preclosepx();
  static const int kPreClosePxFieldNumber = 10;
  ::PROTOBUF_NAMESPACE_ID::int64 preclosepx() const;
  void set_preclosepx(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 NumTrades = 11;
  void clear_numtrades();
  static const int kNumTradesFieldNumber = 11;
  ::PROTOBUF_NAMESPACE_ID::int64 numtrades() const;
  void set_numtrades(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 TotalVolumeTrade = 12;
  void clear_totalvolumetrade();
  static const int kTotalVolumeTradeFieldNumber = 12;
  ::PROTOBUF_NAMESPACE_ID::int64 totalvolumetrade() const;
  void set_totalvolumetrade(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 TotalValueTrade = 13;
  void clear_totalvaluetrade();
  static const int kTotalValueTradeFieldNumber = 13;
  ::PROTOBUF_NAMESPACE_ID::int64 totalvaluetrade() const;
  void set_totalvaluetrade(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 TotalWeightTrade = 14;
  void clear_totalweighttrade();
  static const int kTotalWeightTradeFieldNumber = 14;
  ::PROTOBUF_NAMESPACE_ID::int64 totalweighttrade() const;
  void set_totalweighttrade(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 LastPx = 15;
  void clear_lastpx();
  static const int kLastPxFieldNumber = 15;
  ::PROTOBUF_NAMESPACE_ID::int64 lastpx() const;
  void set_lastpx(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 OpenPx = 16;
  void clear_openpx();
  static const int kOpenPxFieldNumber = 16;
  ::PROTOBUF_NAMESPACE_ID::int64 openpx() const;
  void set_openpx(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 ClosePx = 17;
  void clear_closepx();
  static const int kClosePxFieldNumber = 17;
  ::PROTOBUF_NAMESPACE_ID::int64 closepx() const;
  void set_closepx(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 HighPx = 18;
  void clear_highpx();
  static const int kHighPxFieldNumber = 18;
  ::PROTOBUF_NAMESPACE_ID::int64 highpx() const;
  void set_highpx(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 LowPx = 19;
  void clear_lowpx();
  static const int kLowPxFieldNumber = 19;
  ::PROTOBUF_NAMESPACE_ID::int64 lowpx() const;
  void set_lowpx(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 PreOpenInterest = 21;
  void clear_preopeninterest();
  static const int kPreOpenInterestFieldNumber = 21;
  ::PROTOBUF_NAMESPACE_ID::int64 preopeninterest() const;
  void set_preopeninterest(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 PreSettlePrice = 22;
  void clear_presettleprice();
  static const int kPreSettlePriceFieldNumber = 22;
  ::PROTOBUF_NAMESPACE_ID::int64 presettleprice() const;
  void set_presettleprice(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 OpenInterest = 23;
  void clear_openinterest();
  static const int kOpenInterestFieldNumber = 23;
  ::PROTOBUF_NAMESPACE_ID::int64 openinterest() const;
  void set_openinterest(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 SettlePrice = 24;
  void clear_settleprice();
  static const int kSettlePriceFieldNumber = 24;
  ::PROTOBUF_NAMESPACE_ID::int64 settleprice() const;
  void set_settleprice(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 InitOpenInterest = 25;
  void clear_initopeninterest();
  static const int kInitOpenInterestFieldNumber = 25;
  ::PROTOBUF_NAMESPACE_ID::int64 initopeninterest() const;
  void set_initopeninterest(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 InterestChg = 26;
  void clear_interestchg();
  static const int kInterestChgFieldNumber = 26;
  ::PROTOBUF_NAMESPACE_ID::int64 interestchg() const;
  void set_interestchg(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 AveragePx = 27;
  void clear_averagepx();
  static const int kAveragePxFieldNumber = 27;
  ::PROTOBUF_NAMESPACE_ID::int64 averagepx() const;
  void set_averagepx(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 LifeHighPx = 28;
  void clear_lifehighpx();
  static const int kLifeHighPxFieldNumber = 28;
  ::PROTOBUF_NAMESPACE_ID::int64 lifehighpx() const;
  void set_lifehighpx(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int32 TradingDate = 20;
  void clear_tradingdate();
  static const int kTradingDateFieldNumber = 20;
  ::PROTOBUF_NAMESPACE_ID::int32 tradingdate() const;
  void set_tradingdate(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 ExchangeDate = 37;
  void clear_exchangedate();
  static const int kExchangeDateFieldNumber = 37;
  ::PROTOBUF_NAMESPACE_ID::int32 exchangedate() const;
  void set_exchangedate(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int64 LifeLowPx = 29;
  void clear_lifelowpx();
  static const int kLifeLowPxFieldNumber = 29;
  ::PROTOBUF_NAMESPACE_ID::int64 lifelowpx() const;
  void set_lifelowpx(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 BuyPx = 30;
  void clear_buypx();
  static const int kBuyPxFieldNumber = 30;
  ::PROTOBUF_NAMESPACE_ID::int64 buypx() const;
  void set_buypx(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 BuyQty = 31;
  void clear_buyqty();
  static const int kBuyQtyFieldNumber = 31;
  ::PROTOBUF_NAMESPACE_ID::int64 buyqty() const;
  void set_buyqty(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 BuyImplyQty = 32;
  void clear_buyimplyqty();
  static const int kBuyImplyQtyFieldNumber = 32;
  ::PROTOBUF_NAMESPACE_ID::int64 buyimplyqty() const;
  void set_buyimplyqty(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 SellPx = 33;
  void clear_sellpx();
  static const int kSellPxFieldNumber = 33;
  ::PROTOBUF_NAMESPACE_ID::int64 sellpx() const;
  void set_sellpx(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 SellQty = 34;
  void clear_sellqty();
  static const int kSellQtyFieldNumber = 34;
  ::PROTOBUF_NAMESPACE_ID::int64 sellqty() const;
  void set_sellqty(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 SellImplyQty = 35;
  void clear_sellimplyqty();
  static const int kSellImplyQtyFieldNumber = 35;
  ::PROTOBUF_NAMESPACE_ID::int64 sellimplyqty() const;
  void set_sellimplyqty(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int32 ExchangeTime = 38;
  void clear_exchangetime();
  static const int kExchangeTimeFieldNumber = 38;
  ::PROTOBUF_NAMESPACE_ID::int32 exchangetime() const;
  void set_exchangetime(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 DataMultiplePowerOf10 = 59;
  void clear_datamultiplepowerof10();
  static const int kDataMultiplePowerOf10FieldNumber = 59;
  ::PROTOBUF_NAMESPACE_ID::int32 datamultiplepowerof10() const;
  void set_datamultiplepowerof10(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.htsc.mdc.insight.model.MDSpot)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > buypricequeue_;
  mutable std::atomic<int> _buypricequeue_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > buyorderqtyqueue_;
  mutable std::atomic<int> _buyorderqtyqueue_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > sellpricequeue_;
  mutable std::atomic<int> _sellpricequeue_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > sellorderqtyqueue_;
  mutable std::atomic<int> _sellorderqtyqueue_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > buyorderqueue_;
  mutable std::atomic<int> _buyorderqueue_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > sellorderqueue_;
  mutable std::atomic<int> _sellorderqueue_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > buynumordersqueue_;
  mutable std::atomic<int> _buynumordersqueue_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > sellnumordersqueue_;
  mutable std::atomic<int> _sellnumordersqueue_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr htscsecurityid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tradingphasecode_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr commoditycontractnumber_;
  ::PROTOBUF_NAMESPACE_ID::int32 mddate_;
  ::PROTOBUF_NAMESPACE_ID::int32 mdtime_;
  ::PROTOBUF_NAMESPACE_ID::int64 datatimestamp_;
  int securityidsource_;
  int securitytype_;
  ::PROTOBUF_NAMESPACE_ID::int64 maxpx_;
  ::PROTOBUF_NAMESPACE_ID::int64 minpx_;
  ::PROTOBUF_NAMESPACE_ID::int64 preclosepx_;
  ::PROTOBUF_NAMESPACE_ID::int64 numtrades_;
  ::PROTOBUF_NAMESPACE_ID::int64 totalvolumetrade_;
  ::PROTOBUF_NAMESPACE_ID::int64 totalvaluetrade_;
  ::PROTOBUF_NAMESPACE_ID::int64 totalweighttrade_;
  ::PROTOBUF_NAMESPACE_ID::int64 lastpx_;
  ::PROTOBUF_NAMESPACE_ID::int64 openpx_;
  ::PROTOBUF_NAMESPACE_ID::int64 closepx_;
  ::PROTOBUF_NAMESPACE_ID::int64 highpx_;
  ::PROTOBUF_NAMESPACE_ID::int64 lowpx_;
  ::PROTOBUF_NAMESPACE_ID::int64 preopeninterest_;
  ::PROTOBUF_NAMESPACE_ID::int64 presettleprice_;
  ::PROTOBUF_NAMESPACE_ID::int64 openinterest_;
  ::PROTOBUF_NAMESPACE_ID::int64 settleprice_;
  ::PROTOBUF_NAMESPACE_ID::int64 initopeninterest_;
  ::PROTOBUF_NAMESPACE_ID::int64 interestchg_;
  ::PROTOBUF_NAMESPACE_ID::int64 averagepx_;
  ::PROTOBUF_NAMESPACE_ID::int64 lifehighpx_;
  ::PROTOBUF_NAMESPACE_ID::int32 tradingdate_;
  ::PROTOBUF_NAMESPACE_ID::int32 exchangedate_;
  ::PROTOBUF_NAMESPACE_ID::int64 lifelowpx_;
  ::PROTOBUF_NAMESPACE_ID::int64 buypx_;
  ::PROTOBUF_NAMESPACE_ID::int64 buyqty_;
  ::PROTOBUF_NAMESPACE_ID::int64 buyimplyqty_;
  ::PROTOBUF_NAMESPACE_ID::int64 sellpx_;
  ::PROTOBUF_NAMESPACE_ID::int64 sellqty_;
  ::PROTOBUF_NAMESPACE_ID::int64 sellimplyqty_;
  ::PROTOBUF_NAMESPACE_ID::int32 exchangetime_;
  ::PROTOBUF_NAMESPACE_ID::int32 datamultiplepowerof10_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_MDSpot_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MDSpot

// string HTSCSecurityID = 1;
inline void MDSpot::clear_htscsecurityid() {
  htscsecurityid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MDSpot::htscsecurityid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.HTSCSecurityID)
  return htscsecurityid_.GetNoArena();
}
inline void MDSpot::set_htscsecurityid(const std::string& value) {
  
  htscsecurityid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.HTSCSecurityID)
}
inline void MDSpot::set_htscsecurityid(std::string&& value) {
  
  htscsecurityid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.htsc.mdc.insight.model.MDSpot.HTSCSecurityID)
}
inline void MDSpot::set_htscsecurityid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  htscsecurityid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDSpot.HTSCSecurityID)
}
inline void MDSpot::set_htscsecurityid(const char* value, size_t size) {
  
  htscsecurityid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDSpot.HTSCSecurityID)
}
inline std::string* MDSpot::mutable_htscsecurityid() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDSpot.HTSCSecurityID)
  return htscsecurityid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MDSpot::release_htscsecurityid() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDSpot.HTSCSecurityID)
  
  return htscsecurityid_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MDSpot::set_allocated_htscsecurityid(std::string* htscsecurityid) {
  if (htscsecurityid != nullptr) {
    
  } else {
    
  }
  htscsecurityid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), htscsecurityid);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDSpot.HTSCSecurityID)
}

// int32 MDDate = 2;
inline void MDSpot::clear_mddate() {
  mddate_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDSpot::mddate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.MDDate)
  return mddate_;
}
inline void MDSpot::set_mddate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  mddate_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.MDDate)
}

// int32 MDTime = 3;
inline void MDSpot::clear_mdtime() {
  mdtime_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDSpot::mdtime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.MDTime)
  return mdtime_;
}
inline void MDSpot::set_mdtime(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  mdtime_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.MDTime)
}

// int64 DataTimestamp = 4;
inline void MDSpot::clear_datatimestamp() {
  datatimestamp_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::datatimestamp() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.DataTimestamp)
  return datatimestamp_;
}
inline void MDSpot::set_datatimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  datatimestamp_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.DataTimestamp)
}

// string TradingPhaseCode = 5;
inline void MDSpot::clear_tradingphasecode() {
  tradingphasecode_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MDSpot::tradingphasecode() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.TradingPhaseCode)
  return tradingphasecode_.GetNoArena();
}
inline void MDSpot::set_tradingphasecode(const std::string& value) {
  
  tradingphasecode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.TradingPhaseCode)
}
inline void MDSpot::set_tradingphasecode(std::string&& value) {
  
  tradingphasecode_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.htsc.mdc.insight.model.MDSpot.TradingPhaseCode)
}
inline void MDSpot::set_tradingphasecode(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tradingphasecode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDSpot.TradingPhaseCode)
}
inline void MDSpot::set_tradingphasecode(const char* value, size_t size) {
  
  tradingphasecode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDSpot.TradingPhaseCode)
}
inline std::string* MDSpot::mutable_tradingphasecode() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDSpot.TradingPhaseCode)
  return tradingphasecode_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MDSpot::release_tradingphasecode() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDSpot.TradingPhaseCode)
  
  return tradingphasecode_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MDSpot::set_allocated_tradingphasecode(std::string* tradingphasecode) {
  if (tradingphasecode != nullptr) {
    
  } else {
    
  }
  tradingphasecode_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tradingphasecode);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDSpot.TradingPhaseCode)
}

// .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
inline void MDSpot::clear_securityidsource() {
  securityidsource_ = 0;
}
inline ::com::htsc::mdc::model::ESecurityIDSource MDSpot::securityidsource() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.securityIDSource)
  return static_cast< ::com::htsc::mdc::model::ESecurityIDSource >(securityidsource_);
}
inline void MDSpot::set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value) {
  
  securityidsource_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.securityIDSource)
}

// .com.htsc.mdc.model.ESecurityType securityType = 7;
inline void MDSpot::clear_securitytype() {
  securitytype_ = 0;
}
inline ::com::htsc::mdc::model::ESecurityType MDSpot::securitytype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.securityType)
  return static_cast< ::com::htsc::mdc::model::ESecurityType >(securitytype_);
}
inline void MDSpot::set_securitytype(::com::htsc::mdc::model::ESecurityType value) {
  
  securitytype_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.securityType)
}

// int64 MaxPx = 8;
inline void MDSpot::clear_maxpx() {
  maxpx_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::maxpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.MaxPx)
  return maxpx_;
}
inline void MDSpot::set_maxpx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  maxpx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.MaxPx)
}

// int64 MinPx = 9;
inline void MDSpot::clear_minpx() {
  minpx_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::minpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.MinPx)
  return minpx_;
}
inline void MDSpot::set_minpx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  minpx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.MinPx)
}

// int64 PreClosePx = 10;
inline void MDSpot::clear_preclosepx() {
  preclosepx_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::preclosepx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.PreClosePx)
  return preclosepx_;
}
inline void MDSpot::set_preclosepx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  preclosepx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.PreClosePx)
}

// int64 NumTrades = 11;
inline void MDSpot::clear_numtrades() {
  numtrades_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::numtrades() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.NumTrades)
  return numtrades_;
}
inline void MDSpot::set_numtrades(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  numtrades_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.NumTrades)
}

// int64 TotalVolumeTrade = 12;
inline void MDSpot::clear_totalvolumetrade() {
  totalvolumetrade_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::totalvolumetrade() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.TotalVolumeTrade)
  return totalvolumetrade_;
}
inline void MDSpot::set_totalvolumetrade(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  totalvolumetrade_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.TotalVolumeTrade)
}

// int64 TotalValueTrade = 13;
inline void MDSpot::clear_totalvaluetrade() {
  totalvaluetrade_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::totalvaluetrade() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.TotalValueTrade)
  return totalvaluetrade_;
}
inline void MDSpot::set_totalvaluetrade(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  totalvaluetrade_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.TotalValueTrade)
}

// int64 TotalWeightTrade = 14;
inline void MDSpot::clear_totalweighttrade() {
  totalweighttrade_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::totalweighttrade() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.TotalWeightTrade)
  return totalweighttrade_;
}
inline void MDSpot::set_totalweighttrade(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  totalweighttrade_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.TotalWeightTrade)
}

// int64 LastPx = 15;
inline void MDSpot::clear_lastpx() {
  lastpx_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::lastpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.LastPx)
  return lastpx_;
}
inline void MDSpot::set_lastpx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  lastpx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.LastPx)
}

// int64 OpenPx = 16;
inline void MDSpot::clear_openpx() {
  openpx_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::openpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.OpenPx)
  return openpx_;
}
inline void MDSpot::set_openpx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  openpx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.OpenPx)
}

// int64 ClosePx = 17;
inline void MDSpot::clear_closepx() {
  closepx_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::closepx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.ClosePx)
  return closepx_;
}
inline void MDSpot::set_closepx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  closepx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.ClosePx)
}

// int64 HighPx = 18;
inline void MDSpot::clear_highpx() {
  highpx_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::highpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.HighPx)
  return highpx_;
}
inline void MDSpot::set_highpx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  highpx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.HighPx)
}

// int64 LowPx = 19;
inline void MDSpot::clear_lowpx() {
  lowpx_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::lowpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.LowPx)
  return lowpx_;
}
inline void MDSpot::set_lowpx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  lowpx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.LowPx)
}

// int32 TradingDate = 20;
inline void MDSpot::clear_tradingdate() {
  tradingdate_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDSpot::tradingdate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.TradingDate)
  return tradingdate_;
}
inline void MDSpot::set_tradingdate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  tradingdate_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.TradingDate)
}

// int64 PreOpenInterest = 21;
inline void MDSpot::clear_preopeninterest() {
  preopeninterest_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::preopeninterest() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.PreOpenInterest)
  return preopeninterest_;
}
inline void MDSpot::set_preopeninterest(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  preopeninterest_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.PreOpenInterest)
}

// int64 PreSettlePrice = 22;
inline void MDSpot::clear_presettleprice() {
  presettleprice_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::presettleprice() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.PreSettlePrice)
  return presettleprice_;
}
inline void MDSpot::set_presettleprice(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  presettleprice_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.PreSettlePrice)
}

// int64 OpenInterest = 23;
inline void MDSpot::clear_openinterest() {
  openinterest_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::openinterest() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.OpenInterest)
  return openinterest_;
}
inline void MDSpot::set_openinterest(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  openinterest_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.OpenInterest)
}

// int64 SettlePrice = 24;
inline void MDSpot::clear_settleprice() {
  settleprice_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::settleprice() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.SettlePrice)
  return settleprice_;
}
inline void MDSpot::set_settleprice(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  settleprice_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.SettlePrice)
}

// int64 InitOpenInterest = 25;
inline void MDSpot::clear_initopeninterest() {
  initopeninterest_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::initopeninterest() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.InitOpenInterest)
  return initopeninterest_;
}
inline void MDSpot::set_initopeninterest(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  initopeninterest_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.InitOpenInterest)
}

// int64 InterestChg = 26;
inline void MDSpot::clear_interestchg() {
  interestchg_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::interestchg() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.InterestChg)
  return interestchg_;
}
inline void MDSpot::set_interestchg(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  interestchg_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.InterestChg)
}

// int64 AveragePx = 27;
inline void MDSpot::clear_averagepx() {
  averagepx_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::averagepx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.AveragePx)
  return averagepx_;
}
inline void MDSpot::set_averagepx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  averagepx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.AveragePx)
}

// int64 LifeHighPx = 28;
inline void MDSpot::clear_lifehighpx() {
  lifehighpx_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::lifehighpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.LifeHighPx)
  return lifehighpx_;
}
inline void MDSpot::set_lifehighpx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  lifehighpx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.LifeHighPx)
}

// int64 LifeLowPx = 29;
inline void MDSpot::clear_lifelowpx() {
  lifelowpx_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::lifelowpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.LifeLowPx)
  return lifelowpx_;
}
inline void MDSpot::set_lifelowpx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  lifelowpx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.LifeLowPx)
}

// int64 BuyPx = 30;
inline void MDSpot::clear_buypx() {
  buypx_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::buypx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.BuyPx)
  return buypx_;
}
inline void MDSpot::set_buypx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  buypx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.BuyPx)
}

// int64 BuyQty = 31;
inline void MDSpot::clear_buyqty() {
  buyqty_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::buyqty() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.BuyQty)
  return buyqty_;
}
inline void MDSpot::set_buyqty(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  buyqty_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.BuyQty)
}

// int64 BuyImplyQty = 32;
inline void MDSpot::clear_buyimplyqty() {
  buyimplyqty_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::buyimplyqty() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.BuyImplyQty)
  return buyimplyqty_;
}
inline void MDSpot::set_buyimplyqty(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  buyimplyqty_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.BuyImplyQty)
}

// int64 SellPx = 33;
inline void MDSpot::clear_sellpx() {
  sellpx_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::sellpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.SellPx)
  return sellpx_;
}
inline void MDSpot::set_sellpx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  sellpx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.SellPx)
}

// int64 SellQty = 34;
inline void MDSpot::clear_sellqty() {
  sellqty_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::sellqty() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.SellQty)
  return sellqty_;
}
inline void MDSpot::set_sellqty(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  sellqty_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.SellQty)
}

// int64 SellImplyQty = 35;
inline void MDSpot::clear_sellimplyqty() {
  sellimplyqty_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::sellimplyqty() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.SellImplyQty)
  return sellimplyqty_;
}
inline void MDSpot::set_sellimplyqty(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  sellimplyqty_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.SellImplyQty)
}

// string CommodityContractNumber = 36;
inline void MDSpot::clear_commoditycontractnumber() {
  commoditycontractnumber_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MDSpot::commoditycontractnumber() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.CommodityContractNumber)
  return commoditycontractnumber_.GetNoArena();
}
inline void MDSpot::set_commoditycontractnumber(const std::string& value) {
  
  commoditycontractnumber_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.CommodityContractNumber)
}
inline void MDSpot::set_commoditycontractnumber(std::string&& value) {
  
  commoditycontractnumber_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.htsc.mdc.insight.model.MDSpot.CommodityContractNumber)
}
inline void MDSpot::set_commoditycontractnumber(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  commoditycontractnumber_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDSpot.CommodityContractNumber)
}
inline void MDSpot::set_commoditycontractnumber(const char* value, size_t size) {
  
  commoditycontractnumber_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDSpot.CommodityContractNumber)
}
inline std::string* MDSpot::mutable_commoditycontractnumber() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDSpot.CommodityContractNumber)
  return commoditycontractnumber_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MDSpot::release_commoditycontractnumber() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDSpot.CommodityContractNumber)
  
  return commoditycontractnumber_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MDSpot::set_allocated_commoditycontractnumber(std::string* commoditycontractnumber) {
  if (commoditycontractnumber != nullptr) {
    
  } else {
    
  }
  commoditycontractnumber_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), commoditycontractnumber);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDSpot.CommodityContractNumber)
}

// int32 ExchangeDate = 37;
inline void MDSpot::clear_exchangedate() {
  exchangedate_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDSpot::exchangedate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.ExchangeDate)
  return exchangedate_;
}
inline void MDSpot::set_exchangedate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  exchangedate_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.ExchangeDate)
}

// int32 ExchangeTime = 38;
inline void MDSpot::clear_exchangetime() {
  exchangetime_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDSpot::exchangetime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.ExchangeTime)
  return exchangetime_;
}
inline void MDSpot::set_exchangetime(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  exchangetime_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.ExchangeTime)
}

// repeated int64 BuyPriceQueue = 51 [packed = true];
inline int MDSpot::buypricequeue_size() const {
  return buypricequeue_.size();
}
inline void MDSpot::clear_buypricequeue() {
  buypricequeue_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::buypricequeue(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.BuyPriceQueue)
  return buypricequeue_.Get(index);
}
inline void MDSpot::set_buypricequeue(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  buypricequeue_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.BuyPriceQueue)
}
inline void MDSpot::add_buypricequeue(::PROTOBUF_NAMESPACE_ID::int64 value) {
  buypricequeue_.Add(value);
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.MDSpot.BuyPriceQueue)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
MDSpot::buypricequeue() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.MDSpot.BuyPriceQueue)
  return buypricequeue_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
MDSpot::mutable_buypricequeue() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.MDSpot.BuyPriceQueue)
  return &buypricequeue_;
}

// repeated int64 BuyOrderQtyQueue = 52 [packed = true];
inline int MDSpot::buyorderqtyqueue_size() const {
  return buyorderqtyqueue_.size();
}
inline void MDSpot::clear_buyorderqtyqueue() {
  buyorderqtyqueue_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::buyorderqtyqueue(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.BuyOrderQtyQueue)
  return buyorderqtyqueue_.Get(index);
}
inline void MDSpot::set_buyorderqtyqueue(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  buyorderqtyqueue_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.BuyOrderQtyQueue)
}
inline void MDSpot::add_buyorderqtyqueue(::PROTOBUF_NAMESPACE_ID::int64 value) {
  buyorderqtyqueue_.Add(value);
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.MDSpot.BuyOrderQtyQueue)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
MDSpot::buyorderqtyqueue() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.MDSpot.BuyOrderQtyQueue)
  return buyorderqtyqueue_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
MDSpot::mutable_buyorderqtyqueue() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.MDSpot.BuyOrderQtyQueue)
  return &buyorderqtyqueue_;
}

// repeated int64 SellPriceQueue = 53 [packed = true];
inline int MDSpot::sellpricequeue_size() const {
  return sellpricequeue_.size();
}
inline void MDSpot::clear_sellpricequeue() {
  sellpricequeue_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::sellpricequeue(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.SellPriceQueue)
  return sellpricequeue_.Get(index);
}
inline void MDSpot::set_sellpricequeue(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  sellpricequeue_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.SellPriceQueue)
}
inline void MDSpot::add_sellpricequeue(::PROTOBUF_NAMESPACE_ID::int64 value) {
  sellpricequeue_.Add(value);
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.MDSpot.SellPriceQueue)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
MDSpot::sellpricequeue() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.MDSpot.SellPriceQueue)
  return sellpricequeue_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
MDSpot::mutable_sellpricequeue() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.MDSpot.SellPriceQueue)
  return &sellpricequeue_;
}

// repeated int64 SellOrderQtyQueue = 54 [packed = true];
inline int MDSpot::sellorderqtyqueue_size() const {
  return sellorderqtyqueue_.size();
}
inline void MDSpot::clear_sellorderqtyqueue() {
  sellorderqtyqueue_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::sellorderqtyqueue(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.SellOrderQtyQueue)
  return sellorderqtyqueue_.Get(index);
}
inline void MDSpot::set_sellorderqtyqueue(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  sellorderqtyqueue_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.SellOrderQtyQueue)
}
inline void MDSpot::add_sellorderqtyqueue(::PROTOBUF_NAMESPACE_ID::int64 value) {
  sellorderqtyqueue_.Add(value);
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.MDSpot.SellOrderQtyQueue)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
MDSpot::sellorderqtyqueue() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.MDSpot.SellOrderQtyQueue)
  return sellorderqtyqueue_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
MDSpot::mutable_sellorderqtyqueue() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.MDSpot.SellOrderQtyQueue)
  return &sellorderqtyqueue_;
}

// repeated int64 BuyOrderQueue = 55 [packed = true];
inline int MDSpot::buyorderqueue_size() const {
  return buyorderqueue_.size();
}
inline void MDSpot::clear_buyorderqueue() {
  buyorderqueue_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::buyorderqueue(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.BuyOrderQueue)
  return buyorderqueue_.Get(index);
}
inline void MDSpot::set_buyorderqueue(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  buyorderqueue_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.BuyOrderQueue)
}
inline void MDSpot::add_buyorderqueue(::PROTOBUF_NAMESPACE_ID::int64 value) {
  buyorderqueue_.Add(value);
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.MDSpot.BuyOrderQueue)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
MDSpot::buyorderqueue() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.MDSpot.BuyOrderQueue)
  return buyorderqueue_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
MDSpot::mutable_buyorderqueue() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.MDSpot.BuyOrderQueue)
  return &buyorderqueue_;
}

// repeated int64 SellOrderQueue = 56 [packed = true];
inline int MDSpot::sellorderqueue_size() const {
  return sellorderqueue_.size();
}
inline void MDSpot::clear_sellorderqueue() {
  sellorderqueue_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::sellorderqueue(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.SellOrderQueue)
  return sellorderqueue_.Get(index);
}
inline void MDSpot::set_sellorderqueue(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  sellorderqueue_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.SellOrderQueue)
}
inline void MDSpot::add_sellorderqueue(::PROTOBUF_NAMESPACE_ID::int64 value) {
  sellorderqueue_.Add(value);
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.MDSpot.SellOrderQueue)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
MDSpot::sellorderqueue() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.MDSpot.SellOrderQueue)
  return sellorderqueue_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
MDSpot::mutable_sellorderqueue() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.MDSpot.SellOrderQueue)
  return &sellorderqueue_;
}

// repeated int64 BuyNumOrdersQueue = 57 [packed = true];
inline int MDSpot::buynumordersqueue_size() const {
  return buynumordersqueue_.size();
}
inline void MDSpot::clear_buynumordersqueue() {
  buynumordersqueue_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::buynumordersqueue(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.BuyNumOrdersQueue)
  return buynumordersqueue_.Get(index);
}
inline void MDSpot::set_buynumordersqueue(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  buynumordersqueue_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.BuyNumOrdersQueue)
}
inline void MDSpot::add_buynumordersqueue(::PROTOBUF_NAMESPACE_ID::int64 value) {
  buynumordersqueue_.Add(value);
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.MDSpot.BuyNumOrdersQueue)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
MDSpot::buynumordersqueue() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.MDSpot.BuyNumOrdersQueue)
  return buynumordersqueue_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
MDSpot::mutable_buynumordersqueue() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.MDSpot.BuyNumOrdersQueue)
  return &buynumordersqueue_;
}

// repeated int64 SellNumOrdersQueue = 58 [packed = true];
inline int MDSpot::sellnumordersqueue_size() const {
  return sellnumordersqueue_.size();
}
inline void MDSpot::clear_sellnumordersqueue() {
  sellnumordersqueue_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDSpot::sellnumordersqueue(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.SellNumOrdersQueue)
  return sellnumordersqueue_.Get(index);
}
inline void MDSpot::set_sellnumordersqueue(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  sellnumordersqueue_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.SellNumOrdersQueue)
}
inline void MDSpot::add_sellnumordersqueue(::PROTOBUF_NAMESPACE_ID::int64 value) {
  sellnumordersqueue_.Add(value);
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.MDSpot.SellNumOrdersQueue)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
MDSpot::sellnumordersqueue() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.MDSpot.SellNumOrdersQueue)
  return sellnumordersqueue_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
MDSpot::mutable_sellnumordersqueue() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.MDSpot.SellNumOrdersQueue)
  return &sellnumordersqueue_;
}

// int32 DataMultiplePowerOf10 = 59;
inline void MDSpot::clear_datamultiplepowerof10() {
  datamultiplepowerof10_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDSpot::datamultiplepowerof10() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDSpot.DataMultiplePowerOf10)
  return datamultiplepowerof10_;
}
inline void MDSpot::set_datamultiplepowerof10(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  datamultiplepowerof10_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDSpot.DataMultiplePowerOf10)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_MDSpot_2eproto

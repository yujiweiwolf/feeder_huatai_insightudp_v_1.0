// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MDUSATransaction.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_MDUSATransaction_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_MDUSATransaction_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3008000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3008000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "ESecurityType.pb.h"
#include "ESecurityIDSource.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_MDUSATransaction_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_MDUSATransaction_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_MDUSATransaction_2eproto;
namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {
class MDUSATransaction;
class MDUSATransactionDefaultTypeInternal;
extern MDUSATransactionDefaultTypeInternal _MDUSATransaction_default_instance_;
}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> ::com::htsc::mdc::insight::model::MDUSATransaction* Arena::CreateMaybeMessage<::com::htsc::mdc::insight::model::MDUSATransaction>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {

// ===================================================================

class MDUSATransaction :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.htsc.mdc.insight.model.MDUSATransaction) */ {
 public:
  MDUSATransaction();
  virtual ~MDUSATransaction();

  MDUSATransaction(const MDUSATransaction& from);
  MDUSATransaction(MDUSATransaction&& from) noexcept
    : MDUSATransaction() {
    *this = ::std::move(from);
  }

  inline MDUSATransaction& operator=(const MDUSATransaction& from) {
    CopyFrom(from);
    return *this;
  }
  inline MDUSATransaction& operator=(MDUSATransaction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MDUSATransaction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MDUSATransaction* internal_default_instance() {
    return reinterpret_cast<const MDUSATransaction*>(
               &_MDUSATransaction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MDUSATransaction* other);
  friend void swap(MDUSATransaction& a, MDUSATransaction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MDUSATransaction* New() const final {
    return CreateMaybeMessage<MDUSATransaction>(nullptr);
  }

  MDUSATransaction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MDUSATransaction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MDUSATransaction& from);
  void MergeFrom(const MDUSATransaction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MDUSATransaction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.htsc.mdc.insight.model.MDUSATransaction";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_MDUSATransaction_2eproto);
    return ::descriptor_table_MDUSATransaction_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string HTSCSecurityID = 1;
  void clear_htscsecurityid();
  static const int kHTSCSecurityIDFieldNumber = 1;
  const std::string& htscsecurityid() const;
  void set_htscsecurityid(const std::string& value);
  void set_htscsecurityid(std::string&& value);
  void set_htscsecurityid(const char* value);
  void set_htscsecurityid(const char* value, size_t size);
  std::string* mutable_htscsecurityid();
  std::string* release_htscsecurityid();
  void set_allocated_htscsecurityid(std::string* htscsecurityid);

  // string TradeNum = 11;
  void clear_tradenum();
  static const int kTradeNumFieldNumber = 11;
  const std::string& tradenum() const;
  void set_tradenum(const std::string& value);
  void set_tradenum(std::string&& value);
  void set_tradenum(const char* value);
  void set_tradenum(const char* value, size_t size);
  std::string* mutable_tradenum();
  std::string* release_tradenum();
  void set_allocated_tradenum(std::string* tradenum);

  // string OriginalTradeNum = 12;
  void clear_originaltradenum();
  static const int kOriginalTradeNumFieldNumber = 12;
  const std::string& originaltradenum() const;
  void set_originaltradenum(const std::string& value);
  void set_originaltradenum(std::string&& value);
  void set_originaltradenum(const char* value);
  void set_originaltradenum(const char* value, size_t size);
  std::string* mutable_originaltradenum();
  std::string* release_originaltradenum();
  void set_allocated_originaltradenum(std::string* originaltradenum);

  // string SaleConditionLV1 = 22;
  void clear_saleconditionlv1();
  static const int kSaleConditionLV1FieldNumber = 22;
  const std::string& saleconditionlv1() const;
  void set_saleconditionlv1(const std::string& value);
  void set_saleconditionlv1(std::string&& value);
  void set_saleconditionlv1(const char* value);
  void set_saleconditionlv1(const char* value, size_t size);
  std::string* mutable_saleconditionlv1();
  std::string* release_saleconditionlv1();
  void set_allocated_saleconditionlv1(std::string* saleconditionlv1);

  // string SaleConditionLV2 = 23;
  void clear_saleconditionlv2();
  static const int kSaleConditionLV2FieldNumber = 23;
  const std::string& saleconditionlv2() const;
  void set_saleconditionlv2(const std::string& value);
  void set_saleconditionlv2(std::string&& value);
  void set_saleconditionlv2(const char* value);
  void set_saleconditionlv2(const char* value, size_t size);
  std::string* mutable_saleconditionlv2();
  std::string* release_saleconditionlv2();
  void set_allocated_saleconditionlv2(std::string* saleconditionlv2);

  // string SaleConditionLV3 = 24;
  void clear_saleconditionlv3();
  static const int kSaleConditionLV3FieldNumber = 24;
  const std::string& saleconditionlv3() const;
  void set_saleconditionlv3(const std::string& value);
  void set_saleconditionlv3(std::string&& value);
  void set_saleconditionlv3(const char* value);
  void set_saleconditionlv3(const char* value, size_t size);
  std::string* mutable_saleconditionlv3();
  std::string* release_saleconditionlv3();
  void set_allocated_saleconditionlv3(std::string* saleconditionlv3);

  // string SaleConditionLV4 = 25;
  void clear_saleconditionlv4();
  static const int kSaleConditionLV4FieldNumber = 25;
  const std::string& saleconditionlv4() const;
  void set_saleconditionlv4(const std::string& value);
  void set_saleconditionlv4(std::string&& value);
  void set_saleconditionlv4(const char* value);
  void set_saleconditionlv4(const char* value, size_t size);
  std::string* mutable_saleconditionlv4();
  std::string* release_saleconditionlv4();
  void set_allocated_saleconditionlv4(std::string* saleconditionlv4);

  // int32 MDDate = 2;
  void clear_mddate();
  static const int kMDDateFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int32 mddate() const;
  void set_mddate(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 MDTime = 3;
  void clear_mdtime();
  static const int kMDTimeFieldNumber = 3;
  ::PROTOBUF_NAMESPACE_ID::int32 mdtime() const;
  void set_mdtime(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int64 DataTimestamp = 4;
  void clear_datatimestamp();
  static const int kDataTimestampFieldNumber = 4;
  ::PROTOBUF_NAMESPACE_ID::int64 datatimestamp() const;
  void set_datatimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);

  // .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 5;
  void clear_securityidsource();
  static const int kSecurityIDSourceFieldNumber = 5;
  ::com::htsc::mdc::model::ESecurityIDSource securityidsource() const;
  void set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value);

  // .com.htsc.mdc.model.ESecurityType securityType = 6;
  void clear_securitytype();
  static const int kSecurityTypeFieldNumber = 6;
  ::com::htsc::mdc::model::ESecurityType securitytype() const;
  void set_securitytype(::com::htsc::mdc::model::ESecurityType value);

  // int32 ExchangeDate = 7;
  void clear_exchangedate();
  static const int kExchangeDateFieldNumber = 7;
  ::PROTOBUF_NAMESPACE_ID::int32 exchangedate() const;
  void set_exchangedate(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 ExchangeTime = 8;
  void clear_exchangetime();
  static const int kExchangeTimeFieldNumber = 8;
  ::PROTOBUF_NAMESPACE_ID::int32 exchangetime() const;
  void set_exchangetime(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 Nanosecond = 9;
  void clear_nanosecond();
  static const int kNanosecondFieldNumber = 9;
  ::PROTOBUF_NAMESPACE_ID::int32 nanosecond() const;
  void set_nanosecond(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 ChannelNo = 10;
  void clear_channelno();
  static const int kChannelNoFieldNumber = 10;
  ::PROTOBUF_NAMESPACE_ID::int32 channelno() const;
  void set_channelno(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int64 TradeBuyNo = 13;
  void clear_tradebuyno();
  static const int kTradeBuyNoFieldNumber = 13;
  ::PROTOBUF_NAMESPACE_ID::int64 tradebuyno() const;
  void set_tradebuyno(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 TradeSellNo = 14;
  void clear_tradesellno();
  static const int kTradeSellNoFieldNumber = 14;
  ::PROTOBUF_NAMESPACE_ID::int64 tradesellno() const;
  void set_tradesellno(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int32 TradeType = 15;
  void clear_tradetype();
  static const int kTradeTypeFieldNumber = 15;
  ::PROTOBUF_NAMESPACE_ID::int32 tradetype() const;
  void set_tradetype(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 TradeBSFlag = 16;
  void clear_tradebsflag();
  static const int kTradeBSFlagFieldNumber = 16;
  ::PROTOBUF_NAMESPACE_ID::int32 tradebsflag() const;
  void set_tradebsflag(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int64 TradePrice = 17;
  void clear_tradeprice();
  static const int kTradePriceFieldNumber = 17;
  ::PROTOBUF_NAMESPACE_ID::int64 tradeprice() const;
  void set_tradeprice(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 TradeQty = 18;
  void clear_tradeqty();
  static const int kTradeQtyFieldNumber = 18;
  ::PROTOBUF_NAMESPACE_ID::int64 tradeqty() const;
  void set_tradeqty(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 TradeMoney = 19;
  void clear_trademoney();
  static const int kTradeMoneyFieldNumber = 19;
  ::PROTOBUF_NAMESPACE_ID::int64 trademoney() const;
  void set_trademoney(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 NAVOffsetAmount = 20;
  void clear_navoffsetamount();
  static const int kNAVOffsetAmountFieldNumber = 20;
  ::PROTOBUF_NAMESPACE_ID::int64 navoffsetamount() const;
  void set_navoffsetamount(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 TotalConsolidateVolume = 21;
  void clear_totalconsolidatevolume();
  static const int kTotalConsolidateVolumeFieldNumber = 21;
  ::PROTOBUF_NAMESPACE_ID::int64 totalconsolidatevolume() const;
  void set_totalconsolidatevolume(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int32 TrackingNum = 26;
  void clear_trackingnum();
  static const int kTrackingNumFieldNumber = 26;
  ::PROTOBUF_NAMESPACE_ID::int32 trackingnum() const;
  void set_trackingnum(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 DataMultiplePowerOf10 = 27;
  void clear_datamultiplepowerof10();
  static const int kDataMultiplePowerOf10FieldNumber = 27;
  ::PROTOBUF_NAMESPACE_ID::int32 datamultiplepowerof10() const;
  void set_datamultiplepowerof10(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int64 DataIndex = 29;
  void clear_dataindex();
  static const int kDataIndexFieldNumber = 29;
  ::PROTOBUF_NAMESPACE_ID::int64 dataindex() const;
  void set_dataindex(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int32 TimeIndex = 28;
  void clear_timeindex();
  static const int kTimeIndexFieldNumber = 28;
  ::PROTOBUF_NAMESPACE_ID::int32 timeindex() const;
  void set_timeindex(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.htsc.mdc.insight.model.MDUSATransaction)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr htscsecurityid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tradenum_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr originaltradenum_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr saleconditionlv1_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr saleconditionlv2_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr saleconditionlv3_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr saleconditionlv4_;
  ::PROTOBUF_NAMESPACE_ID::int32 mddate_;
  ::PROTOBUF_NAMESPACE_ID::int32 mdtime_;
  ::PROTOBUF_NAMESPACE_ID::int64 datatimestamp_;
  int securityidsource_;
  int securitytype_;
  ::PROTOBUF_NAMESPACE_ID::int32 exchangedate_;
  ::PROTOBUF_NAMESPACE_ID::int32 exchangetime_;
  ::PROTOBUF_NAMESPACE_ID::int32 nanosecond_;
  ::PROTOBUF_NAMESPACE_ID::int32 channelno_;
  ::PROTOBUF_NAMESPACE_ID::int64 tradebuyno_;
  ::PROTOBUF_NAMESPACE_ID::int64 tradesellno_;
  ::PROTOBUF_NAMESPACE_ID::int32 tradetype_;
  ::PROTOBUF_NAMESPACE_ID::int32 tradebsflag_;
  ::PROTOBUF_NAMESPACE_ID::int64 tradeprice_;
  ::PROTOBUF_NAMESPACE_ID::int64 tradeqty_;
  ::PROTOBUF_NAMESPACE_ID::int64 trademoney_;
  ::PROTOBUF_NAMESPACE_ID::int64 navoffsetamount_;
  ::PROTOBUF_NAMESPACE_ID::int64 totalconsolidatevolume_;
  ::PROTOBUF_NAMESPACE_ID::int32 trackingnum_;
  ::PROTOBUF_NAMESPACE_ID::int32 datamultiplepowerof10_;
  ::PROTOBUF_NAMESPACE_ID::int64 dataindex_;
  ::PROTOBUF_NAMESPACE_ID::int32 timeindex_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_MDUSATransaction_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MDUSATransaction

// string HTSCSecurityID = 1;
inline void MDUSATransaction::clear_htscsecurityid() {
  htscsecurityid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MDUSATransaction::htscsecurityid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDUSATransaction.HTSCSecurityID)
  return htscsecurityid_.GetNoArena();
}
inline void MDUSATransaction::set_htscsecurityid(const std::string& value) {
  
  htscsecurityid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDUSATransaction.HTSCSecurityID)
}
inline void MDUSATransaction::set_htscsecurityid(std::string&& value) {
  
  htscsecurityid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.htsc.mdc.insight.model.MDUSATransaction.HTSCSecurityID)
}
inline void MDUSATransaction::set_htscsecurityid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  htscsecurityid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDUSATransaction.HTSCSecurityID)
}
inline void MDUSATransaction::set_htscsecurityid(const char* value, size_t size) {
  
  htscsecurityid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDUSATransaction.HTSCSecurityID)
}
inline std::string* MDUSATransaction::mutable_htscsecurityid() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDUSATransaction.HTSCSecurityID)
  return htscsecurityid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MDUSATransaction::release_htscsecurityid() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDUSATransaction.HTSCSecurityID)
  
  return htscsecurityid_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MDUSATransaction::set_allocated_htscsecurityid(std::string* htscsecurityid) {
  if (htscsecurityid != nullptr) {
    
  } else {
    
  }
  htscsecurityid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), htscsecurityid);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDUSATransaction.HTSCSecurityID)
}

// int32 MDDate = 2;
inline void MDUSATransaction::clear_mddate() {
  mddate_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDUSATransaction::mddate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDUSATransaction.MDDate)
  return mddate_;
}
inline void MDUSATransaction::set_mddate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  mddate_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDUSATransaction.MDDate)
}

// int32 MDTime = 3;
inline void MDUSATransaction::clear_mdtime() {
  mdtime_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDUSATransaction::mdtime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDUSATransaction.MDTime)
  return mdtime_;
}
inline void MDUSATransaction::set_mdtime(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  mdtime_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDUSATransaction.MDTime)
}

// int64 DataTimestamp = 4;
inline void MDUSATransaction::clear_datatimestamp() {
  datatimestamp_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDUSATransaction::datatimestamp() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDUSATransaction.DataTimestamp)
  return datatimestamp_;
}
inline void MDUSATransaction::set_datatimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  datatimestamp_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDUSATransaction.DataTimestamp)
}

// .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 5;
inline void MDUSATransaction::clear_securityidsource() {
  securityidsource_ = 0;
}
inline ::com::htsc::mdc::model::ESecurityIDSource MDUSATransaction::securityidsource() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDUSATransaction.securityIDSource)
  return static_cast< ::com::htsc::mdc::model::ESecurityIDSource >(securityidsource_);
}
inline void MDUSATransaction::set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value) {
  
  securityidsource_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDUSATransaction.securityIDSource)
}

// .com.htsc.mdc.model.ESecurityType securityType = 6;
inline void MDUSATransaction::clear_securitytype() {
  securitytype_ = 0;
}
inline ::com::htsc::mdc::model::ESecurityType MDUSATransaction::securitytype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDUSATransaction.securityType)
  return static_cast< ::com::htsc::mdc::model::ESecurityType >(securitytype_);
}
inline void MDUSATransaction::set_securitytype(::com::htsc::mdc::model::ESecurityType value) {
  
  securitytype_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDUSATransaction.securityType)
}

// int32 ExchangeDate = 7;
inline void MDUSATransaction::clear_exchangedate() {
  exchangedate_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDUSATransaction::exchangedate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDUSATransaction.ExchangeDate)
  return exchangedate_;
}
inline void MDUSATransaction::set_exchangedate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  exchangedate_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDUSATransaction.ExchangeDate)
}

// int32 ExchangeTime = 8;
inline void MDUSATransaction::clear_exchangetime() {
  exchangetime_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDUSATransaction::exchangetime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDUSATransaction.ExchangeTime)
  return exchangetime_;
}
inline void MDUSATransaction::set_exchangetime(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  exchangetime_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDUSATransaction.ExchangeTime)
}

// int32 Nanosecond = 9;
inline void MDUSATransaction::clear_nanosecond() {
  nanosecond_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDUSATransaction::nanosecond() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDUSATransaction.Nanosecond)
  return nanosecond_;
}
inline void MDUSATransaction::set_nanosecond(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  nanosecond_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDUSATransaction.Nanosecond)
}

// int32 ChannelNo = 10;
inline void MDUSATransaction::clear_channelno() {
  channelno_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDUSATransaction::channelno() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDUSATransaction.ChannelNo)
  return channelno_;
}
inline void MDUSATransaction::set_channelno(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  channelno_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDUSATransaction.ChannelNo)
}

// string TradeNum = 11;
inline void MDUSATransaction::clear_tradenum() {
  tradenum_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MDUSATransaction::tradenum() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDUSATransaction.TradeNum)
  return tradenum_.GetNoArena();
}
inline void MDUSATransaction::set_tradenum(const std::string& value) {
  
  tradenum_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDUSATransaction.TradeNum)
}
inline void MDUSATransaction::set_tradenum(std::string&& value) {
  
  tradenum_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.htsc.mdc.insight.model.MDUSATransaction.TradeNum)
}
inline void MDUSATransaction::set_tradenum(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tradenum_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDUSATransaction.TradeNum)
}
inline void MDUSATransaction::set_tradenum(const char* value, size_t size) {
  
  tradenum_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDUSATransaction.TradeNum)
}
inline std::string* MDUSATransaction::mutable_tradenum() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDUSATransaction.TradeNum)
  return tradenum_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MDUSATransaction::release_tradenum() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDUSATransaction.TradeNum)
  
  return tradenum_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MDUSATransaction::set_allocated_tradenum(std::string* tradenum) {
  if (tradenum != nullptr) {
    
  } else {
    
  }
  tradenum_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tradenum);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDUSATransaction.TradeNum)
}

// string OriginalTradeNum = 12;
inline void MDUSATransaction::clear_originaltradenum() {
  originaltradenum_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MDUSATransaction::originaltradenum() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDUSATransaction.OriginalTradeNum)
  return originaltradenum_.GetNoArena();
}
inline void MDUSATransaction::set_originaltradenum(const std::string& value) {
  
  originaltradenum_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDUSATransaction.OriginalTradeNum)
}
inline void MDUSATransaction::set_originaltradenum(std::string&& value) {
  
  originaltradenum_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.htsc.mdc.insight.model.MDUSATransaction.OriginalTradeNum)
}
inline void MDUSATransaction::set_originaltradenum(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  originaltradenum_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDUSATransaction.OriginalTradeNum)
}
inline void MDUSATransaction::set_originaltradenum(const char* value, size_t size) {
  
  originaltradenum_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDUSATransaction.OriginalTradeNum)
}
inline std::string* MDUSATransaction::mutable_originaltradenum() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDUSATransaction.OriginalTradeNum)
  return originaltradenum_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MDUSATransaction::release_originaltradenum() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDUSATransaction.OriginalTradeNum)
  
  return originaltradenum_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MDUSATransaction::set_allocated_originaltradenum(std::string* originaltradenum) {
  if (originaltradenum != nullptr) {
    
  } else {
    
  }
  originaltradenum_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), originaltradenum);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDUSATransaction.OriginalTradeNum)
}

// int64 TradeBuyNo = 13;
inline void MDUSATransaction::clear_tradebuyno() {
  tradebuyno_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDUSATransaction::tradebuyno() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDUSATransaction.TradeBuyNo)
  return tradebuyno_;
}
inline void MDUSATransaction::set_tradebuyno(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  tradebuyno_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDUSATransaction.TradeBuyNo)
}

// int64 TradeSellNo = 14;
inline void MDUSATransaction::clear_tradesellno() {
  tradesellno_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDUSATransaction::tradesellno() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDUSATransaction.TradeSellNo)
  return tradesellno_;
}
inline void MDUSATransaction::set_tradesellno(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  tradesellno_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDUSATransaction.TradeSellNo)
}

// int32 TradeType = 15;
inline void MDUSATransaction::clear_tradetype() {
  tradetype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDUSATransaction::tradetype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDUSATransaction.TradeType)
  return tradetype_;
}
inline void MDUSATransaction::set_tradetype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  tradetype_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDUSATransaction.TradeType)
}

// int32 TradeBSFlag = 16;
inline void MDUSATransaction::clear_tradebsflag() {
  tradebsflag_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDUSATransaction::tradebsflag() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDUSATransaction.TradeBSFlag)
  return tradebsflag_;
}
inline void MDUSATransaction::set_tradebsflag(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  tradebsflag_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDUSATransaction.TradeBSFlag)
}

// int64 TradePrice = 17;
inline void MDUSATransaction::clear_tradeprice() {
  tradeprice_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDUSATransaction::tradeprice() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDUSATransaction.TradePrice)
  return tradeprice_;
}
inline void MDUSATransaction::set_tradeprice(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  tradeprice_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDUSATransaction.TradePrice)
}

// int64 TradeQty = 18;
inline void MDUSATransaction::clear_tradeqty() {
  tradeqty_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDUSATransaction::tradeqty() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDUSATransaction.TradeQty)
  return tradeqty_;
}
inline void MDUSATransaction::set_tradeqty(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  tradeqty_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDUSATransaction.TradeQty)
}

// int64 TradeMoney = 19;
inline void MDUSATransaction::clear_trademoney() {
  trademoney_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDUSATransaction::trademoney() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDUSATransaction.TradeMoney)
  return trademoney_;
}
inline void MDUSATransaction::set_trademoney(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  trademoney_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDUSATransaction.TradeMoney)
}

// int64 NAVOffsetAmount = 20;
inline void MDUSATransaction::clear_navoffsetamount() {
  navoffsetamount_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDUSATransaction::navoffsetamount() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDUSATransaction.NAVOffsetAmount)
  return navoffsetamount_;
}
inline void MDUSATransaction::set_navoffsetamount(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  navoffsetamount_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDUSATransaction.NAVOffsetAmount)
}

// int64 TotalConsolidateVolume = 21;
inline void MDUSATransaction::clear_totalconsolidatevolume() {
  totalconsolidatevolume_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDUSATransaction::totalconsolidatevolume() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDUSATransaction.TotalConsolidateVolume)
  return totalconsolidatevolume_;
}
inline void MDUSATransaction::set_totalconsolidatevolume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  totalconsolidatevolume_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDUSATransaction.TotalConsolidateVolume)
}

// string SaleConditionLV1 = 22;
inline void MDUSATransaction::clear_saleconditionlv1() {
  saleconditionlv1_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MDUSATransaction::saleconditionlv1() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDUSATransaction.SaleConditionLV1)
  return saleconditionlv1_.GetNoArena();
}
inline void MDUSATransaction::set_saleconditionlv1(const std::string& value) {
  
  saleconditionlv1_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDUSATransaction.SaleConditionLV1)
}
inline void MDUSATransaction::set_saleconditionlv1(std::string&& value) {
  
  saleconditionlv1_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.htsc.mdc.insight.model.MDUSATransaction.SaleConditionLV1)
}
inline void MDUSATransaction::set_saleconditionlv1(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  saleconditionlv1_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDUSATransaction.SaleConditionLV1)
}
inline void MDUSATransaction::set_saleconditionlv1(const char* value, size_t size) {
  
  saleconditionlv1_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDUSATransaction.SaleConditionLV1)
}
inline std::string* MDUSATransaction::mutable_saleconditionlv1() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDUSATransaction.SaleConditionLV1)
  return saleconditionlv1_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MDUSATransaction::release_saleconditionlv1() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDUSATransaction.SaleConditionLV1)
  
  return saleconditionlv1_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MDUSATransaction::set_allocated_saleconditionlv1(std::string* saleconditionlv1) {
  if (saleconditionlv1 != nullptr) {
    
  } else {
    
  }
  saleconditionlv1_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), saleconditionlv1);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDUSATransaction.SaleConditionLV1)
}

// string SaleConditionLV2 = 23;
inline void MDUSATransaction::clear_saleconditionlv2() {
  saleconditionlv2_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MDUSATransaction::saleconditionlv2() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDUSATransaction.SaleConditionLV2)
  return saleconditionlv2_.GetNoArena();
}
inline void MDUSATransaction::set_saleconditionlv2(const std::string& value) {
  
  saleconditionlv2_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDUSATransaction.SaleConditionLV2)
}
inline void MDUSATransaction::set_saleconditionlv2(std::string&& value) {
  
  saleconditionlv2_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.htsc.mdc.insight.model.MDUSATransaction.SaleConditionLV2)
}
inline void MDUSATransaction::set_saleconditionlv2(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  saleconditionlv2_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDUSATransaction.SaleConditionLV2)
}
inline void MDUSATransaction::set_saleconditionlv2(const char* value, size_t size) {
  
  saleconditionlv2_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDUSATransaction.SaleConditionLV2)
}
inline std::string* MDUSATransaction::mutable_saleconditionlv2() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDUSATransaction.SaleConditionLV2)
  return saleconditionlv2_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MDUSATransaction::release_saleconditionlv2() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDUSATransaction.SaleConditionLV2)
  
  return saleconditionlv2_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MDUSATransaction::set_allocated_saleconditionlv2(std::string* saleconditionlv2) {
  if (saleconditionlv2 != nullptr) {
    
  } else {
    
  }
  saleconditionlv2_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), saleconditionlv2);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDUSATransaction.SaleConditionLV2)
}

// string SaleConditionLV3 = 24;
inline void MDUSATransaction::clear_saleconditionlv3() {
  saleconditionlv3_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MDUSATransaction::saleconditionlv3() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDUSATransaction.SaleConditionLV3)
  return saleconditionlv3_.GetNoArena();
}
inline void MDUSATransaction::set_saleconditionlv3(const std::string& value) {
  
  saleconditionlv3_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDUSATransaction.SaleConditionLV3)
}
inline void MDUSATransaction::set_saleconditionlv3(std::string&& value) {
  
  saleconditionlv3_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.htsc.mdc.insight.model.MDUSATransaction.SaleConditionLV3)
}
inline void MDUSATransaction::set_saleconditionlv3(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  saleconditionlv3_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDUSATransaction.SaleConditionLV3)
}
inline void MDUSATransaction::set_saleconditionlv3(const char* value, size_t size) {
  
  saleconditionlv3_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDUSATransaction.SaleConditionLV3)
}
inline std::string* MDUSATransaction::mutable_saleconditionlv3() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDUSATransaction.SaleConditionLV3)
  return saleconditionlv3_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MDUSATransaction::release_saleconditionlv3() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDUSATransaction.SaleConditionLV3)
  
  return saleconditionlv3_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MDUSATransaction::set_allocated_saleconditionlv3(std::string* saleconditionlv3) {
  if (saleconditionlv3 != nullptr) {
    
  } else {
    
  }
  saleconditionlv3_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), saleconditionlv3);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDUSATransaction.SaleConditionLV3)
}

// string SaleConditionLV4 = 25;
inline void MDUSATransaction::clear_saleconditionlv4() {
  saleconditionlv4_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MDUSATransaction::saleconditionlv4() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDUSATransaction.SaleConditionLV4)
  return saleconditionlv4_.GetNoArena();
}
inline void MDUSATransaction::set_saleconditionlv4(const std::string& value) {
  
  saleconditionlv4_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDUSATransaction.SaleConditionLV4)
}
inline void MDUSATransaction::set_saleconditionlv4(std::string&& value) {
  
  saleconditionlv4_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.htsc.mdc.insight.model.MDUSATransaction.SaleConditionLV4)
}
inline void MDUSATransaction::set_saleconditionlv4(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  saleconditionlv4_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDUSATransaction.SaleConditionLV4)
}
inline void MDUSATransaction::set_saleconditionlv4(const char* value, size_t size) {
  
  saleconditionlv4_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDUSATransaction.SaleConditionLV4)
}
inline std::string* MDUSATransaction::mutable_saleconditionlv4() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDUSATransaction.SaleConditionLV4)
  return saleconditionlv4_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MDUSATransaction::release_saleconditionlv4() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDUSATransaction.SaleConditionLV4)
  
  return saleconditionlv4_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MDUSATransaction::set_allocated_saleconditionlv4(std::string* saleconditionlv4) {
  if (saleconditionlv4 != nullptr) {
    
  } else {
    
  }
  saleconditionlv4_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), saleconditionlv4);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDUSATransaction.SaleConditionLV4)
}

// int32 TrackingNum = 26;
inline void MDUSATransaction::clear_trackingnum() {
  trackingnum_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDUSATransaction::trackingnum() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDUSATransaction.TrackingNum)
  return trackingnum_;
}
inline void MDUSATransaction::set_trackingnum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  trackingnum_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDUSATransaction.TrackingNum)
}

// int32 DataMultiplePowerOf10 = 27;
inline void MDUSATransaction::clear_datamultiplepowerof10() {
  datamultiplepowerof10_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDUSATransaction::datamultiplepowerof10() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDUSATransaction.DataMultiplePowerOf10)
  return datamultiplepowerof10_;
}
inline void MDUSATransaction::set_datamultiplepowerof10(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  datamultiplepowerof10_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDUSATransaction.DataMultiplePowerOf10)
}

// int32 TimeIndex = 28;
inline void MDUSATransaction::clear_timeindex() {
  timeindex_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDUSATransaction::timeindex() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDUSATransaction.TimeIndex)
  return timeindex_;
}
inline void MDUSATransaction::set_timeindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  timeindex_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDUSATransaction.TimeIndex)
}

// int64 DataIndex = 29;
inline void MDUSATransaction::clear_dataindex() {
  dataindex_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDUSATransaction::dataindex() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDUSATransaction.DataIndex)
  return dataindex_;
}
inline void MDUSATransaction::set_dataindex(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  dataindex_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDUSATransaction.DataIndex)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_MDUSATransaction_2eproto

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MDQBQuote.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_MDQBQuote_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_MDQBQuote_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3008000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3008000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "ESecurityIDSource.pb.h"
#include "ESecurityType.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_MDQBQuote_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_MDQBQuote_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_MDQBQuote_2eproto;
namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {
class MDQBQuote;
class MDQBQuoteDefaultTypeInternal;
extern MDQBQuoteDefaultTypeInternal _MDQBQuote_default_instance_;
}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> ::com::htsc::mdc::insight::model::MDQBQuote* Arena::CreateMaybeMessage<::com::htsc::mdc::insight::model::MDQBQuote>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {

// ===================================================================

class MDQBQuote :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.htsc.mdc.insight.model.MDQBQuote) */ {
 public:
  MDQBQuote();
  virtual ~MDQBQuote();

  MDQBQuote(const MDQBQuote& from);
  MDQBQuote(MDQBQuote&& from) noexcept
    : MDQBQuote() {
    *this = ::std::move(from);
  }

  inline MDQBQuote& operator=(const MDQBQuote& from) {
    CopyFrom(from);
    return *this;
  }
  inline MDQBQuote& operator=(MDQBQuote&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MDQBQuote& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MDQBQuote* internal_default_instance() {
    return reinterpret_cast<const MDQBQuote*>(
               &_MDQBQuote_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MDQBQuote* other);
  friend void swap(MDQBQuote& a, MDQBQuote& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MDQBQuote* New() const final {
    return CreateMaybeMessage<MDQBQuote>(nullptr);
  }

  MDQBQuote* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MDQBQuote>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MDQBQuote& from);
  void MergeFrom(const MDQBQuote& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MDQBQuote* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.htsc.mdc.insight.model.MDQBQuote";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_MDQBQuote_2eproto);
    return ::descriptor_table_MDQBQuote_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string HTSCSecurityID = 1;
  void clear_htscsecurityid();
  static const int kHTSCSecurityIDFieldNumber = 1;
  const std::string& htscsecurityid() const;
  void set_htscsecurityid(const std::string& value);
  void set_htscsecurityid(std::string&& value);
  void set_htscsecurityid(const char* value);
  void set_htscsecurityid(const char* value, size_t size);
  std::string* mutable_htscsecurityid();
  std::string* release_htscsecurityid();
  void set_allocated_htscsecurityid(std::string* htscsecurityid);

  // string TradingPhaseCode = 5;
  void clear_tradingphasecode();
  static const int kTradingPhaseCodeFieldNumber = 5;
  const std::string& tradingphasecode() const;
  void set_tradingphasecode(const std::string& value);
  void set_tradingphasecode(std::string&& value);
  void set_tradingphasecode(const char* value);
  void set_tradingphasecode(const char* value, size_t size);
  std::string* mutable_tradingphasecode();
  std::string* release_tradingphasecode();
  void set_allocated_tradingphasecode(std::string* tradingphasecode);

  // string BidComment = 18;
  void clear_bidcomment();
  static const int kBidCommentFieldNumber = 18;
  const std::string& bidcomment() const;
  void set_bidcomment(const std::string& value);
  void set_bidcomment(std::string&& value);
  void set_bidcomment(const char* value);
  void set_bidcomment(const char* value, size_t size);
  std::string* mutable_bidcomment();
  std::string* release_bidcomment();
  void set_allocated_bidcomment(std::string* bidcomment);

  // string BidID = 19;
  void clear_bidid();
  static const int kBidIDFieldNumber = 19;
  const std::string& bidid() const;
  void set_bidid(const std::string& value);
  void set_bidid(std::string&& value);
  void set_bidid(const char* value);
  void set_bidid(const char* value, size_t size);
  std::string* mutable_bidid();
  std::string* release_bidid();
  void set_allocated_bidid(std::string* bidid);

  // string OfferComment = 27;
  void clear_offercomment();
  static const int kOfferCommentFieldNumber = 27;
  const std::string& offercomment() const;
  void set_offercomment(const std::string& value);
  void set_offercomment(std::string&& value);
  void set_offercomment(const char* value);
  void set_offercomment(const char* value, size_t size);
  std::string* mutable_offercomment();
  std::string* release_offercomment();
  void set_allocated_offercomment(std::string* offercomment);

  // string OfferID = 28;
  void clear_offerid();
  static const int kOfferIDFieldNumber = 28;
  const std::string& offerid() const;
  void set_offerid(const std::string& value);
  void set_offerid(std::string&& value);
  void set_offerid(const char* value);
  void set_offerid(const char* value, size_t size);
  std::string* mutable_offerid();
  std::string* release_offerid();
  void set_allocated_offerid(std::string* offerid);

  // int32 MDDate = 2;
  void clear_mddate();
  static const int kMDDateFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int32 mddate() const;
  void set_mddate(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 MDTime = 3;
  void clear_mdtime();
  static const int kMDTimeFieldNumber = 3;
  ::PROTOBUF_NAMESPACE_ID::int32 mdtime() const;
  void set_mdtime(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int64 DataTimestamp = 4;
  void clear_datatimestamp();
  static const int kDataTimestampFieldNumber = 4;
  ::PROTOBUF_NAMESPACE_ID::int64 datatimestamp() const;
  void set_datatimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);

  // .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
  void clear_securityidsource();
  static const int kSecurityIDSourceFieldNumber = 6;
  ::com::htsc::mdc::model::ESecurityIDSource securityidsource() const;
  void set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value);

  // .com.htsc.mdc.model.ESecurityType securityType = 7;
  void clear_securitytype();
  static const int kSecurityTypeFieldNumber = 7;
  ::com::htsc::mdc::model::ESecurityType securitytype() const;
  void set_securitytype(::com::htsc::mdc::model::ESecurityType value);

  // int32 ExchangeDate = 8;
  void clear_exchangedate();
  static const int kExchangeDateFieldNumber = 8;
  ::PROTOBUF_NAMESPACE_ID::int32 exchangedate() const;
  void set_exchangedate(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 ExchangeTime = 9;
  void clear_exchangetime();
  static const int kExchangeTimeFieldNumber = 9;
  ::PROTOBUF_NAMESPACE_ID::int32 exchangetime() const;
  void set_exchangetime(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int64 ApplSeqNum = 11;
  void clear_applseqnum();
  static const int kApplSeqNumFieldNumber = 11;
  ::PROTOBUF_NAMESPACE_ID::int64 applseqnum() const;
  void set_applseqnum(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 BidPx = 12;
  void clear_bidpx();
  static const int kBidPxFieldNumber = 12;
  ::PROTOBUF_NAMESPACE_ID::int64 bidpx() const;
  void set_bidpx(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 BidSize = 13;
  void clear_bidsize();
  static const int kBidSizeFieldNumber = 13;
  ::PROTOBUF_NAMESPACE_ID::int64 bidsize() const;
  void set_bidsize(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int32 ChannelNo = 10;
  void clear_channelno();
  static const int kChannelNoFieldNumber = 10;
  ::PROTOBUF_NAMESPACE_ID::int32 channelno() const;
  void set_channelno(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 BidBargainFlag = 16;
  void clear_bidbargainflag();
  static const int kBidBargainFlagFieldNumber = 16;
  ::PROTOBUF_NAMESPACE_ID::int32 bidbargainflag() const;
  void set_bidbargainflag(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int64 BidYield = 14;
  void clear_bidyield();
  static const int kBidYieldFieldNumber = 14;
  ::PROTOBUF_NAMESPACE_ID::int64 bidyield() const;
  void set_bidyield(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 BidNetPrice = 15;
  void clear_bidnetprice();
  static const int kBidNetPriceFieldNumber = 15;
  ::PROTOBUF_NAMESPACE_ID::int64 bidnetprice() const;
  void set_bidnetprice(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int32 BidRelationFlag = 17;
  void clear_bidrelationflag();
  static const int kBidRelationFlagFieldNumber = 17;
  ::PROTOBUF_NAMESPACE_ID::int32 bidrelationflag() const;
  void set_bidrelationflag(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 BidSsDetect = 20;
  void clear_bidssdetect();
  static const int kBidSsDetectFieldNumber = 20;
  ::PROTOBUF_NAMESPACE_ID::int32 bidssdetect() const;
  void set_bidssdetect(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int64 OfferPx = 21;
  void clear_offerpx();
  static const int kOfferPxFieldNumber = 21;
  ::PROTOBUF_NAMESPACE_ID::int64 offerpx() const;
  void set_offerpx(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 OfferSize = 22;
  void clear_offersize();
  static const int kOfferSizeFieldNumber = 22;
  ::PROTOBUF_NAMESPACE_ID::int64 offersize() const;
  void set_offersize(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 OfferYield = 23;
  void clear_offeryield();
  static const int kOfferYieldFieldNumber = 23;
  ::PROTOBUF_NAMESPACE_ID::int64 offeryield() const;
  void set_offeryield(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 OfferNetPrice = 24;
  void clear_offernetprice();
  static const int kOfferNetPriceFieldNumber = 24;
  ::PROTOBUF_NAMESPACE_ID::int64 offernetprice() const;
  void set_offernetprice(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int32 OfferBargainFlag = 25;
  void clear_offerbargainflag();
  static const int kOfferBargainFlagFieldNumber = 25;
  ::PROTOBUF_NAMESPACE_ID::int32 offerbargainflag() const;
  void set_offerbargainflag(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 OfferRelationFlag = 26;
  void clear_offerrelationflag();
  static const int kOfferRelationFlagFieldNumber = 26;
  ::PROTOBUF_NAMESPACE_ID::int32 offerrelationflag() const;
  void set_offerrelationflag(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 OfferSsDetect = 29;
  void clear_offerssdetect();
  static const int kOfferSsDetectFieldNumber = 29;
  ::PROTOBUF_NAMESPACE_ID::int32 offerssdetect() const;
  void set_offerssdetect(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 BrokerDataType = 30;
  void clear_brokerdatatype();
  static const int kBrokerDataTypeFieldNumber = 30;
  ::PROTOBUF_NAMESPACE_ID::int32 brokerdatatype() const;
  void set_brokerdatatype(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 BidExerciseFlag = 31;
  void clear_bidexerciseflag();
  static const int kBidExerciseFlagFieldNumber = 31;
  ::PROTOBUF_NAMESPACE_ID::int32 bidexerciseflag() const;
  void set_bidexerciseflag(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 OfrExerciseFlag = 32;
  void clear_ofrexerciseflag();
  static const int kOfrExerciseFlagFieldNumber = 32;
  ::PROTOBUF_NAMESPACE_ID::int32 ofrexerciseflag() const;
  void set_ofrexerciseflag(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 DataMultiplePowerOf10 = 33;
  void clear_datamultiplepowerof10();
  static const int kDataMultiplePowerOf10FieldNumber = 33;
  ::PROTOBUF_NAMESPACE_ID::int32 datamultiplepowerof10() const;
  void set_datamultiplepowerof10(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.htsc.mdc.insight.model.MDQBQuote)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr htscsecurityid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tradingphasecode_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bidcomment_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bidid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr offercomment_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr offerid_;
  ::PROTOBUF_NAMESPACE_ID::int32 mddate_;
  ::PROTOBUF_NAMESPACE_ID::int32 mdtime_;
  ::PROTOBUF_NAMESPACE_ID::int64 datatimestamp_;
  int securityidsource_;
  int securitytype_;
  ::PROTOBUF_NAMESPACE_ID::int32 exchangedate_;
  ::PROTOBUF_NAMESPACE_ID::int32 exchangetime_;
  ::PROTOBUF_NAMESPACE_ID::int64 applseqnum_;
  ::PROTOBUF_NAMESPACE_ID::int64 bidpx_;
  ::PROTOBUF_NAMESPACE_ID::int64 bidsize_;
  ::PROTOBUF_NAMESPACE_ID::int32 channelno_;
  ::PROTOBUF_NAMESPACE_ID::int32 bidbargainflag_;
  ::PROTOBUF_NAMESPACE_ID::int64 bidyield_;
  ::PROTOBUF_NAMESPACE_ID::int64 bidnetprice_;
  ::PROTOBUF_NAMESPACE_ID::int32 bidrelationflag_;
  ::PROTOBUF_NAMESPACE_ID::int32 bidssdetect_;
  ::PROTOBUF_NAMESPACE_ID::int64 offerpx_;
  ::PROTOBUF_NAMESPACE_ID::int64 offersize_;
  ::PROTOBUF_NAMESPACE_ID::int64 offeryield_;
  ::PROTOBUF_NAMESPACE_ID::int64 offernetprice_;
  ::PROTOBUF_NAMESPACE_ID::int32 offerbargainflag_;
  ::PROTOBUF_NAMESPACE_ID::int32 offerrelationflag_;
  ::PROTOBUF_NAMESPACE_ID::int32 offerssdetect_;
  ::PROTOBUF_NAMESPACE_ID::int32 brokerdatatype_;
  ::PROTOBUF_NAMESPACE_ID::int32 bidexerciseflag_;
  ::PROTOBUF_NAMESPACE_ID::int32 ofrexerciseflag_;
  ::PROTOBUF_NAMESPACE_ID::int32 datamultiplepowerof10_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_MDQBQuote_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MDQBQuote

// string HTSCSecurityID = 1;
inline void MDQBQuote::clear_htscsecurityid() {
  htscsecurityid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MDQBQuote::htscsecurityid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.HTSCSecurityID)
  return htscsecurityid_.GetNoArena();
}
inline void MDQBQuote::set_htscsecurityid(const std::string& value) {
  
  htscsecurityid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.HTSCSecurityID)
}
inline void MDQBQuote::set_htscsecurityid(std::string&& value) {
  
  htscsecurityid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.htsc.mdc.insight.model.MDQBQuote.HTSCSecurityID)
}
inline void MDQBQuote::set_htscsecurityid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  htscsecurityid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDQBQuote.HTSCSecurityID)
}
inline void MDQBQuote::set_htscsecurityid(const char* value, size_t size) {
  
  htscsecurityid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDQBQuote.HTSCSecurityID)
}
inline std::string* MDQBQuote::mutable_htscsecurityid() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDQBQuote.HTSCSecurityID)
  return htscsecurityid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MDQBQuote::release_htscsecurityid() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDQBQuote.HTSCSecurityID)
  
  return htscsecurityid_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MDQBQuote::set_allocated_htscsecurityid(std::string* htscsecurityid) {
  if (htscsecurityid != nullptr) {
    
  } else {
    
  }
  htscsecurityid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), htscsecurityid);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDQBQuote.HTSCSecurityID)
}

// int32 MDDate = 2;
inline void MDQBQuote::clear_mddate() {
  mddate_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDQBQuote::mddate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.MDDate)
  return mddate_;
}
inline void MDQBQuote::set_mddate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  mddate_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.MDDate)
}

// int32 MDTime = 3;
inline void MDQBQuote::clear_mdtime() {
  mdtime_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDQBQuote::mdtime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.MDTime)
  return mdtime_;
}
inline void MDQBQuote::set_mdtime(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  mdtime_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.MDTime)
}

// int64 DataTimestamp = 4;
inline void MDQBQuote::clear_datatimestamp() {
  datatimestamp_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDQBQuote::datatimestamp() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.DataTimestamp)
  return datatimestamp_;
}
inline void MDQBQuote::set_datatimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  datatimestamp_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.DataTimestamp)
}

// string TradingPhaseCode = 5;
inline void MDQBQuote::clear_tradingphasecode() {
  tradingphasecode_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MDQBQuote::tradingphasecode() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.TradingPhaseCode)
  return tradingphasecode_.GetNoArena();
}
inline void MDQBQuote::set_tradingphasecode(const std::string& value) {
  
  tradingphasecode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.TradingPhaseCode)
}
inline void MDQBQuote::set_tradingphasecode(std::string&& value) {
  
  tradingphasecode_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.htsc.mdc.insight.model.MDQBQuote.TradingPhaseCode)
}
inline void MDQBQuote::set_tradingphasecode(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tradingphasecode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDQBQuote.TradingPhaseCode)
}
inline void MDQBQuote::set_tradingphasecode(const char* value, size_t size) {
  
  tradingphasecode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDQBQuote.TradingPhaseCode)
}
inline std::string* MDQBQuote::mutable_tradingphasecode() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDQBQuote.TradingPhaseCode)
  return tradingphasecode_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MDQBQuote::release_tradingphasecode() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDQBQuote.TradingPhaseCode)
  
  return tradingphasecode_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MDQBQuote::set_allocated_tradingphasecode(std::string* tradingphasecode) {
  if (tradingphasecode != nullptr) {
    
  } else {
    
  }
  tradingphasecode_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tradingphasecode);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDQBQuote.TradingPhaseCode)
}

// .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
inline void MDQBQuote::clear_securityidsource() {
  securityidsource_ = 0;
}
inline ::com::htsc::mdc::model::ESecurityIDSource MDQBQuote::securityidsource() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.securityIDSource)
  return static_cast< ::com::htsc::mdc::model::ESecurityIDSource >(securityidsource_);
}
inline void MDQBQuote::set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value) {
  
  securityidsource_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.securityIDSource)
}

// .com.htsc.mdc.model.ESecurityType securityType = 7;
inline void MDQBQuote::clear_securitytype() {
  securitytype_ = 0;
}
inline ::com::htsc::mdc::model::ESecurityType MDQBQuote::securitytype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.securityType)
  return static_cast< ::com::htsc::mdc::model::ESecurityType >(securitytype_);
}
inline void MDQBQuote::set_securitytype(::com::htsc::mdc::model::ESecurityType value) {
  
  securitytype_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.securityType)
}

// int32 ExchangeDate = 8;
inline void MDQBQuote::clear_exchangedate() {
  exchangedate_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDQBQuote::exchangedate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.ExchangeDate)
  return exchangedate_;
}
inline void MDQBQuote::set_exchangedate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  exchangedate_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.ExchangeDate)
}

// int32 ExchangeTime = 9;
inline void MDQBQuote::clear_exchangetime() {
  exchangetime_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDQBQuote::exchangetime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.ExchangeTime)
  return exchangetime_;
}
inline void MDQBQuote::set_exchangetime(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  exchangetime_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.ExchangeTime)
}

// int32 ChannelNo = 10;
inline void MDQBQuote::clear_channelno() {
  channelno_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDQBQuote::channelno() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.ChannelNo)
  return channelno_;
}
inline void MDQBQuote::set_channelno(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  channelno_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.ChannelNo)
}

// int64 ApplSeqNum = 11;
inline void MDQBQuote::clear_applseqnum() {
  applseqnum_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDQBQuote::applseqnum() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.ApplSeqNum)
  return applseqnum_;
}
inline void MDQBQuote::set_applseqnum(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  applseqnum_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.ApplSeqNum)
}

// int64 BidPx = 12;
inline void MDQBQuote::clear_bidpx() {
  bidpx_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDQBQuote::bidpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.BidPx)
  return bidpx_;
}
inline void MDQBQuote::set_bidpx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  bidpx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.BidPx)
}

// int64 BidSize = 13;
inline void MDQBQuote::clear_bidsize() {
  bidsize_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDQBQuote::bidsize() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.BidSize)
  return bidsize_;
}
inline void MDQBQuote::set_bidsize(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  bidsize_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.BidSize)
}

// int64 BidYield = 14;
inline void MDQBQuote::clear_bidyield() {
  bidyield_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDQBQuote::bidyield() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.BidYield)
  return bidyield_;
}
inline void MDQBQuote::set_bidyield(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  bidyield_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.BidYield)
}

// int64 BidNetPrice = 15;
inline void MDQBQuote::clear_bidnetprice() {
  bidnetprice_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDQBQuote::bidnetprice() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.BidNetPrice)
  return bidnetprice_;
}
inline void MDQBQuote::set_bidnetprice(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  bidnetprice_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.BidNetPrice)
}

// int32 BidBargainFlag = 16;
inline void MDQBQuote::clear_bidbargainflag() {
  bidbargainflag_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDQBQuote::bidbargainflag() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.BidBargainFlag)
  return bidbargainflag_;
}
inline void MDQBQuote::set_bidbargainflag(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  bidbargainflag_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.BidBargainFlag)
}

// int32 BidRelationFlag = 17;
inline void MDQBQuote::clear_bidrelationflag() {
  bidrelationflag_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDQBQuote::bidrelationflag() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.BidRelationFlag)
  return bidrelationflag_;
}
inline void MDQBQuote::set_bidrelationflag(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  bidrelationflag_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.BidRelationFlag)
}

// string BidComment = 18;
inline void MDQBQuote::clear_bidcomment() {
  bidcomment_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MDQBQuote::bidcomment() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.BidComment)
  return bidcomment_.GetNoArena();
}
inline void MDQBQuote::set_bidcomment(const std::string& value) {
  
  bidcomment_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.BidComment)
}
inline void MDQBQuote::set_bidcomment(std::string&& value) {
  
  bidcomment_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.htsc.mdc.insight.model.MDQBQuote.BidComment)
}
inline void MDQBQuote::set_bidcomment(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  bidcomment_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDQBQuote.BidComment)
}
inline void MDQBQuote::set_bidcomment(const char* value, size_t size) {
  
  bidcomment_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDQBQuote.BidComment)
}
inline std::string* MDQBQuote::mutable_bidcomment() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDQBQuote.BidComment)
  return bidcomment_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MDQBQuote::release_bidcomment() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDQBQuote.BidComment)
  
  return bidcomment_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MDQBQuote::set_allocated_bidcomment(std::string* bidcomment) {
  if (bidcomment != nullptr) {
    
  } else {
    
  }
  bidcomment_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), bidcomment);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDQBQuote.BidComment)
}

// string BidID = 19;
inline void MDQBQuote::clear_bidid() {
  bidid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MDQBQuote::bidid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.BidID)
  return bidid_.GetNoArena();
}
inline void MDQBQuote::set_bidid(const std::string& value) {
  
  bidid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.BidID)
}
inline void MDQBQuote::set_bidid(std::string&& value) {
  
  bidid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.htsc.mdc.insight.model.MDQBQuote.BidID)
}
inline void MDQBQuote::set_bidid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  bidid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDQBQuote.BidID)
}
inline void MDQBQuote::set_bidid(const char* value, size_t size) {
  
  bidid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDQBQuote.BidID)
}
inline std::string* MDQBQuote::mutable_bidid() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDQBQuote.BidID)
  return bidid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MDQBQuote::release_bidid() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDQBQuote.BidID)
  
  return bidid_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MDQBQuote::set_allocated_bidid(std::string* bidid) {
  if (bidid != nullptr) {
    
  } else {
    
  }
  bidid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), bidid);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDQBQuote.BidID)
}

// int32 BidSsDetect = 20;
inline void MDQBQuote::clear_bidssdetect() {
  bidssdetect_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDQBQuote::bidssdetect() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.BidSsDetect)
  return bidssdetect_;
}
inline void MDQBQuote::set_bidssdetect(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  bidssdetect_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.BidSsDetect)
}

// int64 OfferPx = 21;
inline void MDQBQuote::clear_offerpx() {
  offerpx_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDQBQuote::offerpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.OfferPx)
  return offerpx_;
}
inline void MDQBQuote::set_offerpx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  offerpx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.OfferPx)
}

// int64 OfferSize = 22;
inline void MDQBQuote::clear_offersize() {
  offersize_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDQBQuote::offersize() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.OfferSize)
  return offersize_;
}
inline void MDQBQuote::set_offersize(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  offersize_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.OfferSize)
}

// int64 OfferYield = 23;
inline void MDQBQuote::clear_offeryield() {
  offeryield_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDQBQuote::offeryield() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.OfferYield)
  return offeryield_;
}
inline void MDQBQuote::set_offeryield(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  offeryield_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.OfferYield)
}

// int64 OfferNetPrice = 24;
inline void MDQBQuote::clear_offernetprice() {
  offernetprice_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDQBQuote::offernetprice() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.OfferNetPrice)
  return offernetprice_;
}
inline void MDQBQuote::set_offernetprice(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  offernetprice_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.OfferNetPrice)
}

// int32 OfferBargainFlag = 25;
inline void MDQBQuote::clear_offerbargainflag() {
  offerbargainflag_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDQBQuote::offerbargainflag() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.OfferBargainFlag)
  return offerbargainflag_;
}
inline void MDQBQuote::set_offerbargainflag(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  offerbargainflag_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.OfferBargainFlag)
}

// int32 OfferRelationFlag = 26;
inline void MDQBQuote::clear_offerrelationflag() {
  offerrelationflag_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDQBQuote::offerrelationflag() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.OfferRelationFlag)
  return offerrelationflag_;
}
inline void MDQBQuote::set_offerrelationflag(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  offerrelationflag_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.OfferRelationFlag)
}

// string OfferComment = 27;
inline void MDQBQuote::clear_offercomment() {
  offercomment_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MDQBQuote::offercomment() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.OfferComment)
  return offercomment_.GetNoArena();
}
inline void MDQBQuote::set_offercomment(const std::string& value) {
  
  offercomment_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.OfferComment)
}
inline void MDQBQuote::set_offercomment(std::string&& value) {
  
  offercomment_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.htsc.mdc.insight.model.MDQBQuote.OfferComment)
}
inline void MDQBQuote::set_offercomment(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  offercomment_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDQBQuote.OfferComment)
}
inline void MDQBQuote::set_offercomment(const char* value, size_t size) {
  
  offercomment_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDQBQuote.OfferComment)
}
inline std::string* MDQBQuote::mutable_offercomment() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDQBQuote.OfferComment)
  return offercomment_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MDQBQuote::release_offercomment() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDQBQuote.OfferComment)
  
  return offercomment_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MDQBQuote::set_allocated_offercomment(std::string* offercomment) {
  if (offercomment != nullptr) {
    
  } else {
    
  }
  offercomment_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), offercomment);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDQBQuote.OfferComment)
}

// string OfferID = 28;
inline void MDQBQuote::clear_offerid() {
  offerid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MDQBQuote::offerid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.OfferID)
  return offerid_.GetNoArena();
}
inline void MDQBQuote::set_offerid(const std::string& value) {
  
  offerid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.OfferID)
}
inline void MDQBQuote::set_offerid(std::string&& value) {
  
  offerid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.htsc.mdc.insight.model.MDQBQuote.OfferID)
}
inline void MDQBQuote::set_offerid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  offerid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDQBQuote.OfferID)
}
inline void MDQBQuote::set_offerid(const char* value, size_t size) {
  
  offerid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDQBQuote.OfferID)
}
inline std::string* MDQBQuote::mutable_offerid() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDQBQuote.OfferID)
  return offerid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MDQBQuote::release_offerid() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDQBQuote.OfferID)
  
  return offerid_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MDQBQuote::set_allocated_offerid(std::string* offerid) {
  if (offerid != nullptr) {
    
  } else {
    
  }
  offerid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), offerid);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDQBQuote.OfferID)
}

// int32 OfferSsDetect = 29;
inline void MDQBQuote::clear_offerssdetect() {
  offerssdetect_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDQBQuote::offerssdetect() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.OfferSsDetect)
  return offerssdetect_;
}
inline void MDQBQuote::set_offerssdetect(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  offerssdetect_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.OfferSsDetect)
}

// int32 BrokerDataType = 30;
inline void MDQBQuote::clear_brokerdatatype() {
  brokerdatatype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDQBQuote::brokerdatatype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.BrokerDataType)
  return brokerdatatype_;
}
inline void MDQBQuote::set_brokerdatatype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  brokerdatatype_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.BrokerDataType)
}

// int32 BidExerciseFlag = 31;
inline void MDQBQuote::clear_bidexerciseflag() {
  bidexerciseflag_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDQBQuote::bidexerciseflag() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.BidExerciseFlag)
  return bidexerciseflag_;
}
inline void MDQBQuote::set_bidexerciseflag(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  bidexerciseflag_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.BidExerciseFlag)
}

// int32 OfrExerciseFlag = 32;
inline void MDQBQuote::clear_ofrexerciseflag() {
  ofrexerciseflag_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDQBQuote::ofrexerciseflag() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.OfrExerciseFlag)
  return ofrexerciseflag_;
}
inline void MDQBQuote::set_ofrexerciseflag(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  ofrexerciseflag_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.OfrExerciseFlag)
}

// int32 DataMultiplePowerOf10 = 33;
inline void MDQBQuote::clear_datamultiplepowerof10() {
  datamultiplepowerof10_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDQBQuote::datamultiplepowerof10() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDQBQuote.DataMultiplePowerOf10)
  return datamultiplepowerof10_;
}
inline void MDQBQuote::set_datamultiplepowerof10(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  datamultiplepowerof10_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDQBQuote.DataMultiplePowerOf10)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_MDQBQuote_2eproto

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MDFIQuote.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_MDFIQuote_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_MDFIQuote_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3008000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3008000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "ESecurityIDSource.pb.h"
#include "ESecurityType.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_MDFIQuote_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_MDFIQuote_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_MDFIQuote_2eproto;
namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {
class MDFIQuote;
class MDFIQuoteDefaultTypeInternal;
extern MDFIQuoteDefaultTypeInternal _MDFIQuote_default_instance_;
}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> ::com::htsc::mdc::insight::model::MDFIQuote* Arena::CreateMaybeMessage<::com::htsc::mdc::insight::model::MDFIQuote>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {

// ===================================================================

class MDFIQuote :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.htsc.mdc.insight.model.MDFIQuote) */ {
 public:
  MDFIQuote();
  virtual ~MDFIQuote();

  MDFIQuote(const MDFIQuote& from);
  MDFIQuote(MDFIQuote&& from) noexcept
    : MDFIQuote() {
    *this = ::std::move(from);
  }

  inline MDFIQuote& operator=(const MDFIQuote& from) {
    CopyFrom(from);
    return *this;
  }
  inline MDFIQuote& operator=(MDFIQuote&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MDFIQuote& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MDFIQuote* internal_default_instance() {
    return reinterpret_cast<const MDFIQuote*>(
               &_MDFIQuote_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MDFIQuote* other);
  friend void swap(MDFIQuote& a, MDFIQuote& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MDFIQuote* New() const final {
    return CreateMaybeMessage<MDFIQuote>(nullptr);
  }

  MDFIQuote* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MDFIQuote>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MDFIQuote& from);
  void MergeFrom(const MDFIQuote& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MDFIQuote* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.htsc.mdc.insight.model.MDFIQuote";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_MDFIQuote_2eproto);
    return ::descriptor_table_MDFIQuote_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string HTSCSecurityID = 1;
  void clear_htscsecurityid();
  static const int kHTSCSecurityIDFieldNumber = 1;
  const std::string& htscsecurityid() const;
  void set_htscsecurityid(const std::string& value);
  void set_htscsecurityid(std::string&& value);
  void set_htscsecurityid(const char* value);
  void set_htscsecurityid(const char* value, size_t size);
  std::string* mutable_htscsecurityid();
  std::string* release_htscsecurityid();
  void set_allocated_htscsecurityid(std::string* htscsecurityid);

  // string BuyQuoteID = 20;
  void clear_buyquoteid();
  static const int kBuyQuoteIDFieldNumber = 20;
  const std::string& buyquoteid() const;
  void set_buyquoteid(const std::string& value);
  void set_buyquoteid(std::string&& value);
  void set_buyquoteid(const char* value);
  void set_buyquoteid(const char* value, size_t size);
  std::string* mutable_buyquoteid();
  std::string* release_buyquoteid();
  void set_allocated_buyquoteid(std::string* buyquoteid);

  // string BuyQuoter = 22;
  void clear_buyquoter();
  static const int kBuyQuoterFieldNumber = 22;
  const std::string& buyquoter() const;
  void set_buyquoter(const std::string& value);
  void set_buyquoter(std::string&& value);
  void set_buyquoter(const char* value);
  void set_buyquoter(const char* value, size_t size);
  std::string* mutable_buyquoter();
  std::string* release_buyquoter();
  void set_allocated_buyquoter(std::string* buyquoter);

  // string BuyQuoteComment = 27;
  void clear_buyquotecomment();
  static const int kBuyQuoteCommentFieldNumber = 27;
  const std::string& buyquotecomment() const;
  void set_buyquotecomment(const std::string& value);
  void set_buyquotecomment(std::string&& value);
  void set_buyquotecomment(const char* value);
  void set_buyquotecomment(const char* value, size_t size);
  std::string* mutable_buyquotecomment();
  std::string* release_buyquotecomment();
  void set_allocated_buyquotecomment(std::string* buyquotecomment);

  // string SellQuoteID = 33;
  void clear_sellquoteid();
  static const int kSellQuoteIDFieldNumber = 33;
  const std::string& sellquoteid() const;
  void set_sellquoteid(const std::string& value);
  void set_sellquoteid(std::string&& value);
  void set_sellquoteid(const char* value);
  void set_sellquoteid(const char* value, size_t size);
  std::string* mutable_sellquoteid();
  std::string* release_sellquoteid();
  void set_allocated_sellquoteid(std::string* sellquoteid);

  // string SellQuoter = 35;
  void clear_sellquoter();
  static const int kSellQuoterFieldNumber = 35;
  const std::string& sellquoter() const;
  void set_sellquoter(const std::string& value);
  void set_sellquoter(std::string&& value);
  void set_sellquoter(const char* value);
  void set_sellquoter(const char* value, size_t size);
  std::string* mutable_sellquoter();
  std::string* release_sellquoter();
  void set_allocated_sellquoter(std::string* sellquoter);

  // string SellQuoteComment = 40;
  void clear_sellquotecomment();
  static const int kSellQuoteCommentFieldNumber = 40;
  const std::string& sellquotecomment() const;
  void set_sellquotecomment(const std::string& value);
  void set_sellquotecomment(std::string&& value);
  void set_sellquotecomment(const char* value);
  void set_sellquotecomment(const char* value, size_t size);
  std::string* mutable_sellquotecomment();
  std::string* release_sellquotecomment();
  void set_allocated_sellquotecomment(std::string* sellquotecomment);

  // int32 MDDate = 2;
  void clear_mddate();
  static const int kMDDateFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int32 mddate() const;
  void set_mddate(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 MDTime = 3;
  void clear_mdtime();
  static const int kMDTimeFieldNumber = 3;
  ::PROTOBUF_NAMESPACE_ID::int32 mdtime() const;
  void set_mdtime(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int64 DataTimestamp = 4;
  void clear_datatimestamp();
  static const int kDataTimestampFieldNumber = 4;
  ::PROTOBUF_NAMESPACE_ID::int64 datatimestamp() const;
  void set_datatimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);

  // .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 5;
  void clear_securityidsource();
  static const int kSecurityIDSourceFieldNumber = 5;
  ::com::htsc::mdc::model::ESecurityIDSource securityidsource() const;
  void set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value);

  // .com.htsc.mdc.model.ESecurityType securityType = 6;
  void clear_securitytype();
  static const int kSecurityTypeFieldNumber = 6;
  ::com::htsc::mdc::model::ESecurityType securitytype() const;
  void set_securitytype(::com::htsc::mdc::model::ESecurityType value);

  // int32 ExchangeDate = 7;
  void clear_exchangedate();
  static const int kExchangeDateFieldNumber = 7;
  ::PROTOBUF_NAMESPACE_ID::int32 exchangedate() const;
  void set_exchangedate(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 ExchangeTime = 8;
  void clear_exchangetime();
  static const int kExchangeTimeFieldNumber = 8;
  ::PROTOBUF_NAMESPACE_ID::int32 exchangetime() const;
  void set_exchangetime(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int64 MessageNumber = 9;
  void clear_messagenumber();
  static const int kMessageNumberFieldNumber = 9;
  ::PROTOBUF_NAMESPACE_ID::int64 messagenumber() const;
  void set_messagenumber(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 AccruedInterest = 11;
  void clear_accruedinterest();
  static const int kAccruedInterestFieldNumber = 11;
  ::PROTOBUF_NAMESPACE_ID::int64 accruedinterest() const;
  void set_accruedinterest(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int32 BrokerDataType = 10;
  void clear_brokerdatatype();
  static const int kBrokerDataTypeFieldNumber = 10;
  ::PROTOBUF_NAMESPACE_ID::int32 brokerdatatype() const;
  void set_brokerdatatype(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 BuyQuoteTime = 21;
  void clear_buyquotetime();
  static const int kBuyQuoteTimeFieldNumber = 21;
  ::PROTOBUF_NAMESPACE_ID::int32 buyquotetime() const;
  void set_buyquotetime(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int64 BuyCleanPrice = 23;
  void clear_buycleanprice();
  static const int kBuyCleanPriceFieldNumber = 23;
  ::PROTOBUF_NAMESPACE_ID::int64 buycleanprice() const;
  void set_buycleanprice(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 BuyVolume = 24;
  void clear_buyvolume();
  static const int kBuyVolumeFieldNumber = 24;
  ::PROTOBUF_NAMESPACE_ID::int64 buyvolume() const;
  void set_buyvolume(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 BuyDirtyPrice = 25;
  void clear_buydirtyprice();
  static const int kBuyDirtyPriceFieldNumber = 25;
  ::PROTOBUF_NAMESPACE_ID::int64 buydirtyprice() const;
  void set_buydirtyprice(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 BuyMaturityYield = 26;
  void clear_buymaturityyield();
  static const int kBuyMaturityYieldFieldNumber = 26;
  ::PROTOBUF_NAMESPACE_ID::int64 buymaturityyield() const;
  void set_buymaturityyield(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int32 BuyQuoteType = 28;
  void clear_buyquotetype();
  static const int kBuyQuoteTypeFieldNumber = 28;
  ::PROTOBUF_NAMESPACE_ID::int32 buyquotetype() const;
  void set_buyquotetype(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 BuyBargainType = 29;
  void clear_buybargaintype();
  static const int kBuyBargainTypeFieldNumber = 29;
  ::PROTOBUF_NAMESPACE_ID::int32 buybargaintype() const;
  void set_buybargaintype(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 BuyRelationType = 30;
  void clear_buyrelationtype();
  static const int kBuyRelationTypeFieldNumber = 30;
  ::PROTOBUF_NAMESPACE_ID::int32 buyrelationtype() const;
  void set_buyrelationtype(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 BuyExerciseType = 31;
  void clear_buyexercisetype();
  static const int kBuyExerciseTypeFieldNumber = 31;
  ::PROTOBUF_NAMESPACE_ID::int32 buyexercisetype() const;
  void set_buyexercisetype(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 BuyYieldType = 32;
  void clear_buyyieldtype();
  static const int kBuyYieldTypeFieldNumber = 32;
  ::PROTOBUF_NAMESPACE_ID::int32 buyyieldtype() const;
  void set_buyyieldtype(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 SellQuoteTime = 34;
  void clear_sellquotetime();
  static const int kSellQuoteTimeFieldNumber = 34;
  ::PROTOBUF_NAMESPACE_ID::int32 sellquotetime() const;
  void set_sellquotetime(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int64 SellCleanPrice = 36;
  void clear_sellcleanprice();
  static const int kSellCleanPriceFieldNumber = 36;
  ::PROTOBUF_NAMESPACE_ID::int64 sellcleanprice() const;
  void set_sellcleanprice(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 SellVolume = 37;
  void clear_sellvolume();
  static const int kSellVolumeFieldNumber = 37;
  ::PROTOBUF_NAMESPACE_ID::int64 sellvolume() const;
  void set_sellvolume(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 SellDirtyPrice = 38;
  void clear_selldirtyprice();
  static const int kSellDirtyPriceFieldNumber = 38;
  ::PROTOBUF_NAMESPACE_ID::int64 selldirtyprice() const;
  void set_selldirtyprice(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 SellMaturityYield = 39;
  void clear_sellmaturityyield();
  static const int kSellMaturityYieldFieldNumber = 39;
  ::PROTOBUF_NAMESPACE_ID::int64 sellmaturityyield() const;
  void set_sellmaturityyield(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int32 SellQuoteType = 41;
  void clear_sellquotetype();
  static const int kSellQuoteTypeFieldNumber = 41;
  ::PROTOBUF_NAMESPACE_ID::int32 sellquotetype() const;
  void set_sellquotetype(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 SellBargainType = 42;
  void clear_sellbargaintype();
  static const int kSellBargainTypeFieldNumber = 42;
  ::PROTOBUF_NAMESPACE_ID::int32 sellbargaintype() const;
  void set_sellbargaintype(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 SellRelationType = 43;
  void clear_sellrelationtype();
  static const int kSellRelationTypeFieldNumber = 43;
  ::PROTOBUF_NAMESPACE_ID::int32 sellrelationtype() const;
  void set_sellrelationtype(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 SellExerciseType = 44;
  void clear_sellexercisetype();
  static const int kSellExerciseTypeFieldNumber = 44;
  ::PROTOBUF_NAMESPACE_ID::int32 sellexercisetype() const;
  void set_sellexercisetype(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 SellYieldType = 45;
  void clear_sellyieldtype();
  static const int kSellYieldTypeFieldNumber = 45;
  ::PROTOBUF_NAMESPACE_ID::int32 sellyieldtype() const;
  void set_sellyieldtype(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 DataMultiplePowerOf10 = 46;
  void clear_datamultiplepowerof10();
  static const int kDataMultiplePowerOf10FieldNumber = 46;
  ::PROTOBUF_NAMESPACE_ID::int32 datamultiplepowerof10() const;
  void set_datamultiplepowerof10(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.htsc.mdc.insight.model.MDFIQuote)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr htscsecurityid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr buyquoteid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr buyquoter_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr buyquotecomment_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sellquoteid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sellquoter_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sellquotecomment_;
  ::PROTOBUF_NAMESPACE_ID::int32 mddate_;
  ::PROTOBUF_NAMESPACE_ID::int32 mdtime_;
  ::PROTOBUF_NAMESPACE_ID::int64 datatimestamp_;
  int securityidsource_;
  int securitytype_;
  ::PROTOBUF_NAMESPACE_ID::int32 exchangedate_;
  ::PROTOBUF_NAMESPACE_ID::int32 exchangetime_;
  ::PROTOBUF_NAMESPACE_ID::int64 messagenumber_;
  ::PROTOBUF_NAMESPACE_ID::int64 accruedinterest_;
  ::PROTOBUF_NAMESPACE_ID::int32 brokerdatatype_;
  ::PROTOBUF_NAMESPACE_ID::int32 buyquotetime_;
  ::PROTOBUF_NAMESPACE_ID::int64 buycleanprice_;
  ::PROTOBUF_NAMESPACE_ID::int64 buyvolume_;
  ::PROTOBUF_NAMESPACE_ID::int64 buydirtyprice_;
  ::PROTOBUF_NAMESPACE_ID::int64 buymaturityyield_;
  ::PROTOBUF_NAMESPACE_ID::int32 buyquotetype_;
  ::PROTOBUF_NAMESPACE_ID::int32 buybargaintype_;
  ::PROTOBUF_NAMESPACE_ID::int32 buyrelationtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 buyexercisetype_;
  ::PROTOBUF_NAMESPACE_ID::int32 buyyieldtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 sellquotetime_;
  ::PROTOBUF_NAMESPACE_ID::int64 sellcleanprice_;
  ::PROTOBUF_NAMESPACE_ID::int64 sellvolume_;
  ::PROTOBUF_NAMESPACE_ID::int64 selldirtyprice_;
  ::PROTOBUF_NAMESPACE_ID::int64 sellmaturityyield_;
  ::PROTOBUF_NAMESPACE_ID::int32 sellquotetype_;
  ::PROTOBUF_NAMESPACE_ID::int32 sellbargaintype_;
  ::PROTOBUF_NAMESPACE_ID::int32 sellrelationtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 sellexercisetype_;
  ::PROTOBUF_NAMESPACE_ID::int32 sellyieldtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 datamultiplepowerof10_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_MDFIQuote_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MDFIQuote

// string HTSCSecurityID = 1;
inline void MDFIQuote::clear_htscsecurityid() {
  htscsecurityid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MDFIQuote::htscsecurityid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.HTSCSecurityID)
  return htscsecurityid_.GetNoArena();
}
inline void MDFIQuote::set_htscsecurityid(const std::string& value) {
  
  htscsecurityid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.HTSCSecurityID)
}
inline void MDFIQuote::set_htscsecurityid(std::string&& value) {
  
  htscsecurityid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.htsc.mdc.insight.model.MDFIQuote.HTSCSecurityID)
}
inline void MDFIQuote::set_htscsecurityid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  htscsecurityid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDFIQuote.HTSCSecurityID)
}
inline void MDFIQuote::set_htscsecurityid(const char* value, size_t size) {
  
  htscsecurityid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDFIQuote.HTSCSecurityID)
}
inline std::string* MDFIQuote::mutable_htscsecurityid() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDFIQuote.HTSCSecurityID)
  return htscsecurityid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MDFIQuote::release_htscsecurityid() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDFIQuote.HTSCSecurityID)
  
  return htscsecurityid_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MDFIQuote::set_allocated_htscsecurityid(std::string* htscsecurityid) {
  if (htscsecurityid != nullptr) {
    
  } else {
    
  }
  htscsecurityid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), htscsecurityid);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDFIQuote.HTSCSecurityID)
}

// int32 MDDate = 2;
inline void MDFIQuote::clear_mddate() {
  mddate_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDFIQuote::mddate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.MDDate)
  return mddate_;
}
inline void MDFIQuote::set_mddate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  mddate_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.MDDate)
}

// int32 MDTime = 3;
inline void MDFIQuote::clear_mdtime() {
  mdtime_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDFIQuote::mdtime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.MDTime)
  return mdtime_;
}
inline void MDFIQuote::set_mdtime(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  mdtime_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.MDTime)
}

// int64 DataTimestamp = 4;
inline void MDFIQuote::clear_datatimestamp() {
  datatimestamp_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDFIQuote::datatimestamp() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.DataTimestamp)
  return datatimestamp_;
}
inline void MDFIQuote::set_datatimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  datatimestamp_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.DataTimestamp)
}

// .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 5;
inline void MDFIQuote::clear_securityidsource() {
  securityidsource_ = 0;
}
inline ::com::htsc::mdc::model::ESecurityIDSource MDFIQuote::securityidsource() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.securityIDSource)
  return static_cast< ::com::htsc::mdc::model::ESecurityIDSource >(securityidsource_);
}
inline void MDFIQuote::set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value) {
  
  securityidsource_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.securityIDSource)
}

// .com.htsc.mdc.model.ESecurityType securityType = 6;
inline void MDFIQuote::clear_securitytype() {
  securitytype_ = 0;
}
inline ::com::htsc::mdc::model::ESecurityType MDFIQuote::securitytype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.securityType)
  return static_cast< ::com::htsc::mdc::model::ESecurityType >(securitytype_);
}
inline void MDFIQuote::set_securitytype(::com::htsc::mdc::model::ESecurityType value) {
  
  securitytype_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.securityType)
}

// int32 ExchangeDate = 7;
inline void MDFIQuote::clear_exchangedate() {
  exchangedate_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDFIQuote::exchangedate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.ExchangeDate)
  return exchangedate_;
}
inline void MDFIQuote::set_exchangedate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  exchangedate_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.ExchangeDate)
}

// int32 ExchangeTime = 8;
inline void MDFIQuote::clear_exchangetime() {
  exchangetime_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDFIQuote::exchangetime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.ExchangeTime)
  return exchangetime_;
}
inline void MDFIQuote::set_exchangetime(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  exchangetime_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.ExchangeTime)
}

// int64 MessageNumber = 9;
inline void MDFIQuote::clear_messagenumber() {
  messagenumber_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDFIQuote::messagenumber() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.MessageNumber)
  return messagenumber_;
}
inline void MDFIQuote::set_messagenumber(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  messagenumber_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.MessageNumber)
}

// int32 BrokerDataType = 10;
inline void MDFIQuote::clear_brokerdatatype() {
  brokerdatatype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDFIQuote::brokerdatatype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.BrokerDataType)
  return brokerdatatype_;
}
inline void MDFIQuote::set_brokerdatatype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  brokerdatatype_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.BrokerDataType)
}

// int64 AccruedInterest = 11;
inline void MDFIQuote::clear_accruedinterest() {
  accruedinterest_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDFIQuote::accruedinterest() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.AccruedInterest)
  return accruedinterest_;
}
inline void MDFIQuote::set_accruedinterest(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  accruedinterest_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.AccruedInterest)
}

// string BuyQuoteID = 20;
inline void MDFIQuote::clear_buyquoteid() {
  buyquoteid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MDFIQuote::buyquoteid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.BuyQuoteID)
  return buyquoteid_.GetNoArena();
}
inline void MDFIQuote::set_buyquoteid(const std::string& value) {
  
  buyquoteid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.BuyQuoteID)
}
inline void MDFIQuote::set_buyquoteid(std::string&& value) {
  
  buyquoteid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.htsc.mdc.insight.model.MDFIQuote.BuyQuoteID)
}
inline void MDFIQuote::set_buyquoteid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  buyquoteid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDFIQuote.BuyQuoteID)
}
inline void MDFIQuote::set_buyquoteid(const char* value, size_t size) {
  
  buyquoteid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDFIQuote.BuyQuoteID)
}
inline std::string* MDFIQuote::mutable_buyquoteid() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDFIQuote.BuyQuoteID)
  return buyquoteid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MDFIQuote::release_buyquoteid() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDFIQuote.BuyQuoteID)
  
  return buyquoteid_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MDFIQuote::set_allocated_buyquoteid(std::string* buyquoteid) {
  if (buyquoteid != nullptr) {
    
  } else {
    
  }
  buyquoteid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), buyquoteid);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDFIQuote.BuyQuoteID)
}

// int32 BuyQuoteTime = 21;
inline void MDFIQuote::clear_buyquotetime() {
  buyquotetime_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDFIQuote::buyquotetime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.BuyQuoteTime)
  return buyquotetime_;
}
inline void MDFIQuote::set_buyquotetime(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  buyquotetime_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.BuyQuoteTime)
}

// string BuyQuoter = 22;
inline void MDFIQuote::clear_buyquoter() {
  buyquoter_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MDFIQuote::buyquoter() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.BuyQuoter)
  return buyquoter_.GetNoArena();
}
inline void MDFIQuote::set_buyquoter(const std::string& value) {
  
  buyquoter_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.BuyQuoter)
}
inline void MDFIQuote::set_buyquoter(std::string&& value) {
  
  buyquoter_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.htsc.mdc.insight.model.MDFIQuote.BuyQuoter)
}
inline void MDFIQuote::set_buyquoter(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  buyquoter_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDFIQuote.BuyQuoter)
}
inline void MDFIQuote::set_buyquoter(const char* value, size_t size) {
  
  buyquoter_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDFIQuote.BuyQuoter)
}
inline std::string* MDFIQuote::mutable_buyquoter() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDFIQuote.BuyQuoter)
  return buyquoter_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MDFIQuote::release_buyquoter() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDFIQuote.BuyQuoter)
  
  return buyquoter_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MDFIQuote::set_allocated_buyquoter(std::string* buyquoter) {
  if (buyquoter != nullptr) {
    
  } else {
    
  }
  buyquoter_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), buyquoter);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDFIQuote.BuyQuoter)
}

// int64 BuyCleanPrice = 23;
inline void MDFIQuote::clear_buycleanprice() {
  buycleanprice_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDFIQuote::buycleanprice() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.BuyCleanPrice)
  return buycleanprice_;
}
inline void MDFIQuote::set_buycleanprice(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  buycleanprice_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.BuyCleanPrice)
}

// int64 BuyVolume = 24;
inline void MDFIQuote::clear_buyvolume() {
  buyvolume_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDFIQuote::buyvolume() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.BuyVolume)
  return buyvolume_;
}
inline void MDFIQuote::set_buyvolume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  buyvolume_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.BuyVolume)
}

// int64 BuyDirtyPrice = 25;
inline void MDFIQuote::clear_buydirtyprice() {
  buydirtyprice_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDFIQuote::buydirtyprice() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.BuyDirtyPrice)
  return buydirtyprice_;
}
inline void MDFIQuote::set_buydirtyprice(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  buydirtyprice_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.BuyDirtyPrice)
}

// int64 BuyMaturityYield = 26;
inline void MDFIQuote::clear_buymaturityyield() {
  buymaturityyield_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDFIQuote::buymaturityyield() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.BuyMaturityYield)
  return buymaturityyield_;
}
inline void MDFIQuote::set_buymaturityyield(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  buymaturityyield_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.BuyMaturityYield)
}

// string BuyQuoteComment = 27;
inline void MDFIQuote::clear_buyquotecomment() {
  buyquotecomment_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MDFIQuote::buyquotecomment() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.BuyQuoteComment)
  return buyquotecomment_.GetNoArena();
}
inline void MDFIQuote::set_buyquotecomment(const std::string& value) {
  
  buyquotecomment_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.BuyQuoteComment)
}
inline void MDFIQuote::set_buyquotecomment(std::string&& value) {
  
  buyquotecomment_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.htsc.mdc.insight.model.MDFIQuote.BuyQuoteComment)
}
inline void MDFIQuote::set_buyquotecomment(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  buyquotecomment_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDFIQuote.BuyQuoteComment)
}
inline void MDFIQuote::set_buyquotecomment(const char* value, size_t size) {
  
  buyquotecomment_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDFIQuote.BuyQuoteComment)
}
inline std::string* MDFIQuote::mutable_buyquotecomment() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDFIQuote.BuyQuoteComment)
  return buyquotecomment_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MDFIQuote::release_buyquotecomment() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDFIQuote.BuyQuoteComment)
  
  return buyquotecomment_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MDFIQuote::set_allocated_buyquotecomment(std::string* buyquotecomment) {
  if (buyquotecomment != nullptr) {
    
  } else {
    
  }
  buyquotecomment_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), buyquotecomment);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDFIQuote.BuyQuoteComment)
}

// int32 BuyQuoteType = 28;
inline void MDFIQuote::clear_buyquotetype() {
  buyquotetype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDFIQuote::buyquotetype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.BuyQuoteType)
  return buyquotetype_;
}
inline void MDFIQuote::set_buyquotetype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  buyquotetype_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.BuyQuoteType)
}

// int32 BuyBargainType = 29;
inline void MDFIQuote::clear_buybargaintype() {
  buybargaintype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDFIQuote::buybargaintype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.BuyBargainType)
  return buybargaintype_;
}
inline void MDFIQuote::set_buybargaintype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  buybargaintype_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.BuyBargainType)
}

// int32 BuyRelationType = 30;
inline void MDFIQuote::clear_buyrelationtype() {
  buyrelationtype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDFIQuote::buyrelationtype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.BuyRelationType)
  return buyrelationtype_;
}
inline void MDFIQuote::set_buyrelationtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  buyrelationtype_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.BuyRelationType)
}

// int32 BuyExerciseType = 31;
inline void MDFIQuote::clear_buyexercisetype() {
  buyexercisetype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDFIQuote::buyexercisetype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.BuyExerciseType)
  return buyexercisetype_;
}
inline void MDFIQuote::set_buyexercisetype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  buyexercisetype_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.BuyExerciseType)
}

// int32 BuyYieldType = 32;
inline void MDFIQuote::clear_buyyieldtype() {
  buyyieldtype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDFIQuote::buyyieldtype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.BuyYieldType)
  return buyyieldtype_;
}
inline void MDFIQuote::set_buyyieldtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  buyyieldtype_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.BuyYieldType)
}

// string SellQuoteID = 33;
inline void MDFIQuote::clear_sellquoteid() {
  sellquoteid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MDFIQuote::sellquoteid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.SellQuoteID)
  return sellquoteid_.GetNoArena();
}
inline void MDFIQuote::set_sellquoteid(const std::string& value) {
  
  sellquoteid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.SellQuoteID)
}
inline void MDFIQuote::set_sellquoteid(std::string&& value) {
  
  sellquoteid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.htsc.mdc.insight.model.MDFIQuote.SellQuoteID)
}
inline void MDFIQuote::set_sellquoteid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sellquoteid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDFIQuote.SellQuoteID)
}
inline void MDFIQuote::set_sellquoteid(const char* value, size_t size) {
  
  sellquoteid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDFIQuote.SellQuoteID)
}
inline std::string* MDFIQuote::mutable_sellquoteid() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDFIQuote.SellQuoteID)
  return sellquoteid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MDFIQuote::release_sellquoteid() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDFIQuote.SellQuoteID)
  
  return sellquoteid_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MDFIQuote::set_allocated_sellquoteid(std::string* sellquoteid) {
  if (sellquoteid != nullptr) {
    
  } else {
    
  }
  sellquoteid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sellquoteid);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDFIQuote.SellQuoteID)
}

// int32 SellQuoteTime = 34;
inline void MDFIQuote::clear_sellquotetime() {
  sellquotetime_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDFIQuote::sellquotetime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.SellQuoteTime)
  return sellquotetime_;
}
inline void MDFIQuote::set_sellquotetime(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  sellquotetime_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.SellQuoteTime)
}

// string SellQuoter = 35;
inline void MDFIQuote::clear_sellquoter() {
  sellquoter_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MDFIQuote::sellquoter() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.SellQuoter)
  return sellquoter_.GetNoArena();
}
inline void MDFIQuote::set_sellquoter(const std::string& value) {
  
  sellquoter_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.SellQuoter)
}
inline void MDFIQuote::set_sellquoter(std::string&& value) {
  
  sellquoter_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.htsc.mdc.insight.model.MDFIQuote.SellQuoter)
}
inline void MDFIQuote::set_sellquoter(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sellquoter_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDFIQuote.SellQuoter)
}
inline void MDFIQuote::set_sellquoter(const char* value, size_t size) {
  
  sellquoter_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDFIQuote.SellQuoter)
}
inline std::string* MDFIQuote::mutable_sellquoter() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDFIQuote.SellQuoter)
  return sellquoter_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MDFIQuote::release_sellquoter() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDFIQuote.SellQuoter)
  
  return sellquoter_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MDFIQuote::set_allocated_sellquoter(std::string* sellquoter) {
  if (sellquoter != nullptr) {
    
  } else {
    
  }
  sellquoter_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sellquoter);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDFIQuote.SellQuoter)
}

// int64 SellCleanPrice = 36;
inline void MDFIQuote::clear_sellcleanprice() {
  sellcleanprice_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDFIQuote::sellcleanprice() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.SellCleanPrice)
  return sellcleanprice_;
}
inline void MDFIQuote::set_sellcleanprice(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  sellcleanprice_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.SellCleanPrice)
}

// int64 SellVolume = 37;
inline void MDFIQuote::clear_sellvolume() {
  sellvolume_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDFIQuote::sellvolume() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.SellVolume)
  return sellvolume_;
}
inline void MDFIQuote::set_sellvolume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  sellvolume_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.SellVolume)
}

// int64 SellDirtyPrice = 38;
inline void MDFIQuote::clear_selldirtyprice() {
  selldirtyprice_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDFIQuote::selldirtyprice() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.SellDirtyPrice)
  return selldirtyprice_;
}
inline void MDFIQuote::set_selldirtyprice(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  selldirtyprice_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.SellDirtyPrice)
}

// int64 SellMaturityYield = 39;
inline void MDFIQuote::clear_sellmaturityyield() {
  sellmaturityyield_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDFIQuote::sellmaturityyield() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.SellMaturityYield)
  return sellmaturityyield_;
}
inline void MDFIQuote::set_sellmaturityyield(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  sellmaturityyield_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.SellMaturityYield)
}

// string SellQuoteComment = 40;
inline void MDFIQuote::clear_sellquotecomment() {
  sellquotecomment_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MDFIQuote::sellquotecomment() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.SellQuoteComment)
  return sellquotecomment_.GetNoArena();
}
inline void MDFIQuote::set_sellquotecomment(const std::string& value) {
  
  sellquotecomment_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.SellQuoteComment)
}
inline void MDFIQuote::set_sellquotecomment(std::string&& value) {
  
  sellquotecomment_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.htsc.mdc.insight.model.MDFIQuote.SellQuoteComment)
}
inline void MDFIQuote::set_sellquotecomment(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sellquotecomment_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.MDFIQuote.SellQuoteComment)
}
inline void MDFIQuote::set_sellquotecomment(const char* value, size_t size) {
  
  sellquotecomment_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.MDFIQuote.SellQuoteComment)
}
inline std::string* MDFIQuote::mutable_sellquotecomment() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.MDFIQuote.SellQuoteComment)
  return sellquotecomment_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MDFIQuote::release_sellquotecomment() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.MDFIQuote.SellQuoteComment)
  
  return sellquotecomment_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MDFIQuote::set_allocated_sellquotecomment(std::string* sellquotecomment) {
  if (sellquotecomment != nullptr) {
    
  } else {
    
  }
  sellquotecomment_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sellquotecomment);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.MDFIQuote.SellQuoteComment)
}

// int32 SellQuoteType = 41;
inline void MDFIQuote::clear_sellquotetype() {
  sellquotetype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDFIQuote::sellquotetype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.SellQuoteType)
  return sellquotetype_;
}
inline void MDFIQuote::set_sellquotetype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  sellquotetype_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.SellQuoteType)
}

// int32 SellBargainType = 42;
inline void MDFIQuote::clear_sellbargaintype() {
  sellbargaintype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDFIQuote::sellbargaintype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.SellBargainType)
  return sellbargaintype_;
}
inline void MDFIQuote::set_sellbargaintype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  sellbargaintype_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.SellBargainType)
}

// int32 SellRelationType = 43;
inline void MDFIQuote::clear_sellrelationtype() {
  sellrelationtype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDFIQuote::sellrelationtype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.SellRelationType)
  return sellrelationtype_;
}
inline void MDFIQuote::set_sellrelationtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  sellrelationtype_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.SellRelationType)
}

// int32 SellExerciseType = 44;
inline void MDFIQuote::clear_sellexercisetype() {
  sellexercisetype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDFIQuote::sellexercisetype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.SellExerciseType)
  return sellexercisetype_;
}
inline void MDFIQuote::set_sellexercisetype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  sellexercisetype_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.SellExerciseType)
}

// int32 SellYieldType = 45;
inline void MDFIQuote::clear_sellyieldtype() {
  sellyieldtype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDFIQuote::sellyieldtype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.SellYieldType)
  return sellyieldtype_;
}
inline void MDFIQuote::set_sellyieldtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  sellyieldtype_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.SellYieldType)
}

// int32 DataMultiplePowerOf10 = 46;
inline void MDFIQuote::clear_datamultiplepowerof10() {
  datamultiplepowerof10_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDFIQuote::datamultiplepowerof10() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.MDFIQuote.DataMultiplePowerOf10)
  return datamultiplepowerof10_;
}
inline void MDFIQuote::set_datamultiplepowerof10(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  datamultiplepowerof10_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.MDFIQuote.DataMultiplePowerOf10)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_MDFIQuote_2eproto

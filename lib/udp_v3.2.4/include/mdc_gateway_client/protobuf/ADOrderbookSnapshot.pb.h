// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ADOrderbookSnapshot.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ADOrderbookSnapshot_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ADOrderbookSnapshot_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3008000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3008000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "ESecurityType.pb.h"
#include "ESecurityIDSource.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ADOrderbookSnapshot_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ADOrderbookSnapshot_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ADOrderbookSnapshot_2eproto;
namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {
class ADEntryDetail;
class ADEntryDetailDefaultTypeInternal;
extern ADEntryDetailDefaultTypeInternal _ADEntryDetail_default_instance_;
class ADOrderbookSnapshot;
class ADOrderbookSnapshotDefaultTypeInternal;
extern ADOrderbookSnapshotDefaultTypeInternal _ADOrderbookSnapshot_default_instance_;
}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> ::com::htsc::mdc::insight::model::ADEntryDetail* Arena::CreateMaybeMessage<::com::htsc::mdc::insight::model::ADEntryDetail>(Arena*);
template<> ::com::htsc::mdc::insight::model::ADOrderbookSnapshot* Arena::CreateMaybeMessage<::com::htsc::mdc::insight::model::ADOrderbookSnapshot>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace com {
namespace htsc {
namespace mdc {
namespace insight {
namespace model {

// ===================================================================

class ADOrderbookSnapshot :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.htsc.mdc.insight.model.ADOrderbookSnapshot) */ {
 public:
  ADOrderbookSnapshot();
  virtual ~ADOrderbookSnapshot();

  ADOrderbookSnapshot(const ADOrderbookSnapshot& from);
  ADOrderbookSnapshot(ADOrderbookSnapshot&& from) noexcept
    : ADOrderbookSnapshot() {
    *this = ::std::move(from);
  }

  inline ADOrderbookSnapshot& operator=(const ADOrderbookSnapshot& from) {
    CopyFrom(from);
    return *this;
  }
  inline ADOrderbookSnapshot& operator=(ADOrderbookSnapshot&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ADOrderbookSnapshot& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ADOrderbookSnapshot* internal_default_instance() {
    return reinterpret_cast<const ADOrderbookSnapshot*>(
               &_ADOrderbookSnapshot_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ADOrderbookSnapshot* other);
  friend void swap(ADOrderbookSnapshot& a, ADOrderbookSnapshot& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ADOrderbookSnapshot* New() const final {
    return CreateMaybeMessage<ADOrderbookSnapshot>(nullptr);
  }

  ADOrderbookSnapshot* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ADOrderbookSnapshot>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ADOrderbookSnapshot& from);
  void MergeFrom(const ADOrderbookSnapshot& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ADOrderbookSnapshot* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.htsc.mdc.insight.model.ADOrderbookSnapshot";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ADOrderbookSnapshot_2eproto);
    return ::descriptor_table_ADOrderbookSnapshot_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.htsc.mdc.insight.model.ADEntryDetail BuyEntries = 30;
  int buyentries_size() const;
  void clear_buyentries();
  static const int kBuyEntriesFieldNumber = 30;
  ::com::htsc::mdc::insight::model::ADEntryDetail* mutable_buyentries(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADEntryDetail >*
      mutable_buyentries();
  const ::com::htsc::mdc::insight::model::ADEntryDetail& buyentries(int index) const;
  ::com::htsc::mdc::insight::model::ADEntryDetail* add_buyentries();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADEntryDetail >&
      buyentries() const;

  // repeated .com.htsc.mdc.insight.model.ADEntryDetail SellEntries = 31;
  int sellentries_size() const;
  void clear_sellentries();
  static const int kSellEntriesFieldNumber = 31;
  ::com::htsc::mdc::insight::model::ADEntryDetail* mutable_sellentries(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADEntryDetail >*
      mutable_sellentries();
  const ::com::htsc::mdc::insight::model::ADEntryDetail& sellentries(int index) const;
  ::com::htsc::mdc::insight::model::ADEntryDetail* add_sellentries();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADEntryDetail >&
      sellentries() const;

  // repeated int64 BuyMarketOrders = 32 [packed = true];
  int buymarketorders_size() const;
  void clear_buymarketorders();
  static const int kBuyMarketOrdersFieldNumber = 32;
  ::PROTOBUF_NAMESPACE_ID::int64 buymarketorders(int index) const;
  void set_buymarketorders(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_buymarketorders(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      buymarketorders() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_buymarketorders();

  // repeated int64 SellMarketOrders = 33 [packed = true];
  int sellmarketorders_size() const;
  void clear_sellmarketorders();
  static const int kSellMarketOrdersFieldNumber = 33;
  ::PROTOBUF_NAMESPACE_ID::int64 sellmarketorders(int index) const;
  void set_sellmarketorders(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_sellmarketorders(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      sellmarketorders() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_sellmarketorders();

  // repeated .com.htsc.mdc.insight.model.ADEntryDetail afterMatchedBuyEntries = 34;
  int aftermatchedbuyentries_size() const;
  void clear_aftermatchedbuyentries();
  static const int kAfterMatchedBuyEntriesFieldNumber = 34;
  ::com::htsc::mdc::insight::model::ADEntryDetail* mutable_aftermatchedbuyentries(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADEntryDetail >*
      mutable_aftermatchedbuyentries();
  const ::com::htsc::mdc::insight::model::ADEntryDetail& aftermatchedbuyentries(int index) const;
  ::com::htsc::mdc::insight::model::ADEntryDetail* add_aftermatchedbuyentries();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADEntryDetail >&
      aftermatchedbuyentries() const;

  // repeated .com.htsc.mdc.insight.model.ADEntryDetail afterMatchedSellEntries = 35;
  int aftermatchedsellentries_size() const;
  void clear_aftermatchedsellentries();
  static const int kAfterMatchedSellEntriesFieldNumber = 35;
  ::com::htsc::mdc::insight::model::ADEntryDetail* mutable_aftermatchedsellentries(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADEntryDetail >*
      mutable_aftermatchedsellentries();
  const ::com::htsc::mdc::insight::model::ADEntryDetail& aftermatchedsellentries(int index) const;
  ::com::htsc::mdc::insight::model::ADEntryDetail* add_aftermatchedsellentries();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADEntryDetail >&
      aftermatchedsellentries() const;

  // string HTSCSecurityID = 1;
  void clear_htscsecurityid();
  static const int kHTSCSecurityIDFieldNumber = 1;
  const std::string& htscsecurityid() const;
  void set_htscsecurityid(const std::string& value);
  void set_htscsecurityid(std::string&& value);
  void set_htscsecurityid(const char* value);
  void set_htscsecurityid(const char* value, size_t size);
  std::string* mutable_htscsecurityid();
  std::string* release_htscsecurityid();
  void set_allocated_htscsecurityid(std::string* htscsecurityid);

  // string TradingPhaseCode = 5;
  void clear_tradingphasecode();
  static const int kTradingPhaseCodeFieldNumber = 5;
  const std::string& tradingphasecode() const;
  void set_tradingphasecode(const std::string& value);
  void set_tradingphasecode(std::string&& value);
  void set_tradingphasecode(const char* value);
  void set_tradingphasecode(const char* value, size_t size);
  std::string* mutable_tradingphasecode();
  std::string* release_tradingphasecode();
  void set_allocated_tradingphasecode(std::string* tradingphasecode);

  // int32 MDDate = 2;
  void clear_mddate();
  static const int kMDDateFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int32 mddate() const;
  void set_mddate(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 MDTime = 3;
  void clear_mdtime();
  static const int kMDTimeFieldNumber = 3;
  ::PROTOBUF_NAMESPACE_ID::int32 mdtime() const;
  void set_mdtime(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int64 DataTimestamp = 4;
  void clear_datatimestamp();
  static const int kDataTimestampFieldNumber = 4;
  ::PROTOBUF_NAMESPACE_ID::int64 datatimestamp() const;
  void set_datatimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);

  // .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
  void clear_securityidsource();
  static const int kSecurityIDSourceFieldNumber = 6;
  ::com::htsc::mdc::model::ESecurityIDSource securityidsource() const;
  void set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value);

  // .com.htsc.mdc.model.ESecurityType securityType = 7;
  void clear_securitytype();
  static const int kSecurityTypeFieldNumber = 7;
  ::com::htsc::mdc::model::ESecurityType securitytype() const;
  void set_securitytype(::com::htsc::mdc::model::ESecurityType value);

  // int64 ApplSeqNum = 9;
  void clear_applseqnum();
  static const int kApplSeqNumFieldNumber = 9;
  ::PROTOBUF_NAMESPACE_ID::int64 applseqnum() const;
  void set_applseqnum(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 SnapshotMDDateTime = 10;
  void clear_snapshotmddatetime();
  static const int kSnapshotMDDateTimeFieldNumber = 10;
  ::PROTOBUF_NAMESPACE_ID::int64 snapshotmddatetime() const;
  void set_snapshotmddatetime(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 NumTrades = 11;
  void clear_numtrades();
  static const int kNumTradesFieldNumber = 11;
  ::PROTOBUF_NAMESPACE_ID::int64 numtrades() const;
  void set_numtrades(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 TotalVolumeTrade = 12;
  void clear_totalvolumetrade();
  static const int kTotalVolumeTradeFieldNumber = 12;
  ::PROTOBUF_NAMESPACE_ID::int64 totalvolumetrade() const;
  void set_totalvolumetrade(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 TotalValueTrade = 13;
  void clear_totalvaluetrade();
  static const int kTotalValueTradeFieldNumber = 13;
  ::PROTOBUF_NAMESPACE_ID::int64 totalvaluetrade() const;
  void set_totalvaluetrade(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 LastPx = 14;
  void clear_lastpx();
  static const int kLastPxFieldNumber = 14;
  ::PROTOBUF_NAMESPACE_ID::int64 lastpx() const;
  void set_lastpx(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int32 ChannelNo = 8;
  void clear_channelno();
  static const int kChannelNoFieldNumber = 8;
  ::PROTOBUF_NAMESPACE_ID::int32 channelno() const;
  void set_channelno(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 NumBuyOrders = 25;
  void clear_numbuyorders();
  static const int kNumBuyOrdersFieldNumber = 25;
  ::PROTOBUF_NAMESPACE_ID::int32 numbuyorders() const;
  void set_numbuyorders(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int64 HighPx = 17;
  void clear_highpx();
  static const int kHighPxFieldNumber = 17;
  ::PROTOBUF_NAMESPACE_ID::int64 highpx() const;
  void set_highpx(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 LowPx = 18;
  void clear_lowpx();
  static const int kLowPxFieldNumber = 18;
  ::PROTOBUF_NAMESPACE_ID::int64 lowpx() const;
  void set_lowpx(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 TotalBuyQty = 19;
  void clear_totalbuyqty();
  static const int kTotalBuyQtyFieldNumber = 19;
  ::PROTOBUF_NAMESPACE_ID::int64 totalbuyqty() const;
  void set_totalbuyqty(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 TotalSellQty = 20;
  void clear_totalsellqty();
  static const int kTotalSellQtyFieldNumber = 20;
  ::PROTOBUF_NAMESPACE_ID::int64 totalsellqty() const;
  void set_totalsellqty(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 WeightedAvgBuyPx = 21;
  void clear_weightedavgbuypx();
  static const int kWeightedAvgBuyPxFieldNumber = 21;
  ::PROTOBUF_NAMESPACE_ID::int64 weightedavgbuypx() const;
  void set_weightedavgbuypx(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 WeightedAvgSellPx = 22;
  void clear_weightedavgsellpx();
  static const int kWeightedAvgSellPxFieldNumber = 22;
  ::PROTOBUF_NAMESPACE_ID::int64 weightedavgsellpx() const;
  void set_weightedavgsellpx(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 TotalBuyNumber = 23;
  void clear_totalbuynumber();
  static const int kTotalBuyNumberFieldNumber = 23;
  ::PROTOBUF_NAMESPACE_ID::int64 totalbuynumber() const;
  void set_totalbuynumber(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 TotalSellNumber = 24;
  void clear_totalsellnumber();
  static const int kTotalSellNumberFieldNumber = 24;
  ::PROTOBUF_NAMESPACE_ID::int64 totalsellnumber() const;
  void set_totalsellnumber(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int32 NumSellOrders = 26;
  void clear_numsellorders();
  static const int kNumSellOrdersFieldNumber = 26;
  ::PROTOBUF_NAMESPACE_ID::int32 numsellorders() const;
  void set_numsellorders(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 ExchangeDate = 27;
  void clear_exchangedate();
  static const int kExchangeDateFieldNumber = 27;
  ::PROTOBUF_NAMESPACE_ID::int32 exchangedate() const;
  void set_exchangedate(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 ExchangeTime = 28;
  void clear_exchangetime();
  static const int kExchangeTimeFieldNumber = 28;
  ::PROTOBUF_NAMESPACE_ID::int32 exchangetime() const;
  void set_exchangetime(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 DataMultiplePowerOf10 = 36;
  void clear_datamultiplepowerof10();
  static const int kDataMultiplePowerOf10FieldNumber = 36;
  ::PROTOBUF_NAMESPACE_ID::int32 datamultiplepowerof10() const;
  void set_datamultiplepowerof10(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.htsc.mdc.insight.model.ADOrderbookSnapshot)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADEntryDetail > buyentries_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADEntryDetail > sellentries_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > buymarketorders_;
  mutable std::atomic<int> _buymarketorders_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > sellmarketorders_;
  mutable std::atomic<int> _sellmarketorders_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADEntryDetail > aftermatchedbuyentries_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADEntryDetail > aftermatchedsellentries_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr htscsecurityid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tradingphasecode_;
  ::PROTOBUF_NAMESPACE_ID::int32 mddate_;
  ::PROTOBUF_NAMESPACE_ID::int32 mdtime_;
  ::PROTOBUF_NAMESPACE_ID::int64 datatimestamp_;
  int securityidsource_;
  int securitytype_;
  ::PROTOBUF_NAMESPACE_ID::int64 applseqnum_;
  ::PROTOBUF_NAMESPACE_ID::int64 snapshotmddatetime_;
  ::PROTOBUF_NAMESPACE_ID::int64 numtrades_;
  ::PROTOBUF_NAMESPACE_ID::int64 totalvolumetrade_;
  ::PROTOBUF_NAMESPACE_ID::int64 totalvaluetrade_;
  ::PROTOBUF_NAMESPACE_ID::int64 lastpx_;
  ::PROTOBUF_NAMESPACE_ID::int32 channelno_;
  ::PROTOBUF_NAMESPACE_ID::int32 numbuyorders_;
  ::PROTOBUF_NAMESPACE_ID::int64 highpx_;
  ::PROTOBUF_NAMESPACE_ID::int64 lowpx_;
  ::PROTOBUF_NAMESPACE_ID::int64 totalbuyqty_;
  ::PROTOBUF_NAMESPACE_ID::int64 totalsellqty_;
  ::PROTOBUF_NAMESPACE_ID::int64 weightedavgbuypx_;
  ::PROTOBUF_NAMESPACE_ID::int64 weightedavgsellpx_;
  ::PROTOBUF_NAMESPACE_ID::int64 totalbuynumber_;
  ::PROTOBUF_NAMESPACE_ID::int64 totalsellnumber_;
  ::PROTOBUF_NAMESPACE_ID::int32 numsellorders_;
  ::PROTOBUF_NAMESPACE_ID::int32 exchangedate_;
  ::PROTOBUF_NAMESPACE_ID::int32 exchangetime_;
  ::PROTOBUF_NAMESPACE_ID::int32 datamultiplepowerof10_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ADOrderbookSnapshot_2eproto;
};
// -------------------------------------------------------------------

class ADEntryDetail :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.htsc.mdc.insight.model.ADEntryDetail) */ {
 public:
  ADEntryDetail();
  virtual ~ADEntryDetail();

  ADEntryDetail(const ADEntryDetail& from);
  ADEntryDetail(ADEntryDetail&& from) noexcept
    : ADEntryDetail() {
    *this = ::std::move(from);
  }

  inline ADEntryDetail& operator=(const ADEntryDetail& from) {
    CopyFrom(from);
    return *this;
  }
  inline ADEntryDetail& operator=(ADEntryDetail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ADEntryDetail& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ADEntryDetail* internal_default_instance() {
    return reinterpret_cast<const ADEntryDetail*>(
               &_ADEntryDetail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ADEntryDetail* other);
  friend void swap(ADEntryDetail& a, ADEntryDetail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ADEntryDetail* New() const final {
    return CreateMaybeMessage<ADEntryDetail>(nullptr);
  }

  ADEntryDetail* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ADEntryDetail>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ADEntryDetail& from);
  void MergeFrom(const ADEntryDetail& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ADEntryDetail* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.htsc.mdc.insight.model.ADEntryDetail";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ADOrderbookSnapshot_2eproto);
    return ::descriptor_table_ADOrderbookSnapshot_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 OrderQtyList = 5 [packed = true];
  int orderqtylist_size() const;
  void clear_orderqtylist();
  static const int kOrderQtyListFieldNumber = 5;
  ::PROTOBUF_NAMESPACE_ID::int32 orderqtylist(int index) const;
  void set_orderqtylist(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_orderqtylist(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      orderqtylist() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_orderqtylist();

  // int64 Price = 2;
  void clear_price();
  static const int kPriceFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int64 price() const;
  void set_price(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int32 Level = 1;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 TotalQty = 3;
  void clear_totalqty();
  static const int kTotalQtyFieldNumber = 3;
  ::PROTOBUF_NAMESPACE_ID::int32 totalqty() const;
  void set_totalqty(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 NumberOfOrders = 4;
  void clear_numberoforders();
  static const int kNumberOfOrdersFieldNumber = 4;
  ::PROTOBUF_NAMESPACE_ID::int32 numberoforders() const;
  void set_numberoforders(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.htsc.mdc.insight.model.ADEntryDetail)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > orderqtylist_;
  mutable std::atomic<int> _orderqtylist_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 price_;
  ::PROTOBUF_NAMESPACE_ID::int32 level_;
  ::PROTOBUF_NAMESPACE_ID::int32 totalqty_;
  ::PROTOBUF_NAMESPACE_ID::int32 numberoforders_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ADOrderbookSnapshot_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ADOrderbookSnapshot

// string HTSCSecurityID = 1;
inline void ADOrderbookSnapshot::clear_htscsecurityid() {
  htscsecurityid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ADOrderbookSnapshot::htscsecurityid() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.HTSCSecurityID)
  return htscsecurityid_.GetNoArena();
}
inline void ADOrderbookSnapshot::set_htscsecurityid(const std::string& value) {
  
  htscsecurityid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.HTSCSecurityID)
}
inline void ADOrderbookSnapshot::set_htscsecurityid(std::string&& value) {
  
  htscsecurityid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.htsc.mdc.insight.model.ADOrderbookSnapshot.HTSCSecurityID)
}
inline void ADOrderbookSnapshot::set_htscsecurityid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  htscsecurityid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.ADOrderbookSnapshot.HTSCSecurityID)
}
inline void ADOrderbookSnapshot::set_htscsecurityid(const char* value, size_t size) {
  
  htscsecurityid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.ADOrderbookSnapshot.HTSCSecurityID)
}
inline std::string* ADOrderbookSnapshot::mutable_htscsecurityid() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADOrderbookSnapshot.HTSCSecurityID)
  return htscsecurityid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ADOrderbookSnapshot::release_htscsecurityid() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.ADOrderbookSnapshot.HTSCSecurityID)
  
  return htscsecurityid_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ADOrderbookSnapshot::set_allocated_htscsecurityid(std::string* htscsecurityid) {
  if (htscsecurityid != nullptr) {
    
  } else {
    
  }
  htscsecurityid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), htscsecurityid);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.ADOrderbookSnapshot.HTSCSecurityID)
}

// int32 MDDate = 2;
inline void ADOrderbookSnapshot::clear_mddate() {
  mddate_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ADOrderbookSnapshot::mddate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.MDDate)
  return mddate_;
}
inline void ADOrderbookSnapshot::set_mddate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  mddate_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.MDDate)
}

// int32 MDTime = 3;
inline void ADOrderbookSnapshot::clear_mdtime() {
  mdtime_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ADOrderbookSnapshot::mdtime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.MDTime)
  return mdtime_;
}
inline void ADOrderbookSnapshot::set_mdtime(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  mdtime_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.MDTime)
}

// int64 DataTimestamp = 4;
inline void ADOrderbookSnapshot::clear_datatimestamp() {
  datatimestamp_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ADOrderbookSnapshot::datatimestamp() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.DataTimestamp)
  return datatimestamp_;
}
inline void ADOrderbookSnapshot::set_datatimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  datatimestamp_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.DataTimestamp)
}

// string TradingPhaseCode = 5;
inline void ADOrderbookSnapshot::clear_tradingphasecode() {
  tradingphasecode_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ADOrderbookSnapshot::tradingphasecode() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TradingPhaseCode)
  return tradingphasecode_.GetNoArena();
}
inline void ADOrderbookSnapshot::set_tradingphasecode(const std::string& value) {
  
  tradingphasecode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TradingPhaseCode)
}
inline void ADOrderbookSnapshot::set_tradingphasecode(std::string&& value) {
  
  tradingphasecode_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TradingPhaseCode)
}
inline void ADOrderbookSnapshot::set_tradingphasecode(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tradingphasecode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TradingPhaseCode)
}
inline void ADOrderbookSnapshot::set_tradingphasecode(const char* value, size_t size) {
  
  tradingphasecode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TradingPhaseCode)
}
inline std::string* ADOrderbookSnapshot::mutable_tradingphasecode() {
  
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TradingPhaseCode)
  return tradingphasecode_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ADOrderbookSnapshot::release_tradingphasecode() {
  // @@protoc_insertion_point(field_release:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TradingPhaseCode)
  
  return tradingphasecode_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ADOrderbookSnapshot::set_allocated_tradingphasecode(std::string* tradingphasecode) {
  if (tradingphasecode != nullptr) {
    
  } else {
    
  }
  tradingphasecode_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tradingphasecode);
  // @@protoc_insertion_point(field_set_allocated:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TradingPhaseCode)
}

// .com.htsc.mdc.model.ESecurityIDSource securityIDSource = 6;
inline void ADOrderbookSnapshot::clear_securityidsource() {
  securityidsource_ = 0;
}
inline ::com::htsc::mdc::model::ESecurityIDSource ADOrderbookSnapshot::securityidsource() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.securityIDSource)
  return static_cast< ::com::htsc::mdc::model::ESecurityIDSource >(securityidsource_);
}
inline void ADOrderbookSnapshot::set_securityidsource(::com::htsc::mdc::model::ESecurityIDSource value) {
  
  securityidsource_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.securityIDSource)
}

// .com.htsc.mdc.model.ESecurityType securityType = 7;
inline void ADOrderbookSnapshot::clear_securitytype() {
  securitytype_ = 0;
}
inline ::com::htsc::mdc::model::ESecurityType ADOrderbookSnapshot::securitytype() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.securityType)
  return static_cast< ::com::htsc::mdc::model::ESecurityType >(securitytype_);
}
inline void ADOrderbookSnapshot::set_securitytype(::com::htsc::mdc::model::ESecurityType value) {
  
  securitytype_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.securityType)
}

// int32 ChannelNo = 8;
inline void ADOrderbookSnapshot::clear_channelno() {
  channelno_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ADOrderbookSnapshot::channelno() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.ChannelNo)
  return channelno_;
}
inline void ADOrderbookSnapshot::set_channelno(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  channelno_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.ChannelNo)
}

// int64 ApplSeqNum = 9;
inline void ADOrderbookSnapshot::clear_applseqnum() {
  applseqnum_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ADOrderbookSnapshot::applseqnum() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.ApplSeqNum)
  return applseqnum_;
}
inline void ADOrderbookSnapshot::set_applseqnum(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  applseqnum_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.ApplSeqNum)
}

// int64 SnapshotMDDateTime = 10;
inline void ADOrderbookSnapshot::clear_snapshotmddatetime() {
  snapshotmddatetime_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ADOrderbookSnapshot::snapshotmddatetime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.SnapshotMDDateTime)
  return snapshotmddatetime_;
}
inline void ADOrderbookSnapshot::set_snapshotmddatetime(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  snapshotmddatetime_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.SnapshotMDDateTime)
}

// int64 NumTrades = 11;
inline void ADOrderbookSnapshot::clear_numtrades() {
  numtrades_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ADOrderbookSnapshot::numtrades() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.NumTrades)
  return numtrades_;
}
inline void ADOrderbookSnapshot::set_numtrades(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  numtrades_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.NumTrades)
}

// int64 TotalVolumeTrade = 12;
inline void ADOrderbookSnapshot::clear_totalvolumetrade() {
  totalvolumetrade_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ADOrderbookSnapshot::totalvolumetrade() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TotalVolumeTrade)
  return totalvolumetrade_;
}
inline void ADOrderbookSnapshot::set_totalvolumetrade(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  totalvolumetrade_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TotalVolumeTrade)
}

// int64 TotalValueTrade = 13;
inline void ADOrderbookSnapshot::clear_totalvaluetrade() {
  totalvaluetrade_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ADOrderbookSnapshot::totalvaluetrade() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TotalValueTrade)
  return totalvaluetrade_;
}
inline void ADOrderbookSnapshot::set_totalvaluetrade(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  totalvaluetrade_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TotalValueTrade)
}

// int64 LastPx = 14;
inline void ADOrderbookSnapshot::clear_lastpx() {
  lastpx_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ADOrderbookSnapshot::lastpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.LastPx)
  return lastpx_;
}
inline void ADOrderbookSnapshot::set_lastpx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  lastpx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.LastPx)
}

// int64 HighPx = 17;
inline void ADOrderbookSnapshot::clear_highpx() {
  highpx_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ADOrderbookSnapshot::highpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.HighPx)
  return highpx_;
}
inline void ADOrderbookSnapshot::set_highpx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  highpx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.HighPx)
}

// int64 LowPx = 18;
inline void ADOrderbookSnapshot::clear_lowpx() {
  lowpx_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ADOrderbookSnapshot::lowpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.LowPx)
  return lowpx_;
}
inline void ADOrderbookSnapshot::set_lowpx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  lowpx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.LowPx)
}

// int64 TotalBuyQty = 19;
inline void ADOrderbookSnapshot::clear_totalbuyqty() {
  totalbuyqty_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ADOrderbookSnapshot::totalbuyqty() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TotalBuyQty)
  return totalbuyqty_;
}
inline void ADOrderbookSnapshot::set_totalbuyqty(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  totalbuyqty_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TotalBuyQty)
}

// int64 TotalSellQty = 20;
inline void ADOrderbookSnapshot::clear_totalsellqty() {
  totalsellqty_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ADOrderbookSnapshot::totalsellqty() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TotalSellQty)
  return totalsellqty_;
}
inline void ADOrderbookSnapshot::set_totalsellqty(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  totalsellqty_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TotalSellQty)
}

// int64 WeightedAvgBuyPx = 21;
inline void ADOrderbookSnapshot::clear_weightedavgbuypx() {
  weightedavgbuypx_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ADOrderbookSnapshot::weightedavgbuypx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.WeightedAvgBuyPx)
  return weightedavgbuypx_;
}
inline void ADOrderbookSnapshot::set_weightedavgbuypx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  weightedavgbuypx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.WeightedAvgBuyPx)
}

// int64 WeightedAvgSellPx = 22;
inline void ADOrderbookSnapshot::clear_weightedavgsellpx() {
  weightedavgsellpx_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ADOrderbookSnapshot::weightedavgsellpx() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.WeightedAvgSellPx)
  return weightedavgsellpx_;
}
inline void ADOrderbookSnapshot::set_weightedavgsellpx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  weightedavgsellpx_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.WeightedAvgSellPx)
}

// int64 TotalBuyNumber = 23;
inline void ADOrderbookSnapshot::clear_totalbuynumber() {
  totalbuynumber_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ADOrderbookSnapshot::totalbuynumber() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TotalBuyNumber)
  return totalbuynumber_;
}
inline void ADOrderbookSnapshot::set_totalbuynumber(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  totalbuynumber_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TotalBuyNumber)
}

// int64 TotalSellNumber = 24;
inline void ADOrderbookSnapshot::clear_totalsellnumber() {
  totalsellnumber_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ADOrderbookSnapshot::totalsellnumber() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TotalSellNumber)
  return totalsellnumber_;
}
inline void ADOrderbookSnapshot::set_totalsellnumber(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  totalsellnumber_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.TotalSellNumber)
}

// int32 NumBuyOrders = 25;
inline void ADOrderbookSnapshot::clear_numbuyorders() {
  numbuyorders_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ADOrderbookSnapshot::numbuyorders() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.NumBuyOrders)
  return numbuyorders_;
}
inline void ADOrderbookSnapshot::set_numbuyorders(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  numbuyorders_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.NumBuyOrders)
}

// int32 NumSellOrders = 26;
inline void ADOrderbookSnapshot::clear_numsellorders() {
  numsellorders_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ADOrderbookSnapshot::numsellorders() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.NumSellOrders)
  return numsellorders_;
}
inline void ADOrderbookSnapshot::set_numsellorders(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  numsellorders_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.NumSellOrders)
}

// int32 ExchangeDate = 27;
inline void ADOrderbookSnapshot::clear_exchangedate() {
  exchangedate_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ADOrderbookSnapshot::exchangedate() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.ExchangeDate)
  return exchangedate_;
}
inline void ADOrderbookSnapshot::set_exchangedate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  exchangedate_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.ExchangeDate)
}

// int32 ExchangeTime = 28;
inline void ADOrderbookSnapshot::clear_exchangetime() {
  exchangetime_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ADOrderbookSnapshot::exchangetime() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.ExchangeTime)
  return exchangetime_;
}
inline void ADOrderbookSnapshot::set_exchangetime(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  exchangetime_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.ExchangeTime)
}

// repeated .com.htsc.mdc.insight.model.ADEntryDetail BuyEntries = 30;
inline int ADOrderbookSnapshot::buyentries_size() const {
  return buyentries_.size();
}
inline void ADOrderbookSnapshot::clear_buyentries() {
  buyentries_.Clear();
}
inline ::com::htsc::mdc::insight::model::ADEntryDetail* ADOrderbookSnapshot::mutable_buyentries(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADOrderbookSnapshot.BuyEntries)
  return buyentries_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADEntryDetail >*
ADOrderbookSnapshot::mutable_buyentries() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.ADOrderbookSnapshot.BuyEntries)
  return &buyentries_;
}
inline const ::com::htsc::mdc::insight::model::ADEntryDetail& ADOrderbookSnapshot::buyentries(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.BuyEntries)
  return buyentries_.Get(index);
}
inline ::com::htsc::mdc::insight::model::ADEntryDetail* ADOrderbookSnapshot::add_buyentries() {
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.ADOrderbookSnapshot.BuyEntries)
  return buyentries_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADEntryDetail >&
ADOrderbookSnapshot::buyentries() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.ADOrderbookSnapshot.BuyEntries)
  return buyentries_;
}

// repeated .com.htsc.mdc.insight.model.ADEntryDetail SellEntries = 31;
inline int ADOrderbookSnapshot::sellentries_size() const {
  return sellentries_.size();
}
inline void ADOrderbookSnapshot::clear_sellentries() {
  sellentries_.Clear();
}
inline ::com::htsc::mdc::insight::model::ADEntryDetail* ADOrderbookSnapshot::mutable_sellentries(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADOrderbookSnapshot.SellEntries)
  return sellentries_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADEntryDetail >*
ADOrderbookSnapshot::mutable_sellentries() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.ADOrderbookSnapshot.SellEntries)
  return &sellentries_;
}
inline const ::com::htsc::mdc::insight::model::ADEntryDetail& ADOrderbookSnapshot::sellentries(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.SellEntries)
  return sellentries_.Get(index);
}
inline ::com::htsc::mdc::insight::model::ADEntryDetail* ADOrderbookSnapshot::add_sellentries() {
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.ADOrderbookSnapshot.SellEntries)
  return sellentries_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADEntryDetail >&
ADOrderbookSnapshot::sellentries() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.ADOrderbookSnapshot.SellEntries)
  return sellentries_;
}

// repeated int64 BuyMarketOrders = 32 [packed = true];
inline int ADOrderbookSnapshot::buymarketorders_size() const {
  return buymarketorders_.size();
}
inline void ADOrderbookSnapshot::clear_buymarketorders() {
  buymarketorders_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ADOrderbookSnapshot::buymarketorders(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.BuyMarketOrders)
  return buymarketorders_.Get(index);
}
inline void ADOrderbookSnapshot::set_buymarketorders(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  buymarketorders_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.BuyMarketOrders)
}
inline void ADOrderbookSnapshot::add_buymarketorders(::PROTOBUF_NAMESPACE_ID::int64 value) {
  buymarketorders_.Add(value);
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.ADOrderbookSnapshot.BuyMarketOrders)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
ADOrderbookSnapshot::buymarketorders() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.ADOrderbookSnapshot.BuyMarketOrders)
  return buymarketorders_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
ADOrderbookSnapshot::mutable_buymarketorders() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.ADOrderbookSnapshot.BuyMarketOrders)
  return &buymarketorders_;
}

// repeated int64 SellMarketOrders = 33 [packed = true];
inline int ADOrderbookSnapshot::sellmarketorders_size() const {
  return sellmarketorders_.size();
}
inline void ADOrderbookSnapshot::clear_sellmarketorders() {
  sellmarketorders_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ADOrderbookSnapshot::sellmarketorders(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.SellMarketOrders)
  return sellmarketorders_.Get(index);
}
inline void ADOrderbookSnapshot::set_sellmarketorders(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  sellmarketorders_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.SellMarketOrders)
}
inline void ADOrderbookSnapshot::add_sellmarketorders(::PROTOBUF_NAMESPACE_ID::int64 value) {
  sellmarketorders_.Add(value);
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.ADOrderbookSnapshot.SellMarketOrders)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
ADOrderbookSnapshot::sellmarketorders() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.ADOrderbookSnapshot.SellMarketOrders)
  return sellmarketorders_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
ADOrderbookSnapshot::mutable_sellmarketorders() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.ADOrderbookSnapshot.SellMarketOrders)
  return &sellmarketorders_;
}

// repeated .com.htsc.mdc.insight.model.ADEntryDetail afterMatchedBuyEntries = 34;
inline int ADOrderbookSnapshot::aftermatchedbuyentries_size() const {
  return aftermatchedbuyentries_.size();
}
inline void ADOrderbookSnapshot::clear_aftermatchedbuyentries() {
  aftermatchedbuyentries_.Clear();
}
inline ::com::htsc::mdc::insight::model::ADEntryDetail* ADOrderbookSnapshot::mutable_aftermatchedbuyentries(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADOrderbookSnapshot.afterMatchedBuyEntries)
  return aftermatchedbuyentries_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADEntryDetail >*
ADOrderbookSnapshot::mutable_aftermatchedbuyentries() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.ADOrderbookSnapshot.afterMatchedBuyEntries)
  return &aftermatchedbuyentries_;
}
inline const ::com::htsc::mdc::insight::model::ADEntryDetail& ADOrderbookSnapshot::aftermatchedbuyentries(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.afterMatchedBuyEntries)
  return aftermatchedbuyentries_.Get(index);
}
inline ::com::htsc::mdc::insight::model::ADEntryDetail* ADOrderbookSnapshot::add_aftermatchedbuyentries() {
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.ADOrderbookSnapshot.afterMatchedBuyEntries)
  return aftermatchedbuyentries_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADEntryDetail >&
ADOrderbookSnapshot::aftermatchedbuyentries() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.ADOrderbookSnapshot.afterMatchedBuyEntries)
  return aftermatchedbuyentries_;
}

// repeated .com.htsc.mdc.insight.model.ADEntryDetail afterMatchedSellEntries = 35;
inline int ADOrderbookSnapshot::aftermatchedsellentries_size() const {
  return aftermatchedsellentries_.size();
}
inline void ADOrderbookSnapshot::clear_aftermatchedsellentries() {
  aftermatchedsellentries_.Clear();
}
inline ::com::htsc::mdc::insight::model::ADEntryDetail* ADOrderbookSnapshot::mutable_aftermatchedsellentries(int index) {
  // @@protoc_insertion_point(field_mutable:com.htsc.mdc.insight.model.ADOrderbookSnapshot.afterMatchedSellEntries)
  return aftermatchedsellentries_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADEntryDetail >*
ADOrderbookSnapshot::mutable_aftermatchedsellentries() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.ADOrderbookSnapshot.afterMatchedSellEntries)
  return &aftermatchedsellentries_;
}
inline const ::com::htsc::mdc::insight::model::ADEntryDetail& ADOrderbookSnapshot::aftermatchedsellentries(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.afterMatchedSellEntries)
  return aftermatchedsellentries_.Get(index);
}
inline ::com::htsc::mdc::insight::model::ADEntryDetail* ADOrderbookSnapshot::add_aftermatchedsellentries() {
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.ADOrderbookSnapshot.afterMatchedSellEntries)
  return aftermatchedsellentries_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::htsc::mdc::insight::model::ADEntryDetail >&
ADOrderbookSnapshot::aftermatchedsellentries() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.ADOrderbookSnapshot.afterMatchedSellEntries)
  return aftermatchedsellentries_;
}

// int32 DataMultiplePowerOf10 = 36;
inline void ADOrderbookSnapshot::clear_datamultiplepowerof10() {
  datamultiplepowerof10_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ADOrderbookSnapshot::datamultiplepowerof10() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADOrderbookSnapshot.DataMultiplePowerOf10)
  return datamultiplepowerof10_;
}
inline void ADOrderbookSnapshot::set_datamultiplepowerof10(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  datamultiplepowerof10_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADOrderbookSnapshot.DataMultiplePowerOf10)
}

// -------------------------------------------------------------------

// ADEntryDetail

// int32 Level = 1;
inline void ADEntryDetail::clear_level() {
  level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ADEntryDetail::level() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADEntryDetail.Level)
  return level_;
}
inline void ADEntryDetail::set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADEntryDetail.Level)
}

// int64 Price = 2;
inline void ADEntryDetail::clear_price() {
  price_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ADEntryDetail::price() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADEntryDetail.Price)
  return price_;
}
inline void ADEntryDetail::set_price(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADEntryDetail.Price)
}

// int32 TotalQty = 3;
inline void ADEntryDetail::clear_totalqty() {
  totalqty_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ADEntryDetail::totalqty() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADEntryDetail.TotalQty)
  return totalqty_;
}
inline void ADEntryDetail::set_totalqty(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  totalqty_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADEntryDetail.TotalQty)
}

// int32 NumberOfOrders = 4;
inline void ADEntryDetail::clear_numberoforders() {
  numberoforders_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ADEntryDetail::numberoforders() const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADEntryDetail.NumberOfOrders)
  return numberoforders_;
}
inline void ADEntryDetail::set_numberoforders(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  numberoforders_ = value;
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADEntryDetail.NumberOfOrders)
}

// repeated int32 OrderQtyList = 5 [packed = true];
inline int ADEntryDetail::orderqtylist_size() const {
  return orderqtylist_.size();
}
inline void ADEntryDetail::clear_orderqtylist() {
  orderqtylist_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ADEntryDetail::orderqtylist(int index) const {
  // @@protoc_insertion_point(field_get:com.htsc.mdc.insight.model.ADEntryDetail.OrderQtyList)
  return orderqtylist_.Get(index);
}
inline void ADEntryDetail::set_orderqtylist(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  orderqtylist_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.htsc.mdc.insight.model.ADEntryDetail.OrderQtyList)
}
inline void ADEntryDetail::add_orderqtylist(::PROTOBUF_NAMESPACE_ID::int32 value) {
  orderqtylist_.Add(value);
  // @@protoc_insertion_point(field_add:com.htsc.mdc.insight.model.ADEntryDetail.OrderQtyList)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
ADEntryDetail::orderqtylist() const {
  // @@protoc_insertion_point(field_list:com.htsc.mdc.insight.model.ADEntryDetail.OrderQtyList)
  return orderqtylist_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
ADEntryDetail::mutable_orderqtylist() {
  // @@protoc_insertion_point(field_mutable_list:com.htsc.mdc.insight.model.ADEntryDetail.OrderQtyList)
  return &orderqtylist_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace model
}  // namespace insight
}  // namespace mdc
}  // namespace htsc
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ADOrderbookSnapshot_2eproto
